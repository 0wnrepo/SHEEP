Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 12.96      0.35     0.35                             NTL::new_ifft_short1_flipped(unsigned long*, long, NTL::new_mod_t const&)
  7.78      0.56     0.21                             NTL::new_ifft_short1_notab(unsigned long*, long, long, NTL::new_mod_t const&, long, unsigned long, long, unsigned long)
  6.67      0.74     0.18                             NTL::FromModularRep(NTL::zz_p*, NTL::fftRep const&, long, long, NTL::zz_pInfoT*)
  4.81      0.87     0.13                             void NTL::default_BlockDestroy<long>(long*, long)
  4.07      0.98     0.11   254100     0.00     0.00  BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&)
  4.07      1.09     0.11                             NTL::RandomStream_impl::get_bytes(unsigned char*, long, long)
  3.70      1.19     0.10                             NTL::mul(NTL::fftRep&, NTL::fftRep const&, NTL::fftRep const&)
  3.33      1.28     0.09                             NTL::new_fft(long*, long const*, long, NTL::FFTPrimeInfo const&, long, long)
  3.33      1.37     0.09                             NTL::new_fft_short(unsigned long*, long, long, long, NTL::new_mod_t const&)
  2.96      1.45     0.08                             NTL::new_ifft(long*, long const*, long, NTL::FFTPrimeInfo const&, long)
  2.59      1.52     0.07   232000     0.00     0.00  Cmodulus::FFT_aux(NTL::Vec<long>&, NTL::zz_pX&) const
  2.59      1.59     0.07                             void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)
  2.22      1.65     0.06  1840800     0.00     0.00  GetTimerClock()
  2.22      1.71     0.06                             NTL::PowerMod(long, long, long)
  1.48      1.75     0.04                             NTL::PlainInvTrunc(NTL::zz_pX&, NTL::zz_pX const&, long)
  1.30      1.79     0.04                             _ntl_gmul(_ntl_gbigint_body*, _ntl_gbigint_body*, _ntl_gbigint_body**)
  0.74      1.81     0.02  1538800     0.00     0.00  std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&)
  0.74      1.83     0.02   785957     0.00     0.00  NTL::Vec<NTL::zz_p>::DoSetLength(long)
  0.74      1.85     0.02     9200     0.00     0.00  DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun)
  0.74      1.87     0.02                             _ntl_gcopy(_ntl_gbigint_body*, _ntl_gbigint_body**)
  0.74      1.89     0.02                             _ntl_general_rem_one_struct_apply(_ntl_gbigint_body*, long, _ntl_general_rem_one_struct*)
  0.74      1.91     0.02                             NTL::FromfftRep(NTL::zz_pX&, NTL::fftRep&, long, long)
  0.74      1.93     0.02                             NTL::TofftRep_trunc(NTL::fftRep&, NTL::zz_pX const&, long, long, long, long)
  0.74      1.95     0.02                             NTL::zz_pX::normalize()
  0.74      1.97     0.02                             NTL::PlainRem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&)
  0.74      1.99     0.02                             NTL::sha256_transform(NTL::SHA256_CTX&, unsigned char*)
  0.74      2.01     0.02                             std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*)
  0.74      2.03     0.02                             std::__detail::_Hash_node_value_base<std::pair<long const, NTL::Vec<long> > >::_M_valptr()
  0.37      2.04     0.01  2075300     0.00     0.00  IndexSet::next(long) const
  0.37      2.05     0.01  1855100     0.00     0.00  std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
  0.37      2.06     0.01  1726896     0.00     0.00  NTL::Vec<NTL::zz_p>::AllocateTo(long)
  0.37      2.07     0.01  1545500     0.00     0.00  IndexSet::contains(long) const
  0.37      2.08     0.01   895079     0.00     0.00  NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&)
  0.37      2.09     0.01    36300     0.00     0.00  auto_timer::stop()
  0.37      2.10     0.01     8200     0.00     0.02  DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&)
  0.37      2.11     0.01     7400     0.00     0.00  FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const
  0.37      2.12     0.01     6300     0.00     0.00  DoubleCRT::do_mul(DoubleCRT const&, bool)
  0.37      2.13     0.01     5600     0.00     0.00  DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool)
  0.37      2.14     0.01     4400     0.00     0.00  BluesteinInit(long, NTL::zz_p const&, NTL::zz_pX&, NTL::Vec<unsigned long>&, NTL::fftRep&)
  0.37      2.15     0.01     4400     0.00     0.00  sampleGaussian(NTL::ZZX&, long, double)
  0.37      2.16     0.01     3700     0.00     0.01  DoubleCRT::randomize(NTL::ZZ const*)
  0.37      2.17     0.01     3500     0.00     0.00  std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<DoubleCRT*, std::vector<DoubleCRT, std::allocator<DoubleCRT> > >, unsigned long, DoubleCRT const&)
  0.37      2.18     0.01     2600     0.00     0.01  DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const
  0.37      2.19     0.01      400     0.03     0.03  Cyclotomic(long)
  0.37      2.20     0.01                             _ntl_GetTime()
  0.37      2.21     0.01                             _ntl_gsetlength(_ntl_gbigint_body**, long)
  0.37      2.22     0.01                             _ntl_gblock_destroy(_ntl_gbigint_body*)
  0.37      2.23     0.01                             _ntl_rem_struct_fast::fetch()
  0.37      2.24     0.01                             NTL::KarSqr_long(NTL::zz_p*, NTL::zz_p const*, long, NTL::zz_p*)
  0.37      2.25     0.01                             NTL::scope_guard<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>::scope_guard({lambda()#1}&&, char const*)
  0.37      2.26     0.01                             NTL::mul_strassen(NTL::mat_window_zz_p const&, NTL::const_mat_window_zz_p const&, NTL::const_mat_window_zz_p const&)
  0.37      2.27     0.01                             NTL::FromModularRep(NTL::ZZ_p&, NTL::Vec<long>&, NTL::ZZ_pFFTInfoT const*, NTL::ZZ_pTmpSpaceT*)
  0.37      2.28     0.01                             NTL::NextPowerOfTwo(long)
  0.37      2.29     0.01                             NTL::RandomLen_long(long)
  0.37      2.30     0.01                             void NTL::default_BlockDestroy<NTL::ZZ>(NTL::ZZ*, long)
  0.37      2.31     0.01                             void NTL::BlockConstructFromVec<long>(long*, long, long const*)
  0.37      2.32     0.01                             NTL::FFTMulTabsDeleterPolicy::deleter(NTL::FFTMulTabs*)
  0.37      2.33     0.01                             NTL::ZZ::~ZZ()
  0.37      2.34     0.01                             NTL::Vec<long>::AllocateTo(long)
  0.37      2.35     0.01                             NTL::add(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&)
  0.37      2.36     0.01                             NTL::add(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&)
  0.37      2.37     0.01                             NTL::mul(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&)
  0.37      2.38     0.01                             NTL::conv(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::ZZ> const&)
  0.37      2.39     0.01                             NTL::conv(NTL::zz_pX&, long)
  0.37      2.40     0.01                             NTL::zz_p::FFTInit(long)
  0.37      2.41     0.01                             NTL::rem21(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&)
  0.37      2.42     0.01                             NTL::fftRep::operator=(NTL::fftRep const&)
  0.37      2.43     0.01                             NTL::random(NTL::Vec<NTL::zz_p>&, long)
  0.37      2.44     0.01                             NTL::PlainMul(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&)
  0.37      2.45     0.01                             NTL::PlainMul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&)
  0.37      2.46     0.01                             NTL::SetCoeff(NTL::zz_pX&, long, NTL::zz_p)
  0.37      2.47     0.01                             NTL::ProbPrime(long, long)
  0.37      2.48     0.01                             NTL::zz_pContext::restore() const
  0.37      2.49     0.01                             NTL::zz_pEContext::restore() const
  0.37      2.50     0.01                             NTL::Vec<long>::MaxLength() const
  0.37      2.51     0.01                             __gnu_cxx::__aligned_buffer<std::pair<long const, NTL::Vec<long> > >::_M_ptr() const
  0.37      2.52     0.01                             std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>::_M_next() const
  0.37      2.53     0.01                             std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
  0.37      2.54     0.01                             std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.37      2.55     0.01                             void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#1}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#1} const&)
  0.37      2.56     0.01                             long const& std::__pair_get<0ul>::__const_get<long const, NTL::Vec<long> >(std::pair<long const, NTL::Vec<long> > const&)
  0.37      2.57     0.01                             std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::_Bit_const_iterator, std::_Bit_iterator>(std::_Bit_const_iterator, std::_Bit_const_iterator, std::_Bit_iterator)
  0.37      2.58     0.01                             std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >&, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*, unsigned long)
  0.37      2.59     0.01                             std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_iterator const&)
  0.37      2.60     0.01                             std::pair<long const, NTL::Vec<long> >::pair(std::pair<long const, NTL::Vec<long> > const&)
  0.37      2.61     0.01                             std::__detail::_Equal_helper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, NTL::Vec<Ctxt> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, unsigned long, true>::_S_equals(std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, NTL::Vec<Ctxt> >, true>*)
  0.37      2.62     0.01                             void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}&& std::forward<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>(std::remove_reference<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>::type&)
  0.37      2.63     0.01                             std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>* std::addressof<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>&)
  0.19      2.63     0.01   308811     0.00     0.00  NTL::Vec<long>::DoSetLength(long)
  0.19      2.64     0.01    82300     0.00     0.00  DoubleCRTHelper::~DoubleCRTHelper()
  0.19      2.64     0.01    31800     0.00     0.00  DoubleCRTHelper::clone() const
  0.19      2.65     0.01     2400     0.00     0.00  NTL::Vec<NTL::GF2E>::FixLength(long)
  0.19      2.65     0.01      100     0.05     0.08  buildLinPolyMatrix(NTL::Mat<NTL::GF2E>&, long)
  0.19      2.66     0.01                             _ntl_ginvmod(_ntl_gbigint_body*, _ntl_gbigint_body*, _ntl_gbigint_body**)
  0.19      2.66     0.01                             pp_factorize(std::vector<long, std::allocator<long> >&, long)
  0.19      2.67     0.01                             FHEcontext::makeBootstrappable(NTL::Vec<long> const&, long, bool, bool)
  0.19      2.67     0.01                             NTL::scope_guard<void NTL::default_BlockConstructFromObj<Ctxt>(Ctxt*, long, Ctxt const&)::{lambda()#1}>::relax()
  0.19      2.68     0.01                             NTL::scope_guard<void NTL::default_BlockConstructFromObj<Ctxt>(Ctxt*, long, Ctxt const&)::{lambda()#1}>::~scope_guard()
  0.19      2.68     0.01                             IndexSet::~IndexSet()
  0.19      2.69     0.01                             __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >::allocate(unsigned long, void const*)
  0.19      2.69     0.01                             __gnu_cxx::new_allocator<std::pair<long const, NTL::Vec<long> > >::new_allocator()
  0.19      2.70     0.01                             std::bad_alloc::bad_alloc()
  0.19      2.70     0.01                             operator new(unsigned long, void*)
  0.00      2.70     0.00  1853800     0.00     0.00  void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&)
  0.00      2.70     0.00   522833     0.00     0.00  NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*)
  0.00      2.70     0.00   252700     0.00     0.00  IndexSet::insert(long)
  0.00      2.70     0.00   251000     0.00     0.00  NTL::Vec<long>::FixLength(long)
  0.00      2.70     0.00   249600     0.00     0.00  Cmodulus::getScratch_fftRep(long)
  0.00      2.70     0.00   243800     0.00     0.00  std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*)
  0.00      2.70     0.00   168608     0.00     0.00  NTL::Vec<NTL::zz_p>::FixLength(long)
  0.00      2.70     0.00   118600     0.00     0.00  IndexSet::remove(long)
  0.00      2.70     0.00   117600     0.00     0.00  Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const
  0.00      2.70     0.00   114400     0.00     0.00  Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const
  0.00      2.70     0.00   107600     0.00     0.00  NTL::Vec<NTL::ZZ>::DoSetLength(long)
  0.00      2.70     0.00    82500     0.00     0.00  NTL::Vec<NTL::zz_p>::~Vec()
  0.00      2.70     0.00    68800     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.00      2.70     0.00    45300     0.00     0.00  std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      2.70     0.00    37509     0.00     0.00  NTL::Vec<unsigned long>::AllocateTo(long)
  0.00      2.70     0.00    36800     0.00     0.00  NTL::Vec<NTL::zz_pE>::AllocateTo(long)
  0.00      2.70     0.00    34200     0.00     0.00  IndexSet::contains(IndexSet const&) const
  0.00      2.70     0.00    29600     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long)
  0.00      2.70     0.00    29100     0.00     0.00  NTL::Vec<NTL::zz_pE>::DoSetLength(long)
  0.00      2.70     0.00    27615     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_p> >::AllocateTo(long)
  0.00      2.70     0.00    26215     0.00     0.00  NTL::Mat<NTL::zz_p>::SetDims(long, long)
  0.00      2.70     0.00    25815     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::zz_p> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_p>::Fixer>(long, NTL::Mat<NTL::zz_p>::Fixer&)
  0.00      2.70     0.00    25538     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&)
  0.00      2.70     0.00    22400     0.00     0.00  NTL::Vec<NTL::zz_pE>::FixLength(long)
  0.00      2.70     0.00    22100     0.00     0.00  rem(NTL::zz_pX&, NTL::zz_pX const&, zz_pXModulus1 const&)
  0.00      2.70     0.00    22100     0.00     0.00  Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const
  0.00      2.70     0.00    21800     0.00     0.00  DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&)
  0.00      2.70     0.00    19600     0.00     0.00  operator<=(IndexSet const&, IndexSet const&)
  0.00      2.70     0.00    18600     0.00     0.00  long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&)
  0.00      2.70     0.00    16000     0.00     0.00  MakeIndexVector(IndexSet const&, NTL::Vec<long>&)
  0.00      2.70     0.00    15500     0.00     0.00  NTL::Vec<NTL::zz_p>::SetLength(long)
  0.00      2.70     0.00    14600     0.00     0.00  operator>=(IndexSet const&, IndexSet const&)
  0.00      2.70     0.00    13800     0.00     0.00  NTL::Vec<char>::~Vec()
  0.00      2.70     0.00    13300     0.00     0.00  IndexSet::remove(IndexSet const&)
  0.00      2.70     0.00    13200     0.00     0.00  std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&)
  0.00      2.70     0.00    11700     0.00     0.00  IndexSet::prev(long) const
  0.00      2.70     0.00    10600     0.00     0.00  NTL::Vec<unsigned long>::operator=(NTL::Vec<unsigned long> const&)
  0.00      2.70     0.00    10100     0.00     0.00  std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector()
  0.00      2.70     0.00    10000     0.00     0.00  IndexSet::intervalConstructor(long, long)
  0.00      2.70     0.00     9900     0.00     0.00  std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector()
  0.00      2.70     0.00     9400     0.00     0.00  NTL::Vec<NTL::ZZ>::SetLength(long)
  0.00      2.70     0.00     9300     0.00     0.00  operator/(IndexSet const&, IndexSet const&)
  0.00      2.70     0.00     9100     0.00     0.00  IndexSet::retain(IndexSet const&)
  0.00      2.70     0.00     9100     0.00     0.00  operator&(IndexSet const&, IndexSet const&)
  0.00      2.70     0.00     7800     0.00     0.00  IndexSet::operator==(IndexSet const&) const
  0.00      2.70     0.00     6800     0.00     0.00  void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long const&>(long const&)
  0.00      2.70     0.00     6700     0.00     0.00  DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool)
  0.00      2.70     0.00     6653     0.00     0.00  NTL::Vec<NTL::GF2X>::AllocateTo(long)
  0.00      2.70     0.00     6600     0.00     0.00  NTL::zz_pX NTL::conv<NTL::zz_pX, NTL::ZZX>(NTL::ZZX const&)
  0.00      2.70     0.00     6525     0.00     0.00  NTL::Vec<NTL::zz_pX>::AllocateTo(long)
  0.00      2.70     0.00     6500     0.00     0.00  PAlgebra::genToPow(long, long) const
  0.00      2.70     0.00     6400     0.00     0.00  card(IndexSet const&)
  0.00      2.70     0.00     6300     0.00     0.00  EncryptedArrayDerived<PA_GF2>::getPAlgebra() const
  0.00      2.70     0.00     6100     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const
  0.00      2.70     0.00     6100     0.00     0.00  NTL::zz_pX* std::__uninitialized_copy<false>::__uninit_copy<NTL::zz_pX*, NTL::zz_pX*>(NTL::zz_pX*, NTL::zz_pX*, NTL::zz_pX*)
  0.00      2.70     0.00     6100     0.00     0.00  std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long)
  0.00      2.70     0.00     6053     0.00     0.00  NTL::Vec<NTL::GF2X>::DoSetLength(long)
  0.00      2.70     0.00     6000     0.00     0.00  NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&)
  0.00      2.70     0.00     5400     0.00     0.00  NTL::Vec<NTL::GF2E>::AllocateTo(long)
  0.00      2.70     0.00     5400     0.00     0.00  std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long)
  0.00      2.70     0.00     5362     0.00     0.00  NTL::Vec<NTL::zz_pX>::Init(long)
  0.00      2.70     0.00     5300     0.00     0.00  NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>* NTL::MakeRaw<NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>, NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&>(NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&)
  0.00      2.70     0.00     5300     0.00     0.00  Cmodulus::operator=(Cmodulus const&)
  0.00      2.70     0.00     5200     0.00     0.00  ConstMultiplier_zzX::~ConstMultiplier_zzX()
  0.00      2.70     0.00     5200     0.00     0.00  ConstMultiplier_DoubleCRT::~ConstMultiplier_DoubleCRT()
  0.00      2.70     0.00     5200     0.00     0.00  NTL::PartitionInfo::PartitionInfo(long, long)
  0.00      2.70     0.00     5200     0.00     0.00  NTL::Vec<NTL::ZZ>::SetMaxLength(long)
  0.00      2.70     0.00     5200     0.00     0.02  DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&)
  0.00      2.70     0.00     5200     0.00     0.02  DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&)
  0.00      2.70     0.00     5200     0.00     0.02  ConstMultiplier_zzX::upgrade(FHEcontext const&) const
  0.00      2.70     0.00     5200     0.00     0.00  std::__shared_ptr<ConstMultiplier_zzX, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<ConstMultiplier_zzX>, NTL::Vec<long> >(std::_Sp_make_shared_tag, std::allocator<ConstMultiplier_zzX> const&, NTL::Vec<long>&&)
  0.00      2.70     0.00     5200     0.00     0.00  std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      2.70     0.00     5200     0.00     0.00  std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      2.70     0.00     5200     0.00     0.00  std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
  0.00      2.70     0.00     5200     0.00     0.00  std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      2.70     0.00     5200     0.00     0.00  std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      2.70     0.00     5200     0.00     0.00  std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
  0.00      2.70     0.00     5162     0.00     0.00  NTL::Vec<NTL::zz_pX>::DoSetLength(long)
  0.00      2.70     0.00     5000     0.00     0.02  DoubleCRT::operator=(NTL::ZZX const&)
  0.00      2.70     0.00     4300     0.00     0.00  PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const
  0.00      2.70     0.00     4300     0.00     0.00  PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const
  0.00      2.70     0.00     4300     0.00     0.00  std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long)
  0.00      2.70     0.00     4200     0.00     0.00  convert(NTL::Vec<NTL::zz_pE>&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&)
  0.00      2.70     0.00     4200     0.00     0.00  convert(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, NTL::Vec<NTL::zz_pE> const&)
  0.00      2.70     0.00     4100     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_pE> >::AllocateTo(long)
  0.00      2.70     0.00     4100     0.00     0.00  std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::resize(unsigned long)
  0.00      2.70     0.00     3800     0.00     0.00  convert(NTL::Vec<long>&, NTL::GF2X const&)
  0.00      2.70     0.00     3800     0.00     0.00  PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const
  0.00      2.70     0.00     3800     0.00     0.00  PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const
  0.00      2.70     0.00     3800     0.00     0.00  PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const
  0.00      2.70     0.00     3800     0.00     0.00  PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const
  0.00      2.70     0.00     3700     0.00     0.00  NTL::Vec<unsigned char>::~Vec()
  0.00      2.70     0.00     3600     0.00     0.00  DoubleCRT::DoubleCRT(FHEcontext const&)
  0.00      2.70     0.00     3500     0.00     0.00  NTL::Mat<NTL::zz_pE>::SetDims(long, long)
  0.00      2.70     0.00     3500     0.00     0.00  DoubleCRT::automorph(long)
  0.00      2.70     0.00     3400     0.00     0.00  IndexSet::disjointFrom(IndexSet const&) const
  0.00      2.70     0.00     3200     0.00     0.03  RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long)
  0.00      2.70     0.00     3200     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec()
  0.00      2.70     0.00     3200     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&)
  0.00      2.70     0.00     3200     0.00     0.00  std::vector<DoubleCRT, std::allocator<DoubleCRT> >::resize(unsigned long, DoubleCRT const&)
  0.00      2.70     0.00     3000     0.00     0.00  DoubleCRT::operator=(DoubleCRT const&)
  0.00      2.70     0.00     2900     0.00     0.00  Ctxt::verifyPrimeSet() const
  0.00      2.70     0.00     2800     0.00     0.02  DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&)
  0.00      2.70     0.00     2700     0.00     0.00  mcMod(long, long)
  0.00      2.70     0.00     2600     0.00     0.00  void plaintextAutomorph<NTL::GF2X, PA_GF2>(NTL::GF2X&, NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&)
  0.00      2.70     0.00     2600     0.00     0.00  void plaintextAutomorph<NTL::GF2X, NTL::GF2XModulus>(NTL::GF2X&, NTL::GF2X const&, long, long, NTL::GF2XModulus const&)
  0.00      2.70     0.00     2600     0.00     0.00  void plaintextAutomorph<NTL::zz_pX, PA_zz_p>(NTL::zz_pX&, NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&)
  0.00      2.70     0.00     2600     0.00     0.00  void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&)
  0.00      2.70     0.00     2600     0.00     0.00  std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&)
  0.00      2.70     0.00     2600     0.00     0.00  std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&)
  0.00      2.70     0.00     2600     0.00     0.00  NTL::Vec<long> convert<NTL::Vec<long>, NTL::GF2X>(NTL::GF2X const&)
  0.00      2.70     0.00     2600     0.00     0.00  NTL::Vec<long> convert<NTL::Vec<long>, NTL::zz_pX>(NTL::zz_pX const&)
  0.00      2.70     0.00     2600     0.00     0.00  convert(NTL::Vec<long>&, NTL::zz_pX const&)
  0.00      2.70     0.00     2600     0.00     0.00  NTL::Vec<NTL::GF2X>::FixLength(long)
  0.00      2.70     0.00     2600     0.00     0.00  NTL::Vec<NTL::zz_pX>::FixLength(long)
  0.00      2.70     0.00     2600     0.00     0.00  Ctxt::privateAssign(Ctxt const&)
  0.00      2.70     0.00     2600     0.00     0.00  EncryptedArrayDerived<PA_GF2>::encode(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
  0.00      2.70     0.00     2600     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::encode(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const
  0.00      2.70     0.00     2600     0.00     0.00  std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&)
  0.00      2.70     0.00     2500     0.00     0.00  Ctxt::modSwitchAddedNoiseVar() const
  0.00      2.70     0.00     2400     0.00     0.00  NTL::Vec<NTL::ZZ>::FixLength(long)
  0.00      2.70     0.00     2400     0.00     0.00  NTL::Vec<NTL::zz_p>::FixAtCurrentLength()
  0.00      2.70     0.00     2300     0.00     0.00  FHEcontext::AddPrime(long, long, bool)
  0.00      2.70     0.00     2300     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2> >::AllocateTo(long)
  0.00      2.70     0.00     2200     0.00     0.00  BuildContext(long, long)
  0.00      2.70     0.00     2200     0.00     0.00  void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long)
  0.00      2.70     0.00     2200     0.00     0.00  FindPrimitiveRoot(NTL::zz_p&, unsigned long)
  0.00      2.70     0.00     2200     0.00     0.00  mobius(long)
  0.00      2.70     0.00     2200     0.00     0.00  void factorT<long>(std::vector<long, std::allocator<long> >&, long const&)
  0.00      2.70     0.00     2200     0.00     0.00  zz_pXModulus1::zz_pXModulus1(long, NTL::zz_pX const&)
  0.00      2.70     0.00     2200     0.00     0.00  PowerfulConversion::initPConv(PowerfulTranslationIndexes const&)
  0.00      2.70     0.00     2200     0.00     0.00  void NTL::default_BlockConstruct<NTL::zz_pXModulus>(NTL::zz_pXModulus*, long)
  0.00      2.70     0.00     2200     0.00     0.00  NTL::Vec<NTL::zz_pXModulus>::AllocateTo(long)
  0.00      2.70     0.00     2200     0.00     0.00  NTL::to_zz_p(long)
  0.00      2.70     0.00     2200     0.00     0.00  Cmodulus::Cmodulus(PAlgebra const&, long, long)
  0.00      2.70     0.00     2200     0.00     0.03  DoubleCRT::scaleDownToSet(IndexSet const&, long)
  0.00      2.70     0.00     2200     0.00     0.02  DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun)
  0.00      2.70     0.00     1900     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_pE> >::~Vec()
  0.00      2.70     0.00     1900     0.00     0.00  IndexSet::emptySet()
  0.00      2.70     0.00     1900     0.00     0.00  FHEPubKey::getKeySWmatrix(SKHandle const&, long) const
  0.00      2.70     0.00     1900     0.00     0.00  CtxtPart* std::__uninitialized_copy<false>::__uninit_copy<CtxtPart*, CtxtPart*>(CtxtPart*, CtxtPart*, CtxtPart*)
  0.00      2.70     0.00     1900     0.00     0.00  std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long)
  0.00      2.70     0.00     1700     0.00     0.00  NTL::Mat<NTL::GF2>::SetDims(long, long)
  0.00      2.70     0.00     1700     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::GF2> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2>::Fixer>(long, NTL::Mat<NTL::GF2>::Fixer&)
  0.00      2.70     0.00     1700     0.00     0.00  Ctxt::Ctxt(FHEPubKey const&, long)
  0.00      2.70     0.00     1600     0.00     0.00  NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&)
  0.00      2.70     0.00     1600     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_p> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_p> > const&)
  0.00      2.70     0.00     1600     0.00     0.09  FHESecKey::GenKeySWmatrix(long, long, long, long, long)
  0.00      2.70     0.00     1600     0.00     0.00  KeySwitch::dummy()
  0.00      2.70     0.00     1600     0.00     0.00  EncryptedArrayBase::sizeOfDimension(long) const
  0.00      2.70     0.00     1600     0.00     0.00  PAlgebraModDerived<PA_zz_p>::getPPowR() const
  0.00      2.70     0.00     1600     0.00     0.00  std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*)
  0.00      2.70     0.00     1501     0.00     0.00  NTL::Vec<double>::AllocateTo(long)
  0.00      2.70     0.00     1500     0.00     0.00  void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&)
  0.00      2.70     0.00     1400     0.00     0.00  NTL::Vec<NTL::GF2E>::~Vec()
  0.00      2.70     0.00     1400     0.00     0.00  NTL::Vec<NTL::zz_pE>::~Vec()
  0.00      2.70     0.00     1400     0.00     0.00  long NTL::operator==<NTL::zz_pE>(NTL::Vec<NTL::zz_pE> const&, NTL::Vec<NTL::zz_pE> const&)
  0.00      2.70     0.00     1400     0.00     0.00  DoubleCRT::addPrimesAndScale(IndexSet const&)
  0.00      2.70     0.00     1400     0.00     0.00  Ctxt::findBaseSet(IndexSet&) const
  0.00      2.70     0.00     1400     0.00     0.00  Ctxt::findBaseLevel() const
  0.00      2.70     0.00     1300     0.00     0.00  void convert<NTL::zz_pX, NTL::ZZX>(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&)
  0.00      2.70     0.00     1300     0.00     0.00  Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool)
  0.00      2.70     0.00     1300     0.00     0.00  DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZX const&, DoubleCRT::MulFun)
  0.00      2.70     0.00     1200     0.00     0.00  dimSz(EncryptedArrayBase const&, long)
  0.00      2.70     0.00     1200     0.00     0.00  NTL::GF2XModulus::~GF2XModulus()
  0.00      2.70     0.00     1200     0.00     0.00  NTL::Vec<NTL::GF2E>::Init(long, NTL::GF2E const*)
  0.00      2.70     0.00     1200     0.00     0.00  NTL::Vec<NTL::zz_pE>::Init(long, NTL::zz_pE const*)
  0.00      2.70     0.00     1200     0.00     0.00  EncryptedArrayDerived<PA_GF2>::encode(NTL::Vec<long>&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
  0.00      2.70     0.00     1200     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const
  0.00      2.70     0.00     1200     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const
  0.00      2.70     0.00     1100     0.00     0.06  Ctxt::modDownToSet(IndexSet const&)
  0.00      2.70     0.00     1100     0.00     0.06  Ctxt::modDownToLevel(long)
  0.00      2.70     0.00     1100     0.00     0.00  PAlgebra::frobenuisPow(long) const
  0.00      2.70     0.00      900     0.00     0.00  NTL::Mat<long>::SetDims(long, long)
  0.00      2.70     0.00      900     0.00     0.00  NTL::Vec<NTL::GF2E>::DoSetLength(long)
  0.00      2.70     0.00      900     0.00     0.00  void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&)
  0.00      2.70     0.00      900     0.00     0.00  void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&)
  0.00      2.70     0.00      900     0.00     0.00  EncryptedArrayDerived<PA_GF2>::getDegree() const
  0.00      2.70     0.00      900     0.00     0.00  void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2} const&)
  0.00      2.70     0.00      900     0.00     0.00  std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)
  0.00      2.70     0.00      900     0.00     0.00  std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::operator=(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&)
  0.00      2.70     0.00      800     0.00     0.00  compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*)
  0.00      2.70     0.00      800     0.00     0.15  ConstMultiplierCache::upgrade(FHEcontext const&)
  0.00      2.70     0.00      800     0.00     0.00  Ctxt::addCtxt(Ctxt const&, bool)
  0.00      2.70     0.00      800     0.00     0.00  IndexSet::insert(IndexSet const&)
  0.00      2.70     0.00      800     0.00     0.00  PAlgebraModDerived<PA_GF2>::mapToFt(NTL::GF2X&, NTL::GF2X const&, unsigned long, NTL::GF2X const*) const
  0.00      2.70     0.00      800     0.00     0.00  PtrVector<Ctxt>::isSet(long) const
  0.00      2.70     0.00      800     0.00     0.00  std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::find(std::pair<long, long> const&) const
  0.00      2.70     0.00      800     0.00     0.00  std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::vector(unsigned long, std::allocator<NTL::GF2X> const&)
  0.00      2.70     0.00      800     0.00     0.00  std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::vector(unsigned long, std::allocator<NTL::zz_pX> const&)
  0.00      2.70     0.00      800     0.00     0.00  std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&)
  0.00      2.70     0.00      800     0.00     0.00  std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector()
  0.00      2.70     0.00      800     0.00     0.00  std::pair<std::_Rb_tree_iterator<std::pair<std::pair<long, long> const, DAGnode> >, bool> std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_emplace_unique<std::pair<long, long>&, DAGnode>(std::pair<long, long>&, DAGnode&&)
  0.00      2.70     0.00      700     0.00     0.00  std::shared_ptr<TNode<NTL::GF2X> > buildTNode<NTL::GF2X>(std::shared_ptr<TNode<NTL::GF2X> >, std::shared_ptr<TNode<NTL::GF2X> >, NTL::GF2X const&)
  0.00      2.70     0.00      700     0.00     0.00  std::shared_ptr<TNode<NTL::zz_pX> > buildTNode<NTL::zz_pX>(std::shared_ptr<TNode<NTL::zz_pX> >, std::shared_ptr<TNode<NTL::zz_pX> >, NTL::zz_pX const&)
  0.00      2.70     0.00      700     0.00     0.00  computeProd(NTL::Vec<long> const&)
  0.00      2.70     0.00      700     0.00     0.00  NTL::Vec<NTL::zz_p>::Vec(NTL::Vec<NTL::zz_p> const&)
  0.00      2.70     0.00      700     0.00     0.00  std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      2.70     0.00      700     0.00     0.00  std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      2.70     0.00      700     0.00     0.00  std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      2.70     0.00      700     0.00     0.00  std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      2.70     0.00      700     0.00     0.00  void std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::_M_emplace_back_aux<std::pair<long, long> >(std::pair<long, long>&&)
  0.00      2.70     0.00      600     0.00     0.00  phi_N(long)
  0.00      2.70     0.00      600     0.00     0.00  convert(NTL::Mat<NTL::zz_pE>&, std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > > const&)
  0.00      2.70     0.00      600     0.00     0.00  convert(std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >&, NTL::Mat<NTL::zz_pE> const&)
  0.00      2.70     0.00      600     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2> >::~Vec()
  0.00      2.70     0.00      600     0.00     0.00  void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<long> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<long> > const&)
  0.00      2.70     0.00      600     0.00     0.00  void NTL::conv<NTL::zz_p, long>(NTL::Mat<NTL::zz_p>&, NTL::Mat<long> const&)
  0.00      2.70     0.00      600     0.00     0.00  std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      2.70     0.00      600     0.00     0.00  std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      2.70     0.00      600     0.00     0.00  void std::vector<Cmodulus, std::allocator<Cmodulus> >::_M_emplace_back_aux<Cmodulus>(Cmodulus&&)
  0.00      2.70     0.00      600     0.00     0.00  void std::vector<CtxtPart, std::allocator<CtxtPart> >::emplace_back<CtxtPart>(CtxtPart&&)
  0.00      2.70     0.00      501     0.00     0.00  NTL::Vec<NTL::Vec<long> >::AllocateTo(long)
  0.00      2.70     0.00      500     0.00     0.00  sampleSmall(NTL::ZZX&, long)
  0.00      2.70     0.00      500     0.00     0.00  void convert<NTL::GF2X, NTL::ZZX>(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&)
  0.00      2.70     0.00      500     0.00     0.00  multOrd(long, long)
  0.00      2.70     0.00      500     0.00     0.00  void NTL::Vec<NTL::Vec<long> >::DoSetLengthAndApply<NTL::Mat<long>::Fixer>(long, NTL::Mat<long>::Fixer&)
  0.00      2.70     0.00      500     0.00     0.00  NTL::Vec<NTL::Vec<long> >::~Vec()
  0.00      2.70     0.00      500     0.00     0.02  DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun)
  0.00      2.70     0.00      500     0.00     0.00  PAlgebraModDerived<PA_GF2>::restoreContext() const
  0.00      2.70     0.00      500     0.00     0.00  EncryptedArrayDerived<PA_GF2>::getContext() const
  0.00      2.70     0.00      500     0.00     0.02  EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
  0.00      2.70     0.00      500     0.00     0.00  EncryptedArrayDerived<PA_GF2>::encode(NTL::ZZX&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
  0.00      2.70     0.00      500     0.00     0.00  EncryptedArrayDerived<PA_GF2>::getTag() const
  0.00      2.70     0.00      500     0.00     0.08  EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const
  0.00      2.70     0.00      500     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::getContext() const
  0.00      2.70     0.00      500     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const
  0.00      2.70     0.00      500     0.00     0.08  FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const
  0.00      2.70     0.00      500     0.00     0.00  void std::vector<KeySwitch, std::allocator<KeySwitch> >::_M_emplace_back_aux<KeySwitch const&>(KeySwitch const&)
  0.00      2.70     0.00      400     0.00     0.01  addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*)
  0.00      2.70     0.00      400     0.00     0.00  InvModpr(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, long, long)
  0.00      2.70     0.00      400     0.00     0.00  dimNative(EncryptedArrayBase const&, long)
  0.00      2.70     0.00      400     0.00     0.00  NTL::zz_pXModulus::~zz_pXModulus()
  0.00      2.70     0.00      400     0.00     0.00  NTL::Mat<NTL::GF2>::operator=(NTL::Mat<NTL::GF2> const&)
  0.00      2.70     0.00      400     0.00     0.00  NTL::Vec<NTL::Vec<NTL::ZZ> >::swap(NTL::Vec<NTL::Vec<NTL::ZZ> >&)
  0.00      2.70     0.00      400     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2> >::operator=(NTL::Vec<NTL::Vec<NTL::GF2> > const&)
  0.00      2.70     0.00      400     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_pX> >::AllocateTo(long)
  0.00      2.70     0.00      400     0.00     0.00  NTL::Vec<NTL::ZZX>::AllocateTo(long)
  0.00      2.70     0.00      400     0.00     0.00  NTL::Vec<NTL::GF2E>::operator=(NTL::Vec<NTL::GF2E> const&)
  0.00      2.70     0.00      400     0.00     0.00  Ctxt::modUpToSet(IndexSet const&)
  0.00      2.70     0.00      400     0.00     0.00  Ctxt::Ctxt(ZeroCtxtLike_type, Ctxt const&)
  0.00      2.70     0.00      400     0.00     0.00  AddDAG::markAsAvailable(DAGnode*)
  0.00      2.70     0.00      400     0.00     0.00  AddDAG::allocateCtxtLike(Ctxt const&)
  0.00      2.70     0.00      400     0.00     0.00  AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&)
  0.00      2.70     0.00      400     0.00     0.01  AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long)
  0.00      2.70     0.00      400     0.00     0.00  AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&)
  0.00      2.70     0.00      400     0.00     0.00  Step1Matrix<PA_GF2>::get(NTL::Mat<NTL::GF2>&, long, long, long) const
  0.00      2.70     0.00      400     0.00     0.00  Step1Matrix<PA_GF2>::getDim() const
  0.00      2.70     0.00      400     0.00     0.00  Step1Matrix<PA_zz_p>::get(NTL::Mat<NTL::zz_p>&, long, long, long) const
  0.00      2.70     0.00      400     0.00     0.00  Step1Matrix<PA_zz_p>::getDim() const
  0.00      2.70     0.00      400     0.00     0.00  Step2Matrix<PA_GF2>::get(NTL::GF2X&, long, long, long) const
  0.00      2.70     0.00      400     0.00     0.00  Step2Matrix<PA_GF2>::getDim() const
  0.00      2.70     0.00      400     0.00     0.00  Step2Matrix<PA_zz_p>::get(NTL::zz_pX&, long, long, long) const
  0.00      2.70     0.00      400     0.00     0.00  Step2Matrix<PA_zz_p>::getDim() const
  0.00      2.70     0.00      400     0.00     0.00  PAlgebraModDerived<PA_GF2>::getPPowR() const
  0.00      2.70     0.00      400     0.00     0.00  PAlgebraModDerived<PA_zz_p>::restoreContext() const
  0.00      2.70     0.00      400     0.00     0.00  PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const
  0.00      2.70     0.00      400     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::getTag() const
  0.00      2.70     0.00      400     0.00     0.00  std::_Deque_base<long, std::allocator<long> >::_M_initialize_map(unsigned long)
  0.00      2.70     0.00      400     0.00     0.00  std::_Deque_base<long, std::allocator<long> >::~_Deque_base()
  0.00      2.70     0.00      400     0.00     0.00  void std::vector<ScratchCell, std::allocator<ScratchCell> >::_M_emplace_back_aux<ScratchCell>(ScratchCell&&)
  0.00      2.70     0.00      400     0.00     0.00  std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::vector(unsigned long, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > const&)
  0.00      2.70     0.00      400     0.00     0.00  std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::~vector()
  0.00      2.70     0.00      400     0.00     0.00  std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::vector(unsigned long, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > const&)
  0.00      2.70     0.00      400     0.00     0.00  std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::~vector()
  0.00      2.70     0.00      400     0.00     0.00  std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      400     0.00     0.00  std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long)
  0.00      2.70     0.00      400     0.00     0.00  std::vector<long, std::allocator<long> >::_M_fill_assign(unsigned long, long const&)
  0.00      2.70     0.00      300     0.00     0.15  multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*)
  0.00      2.70     0.00      300     0.00     0.00  buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&)
  0.00      2.70     0.00      300     0.00     0.00  void vecCopy<Ctxt>(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, long)
  0.00      2.70     0.00      300     0.00     0.00  bool poly_comp<NTL::GF2X>(NTL::GF2X const&, NTL::GF2X const&)
  0.00      2.70     0.00      300     0.00     0.00  bool poly_comp<NTL::zz_pX>(NTL::zz_pX const&, NTL::zz_pX const&)
  0.00      2.70     0.00      300     0.00     0.38  add1Dmats4dim(FHESecKey&, long, long)
  0.00      2.70     0.00      300     0.00     0.00  keySwitchNoise(CtxtPart const&, FHEPubKey const&, long)
  0.00      2.70     0.00      300     0.00     0.00  NTL::MakeSmartAux<NTL::zz_pEInfoT>::~MakeSmartAux()
  0.00      2.70     0.00      300     0.00     0.00  NTL::Mat<NTL::zz_pX>::SetDims(long, long)
  0.00      2.70     0.00      300     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2E> >::AllocateTo(long)
  0.00      2.70     0.00      300     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2E> >::~Vec()
  0.00      2.70     0.00      300     0.00     0.00  NTL::Vec<NTL::GF2X>::~Vec()
  0.00      2.70     0.00      300     0.00     0.00  NTL::Vec<NTL::zz_pX>::~Vec()
  0.00      2.70     0.00      300     0.00     0.15  Ctxt::multiplyBy(Ctxt const&)
  0.00      2.70     0.00      300     0.00     0.05  Ctxt::reLinearize(long)
  0.00      2.70     0.00      300     0.00     0.05  Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&)
  0.00      2.70     0.00      300     0.00     0.01  Ctxt::tensorProduct(Ctxt const&, Ctxt const&)
  0.00      2.70     0.00      300     0.00     0.02  Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&)
  0.00      2.70     0.00      300     0.00     0.10  Ctxt::operator*=(Ctxt const&)
  0.00      2.70     0.00      300     0.00     0.03  DoubleCRT::addPrimes(IndexSet const&)
  0.00      2.70     0.00      300     0.00     0.00  FHEcontext::logOfProduct(IndexSet const&) const
  0.00      2.70     0.00      300     0.00     0.00  PAlgebraModDerived<PA_GF2>::getR() const
  0.00      2.70     0.00      300     0.00     0.00  PtrVector_Singleton<Ctxt>::size() const
  0.00      2.70     0.00      300     0.00     0.00  PtrVector_Singleton<Ctxt>::operator[](long) const
  0.00      2.70     0.00      300     0.00     0.03  DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const
  0.00      2.70     0.00      300     0.00     0.00  std::unique_lock<std::mutex>::lock()
  0.00      2.70     0.00      300     0.00     0.00  operator|(IndexSet const&, IndexSet const&)
  0.00      2.70     0.00      200     0.00     0.05  AddManyPrimes(FHEcontext&, double, bool, bool)
  0.00      2.70     0.00      200     0.00     0.00  buildPAlgebraMod(PAlgebra const&, long)
  0.00      2.70     0.00      200     0.00     0.03  RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*)
  0.00      2.70     0.00      200     0.00     0.00  ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long)
  0.00      2.70     0.00      200     0.00     0.00  ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long)
  0.00      2.70     0.00      200     0.00     0.00  sampleHWt(NTL::ZZX&, long, long)
  0.00      2.70     0.00      200     0.00     0.00  MatMul1DExec::MatMul1DExec(MatMul1D const&, bool)
  0.00      2.70     0.00      200     0.00     0.00  MatMul1DExec::~MatMul1DExec()
  0.00      2.70     0.00      200     0.00     0.06  BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool)
  0.00      2.70     0.00      200     0.00     0.00  BlockMatMul1DExec::~BlockMatMul1DExec()
  0.00      2.70     0.00      200     0.00     0.00  EncryptedArrayDerived<PA_GF2>::EncryptedArrayDerived(FHEcontext const&, NTL::GF2X const&, PAlgebraMod const&)
  0.00      2.70     0.00      200     0.00     0.00  EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived()
  0.00      2.70     0.00      200     0.00     0.00  MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&)
  0.00      2.70     0.00      200     0.00     0.00  MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&)
  0.00      2.70     0.00      200     0.00     0.04  BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&)
  0.00      2.70     0.00      200     0.00     0.02  BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Mat<NTL::ZZ>::SetDims(long, long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Mat<NTL::GF2>::Mat(NTL::Mat<NTL::GF2> const&)
  0.00      2.70     0.00      200     0.00     0.03  NTL::Mat<NTL::GF2E>::SetDims(long, long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Mat<NTL::GF2X>::SetDims(long, long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Vec<NTL::ZZ> >::AllocateTo(long)
  0.00      2.70     0.00      200     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::ZZ> >::DoSetLengthAndApply<NTL::Mat<NTL::ZZ>::Fixer>(long, NTL::Mat<NTL::ZZ>::Fixer&)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2> >::Init(long, NTL::Vec<NTL::GF2> const*)
  0.00      2.70     0.00      200     0.00     0.03  void NTL::Vec<NTL::Vec<NTL::GF2E> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2E>::Fixer>(long, NTL::Mat<NTL::GF2E>::Fixer&)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Vec<NTL::GF2X> >::AllocateTo(long)
  0.00      2.70     0.00      200     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::GF2X> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2X>::Fixer>(long, NTL::Mat<NTL::GF2X>::Fixer&)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long, NTL::Vec<NTL::zz_p> const*)
  0.00      2.70     0.00      200     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pX>::Fixer>(long, NTL::Mat<NTL::zz_pX>::Fixer&)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Mat<NTL::GF2> >::AllocateTo(long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Mat<NTL::GF2> >::FixLength(long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Mat<NTL::zz_p> >::AllocateTo(long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::Mat<NTL::zz_p> >::FixLength(long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<NTL::ZZX>::~Vec()
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<std::shared_ptr<CubeSignature> >::~Vec()
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<std::unique_ptr<MatMul1DExec, std::default_delete<MatMul1DExec> > >::AllocateTo(long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<int>::AllocateTo(long)
  0.00      2.70     0.00      200     0.00     0.00  NTL::Vec<int>::DoSetLength(long, int const&)
  0.00      2.70     0.00      200     0.00     0.00  void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<NTL::ZZ> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<NTL::ZZ> > const&)
  0.00      2.70     0.00      200     0.00     0.00  void NTL::conv<NTL::zz_p, NTL::ZZ>(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::ZZ> const&)
  0.00      2.70     0.00      200     0.00     0.58  EvalMap::upgrade()
  0.00      2.70     0.00      200     0.00     0.65  EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool)
  0.00      2.70     0.00      200     0.00     0.00  DoubleCRT::Exp(long)
  0.00      2.70     0.00      200     0.00     0.00  FHEPubKey::setKeySwitchMap(long)
  0.00      2.70     0.00      200     0.00     0.10  FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long)
  0.00      2.70     0.00      200     0.00     0.00  Step1Matrix<PA_GF2>::multipleTransforms() const
  0.00      2.70     0.00      200     0.00     0.00  Step1Matrix<PA_zz_p>::multipleTransforms() const
  0.00      2.70     0.00      200     0.00     0.00  Step2Matrix<PA_GF2>::multipleTransforms() const
  0.00      2.70     0.00      200     0.00     0.00  Step2Matrix<PA_zz_p>::multipleTransforms() const
  0.00      2.70     0.00      200     0.00     0.00  _ZNK14EncryptedArray8dispatchI22MatMul1DExec_constructIRK8MatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_
  0.00      2.70     0.00      200     0.00     0.00  _ZNK14EncryptedArray8dispatchI27BlockMatMul1DExec_constructIRK13BlockMatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_
  0.00      2.70     0.00      200     0.00     0.00  MatMul1D_derived<PA_GF2>::processDiagonal(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&) const
  0.00      2.70     0.00      200     0.00     0.00  MatMul1D_derived<PA_zz_p>::processDiagonal(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&) const
  0.00      2.70     0.00      200     0.00     0.00  PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const
  0.00      2.70     0.00      200     0.00     0.00  PAlgebraModDerived<PA_GF2>::getTag() const
  0.00      2.70     0.00      200     0.00     0.00  PAlgebraModDerived<PA_GF2>::getZMStar() const
  0.00      2.70     0.00      200     0.00     0.00  PAlgebraModDerived<PA_zz_p>::getR() const
  0.00      2.70     0.00      200     0.00     0.00  PAlgebraModDerived<PA_zz_p>::getZMStar() const
  0.00      2.70     0.00      200     0.00     0.00  BlockMatMul1D_derived<PA_GF2>::processDiagonal(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&) const
  0.00      2.70     0.00      200     0.00     0.00  BlockMatMul1D_derived<PA_zz_p>::processDiagonal(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&) const
  0.00      2.70     0.00      200     0.00     0.00  PAlgebra::operator==(PAlgebra const&) const
  0.00      2.70     0.00      200     0.00     0.00  std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_check_len(unsigned long, char const*) const
  0.00      2.70     0.00      200     0.00     0.00  std::unique_lock<std::mutex>::unlock()
  0.00      2.70     0.00      200     0.00     0.00  std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_assign(unsigned long, CtxtPart const&)
  0.00      2.70     0.00      200     0.00     0.00  void std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_emplace_back_aux<DoubleCRT const&>(DoubleCRT const&)
  0.00      2.70     0.00      200     0.00     0.00  std::vector<NTL::Mat<NTL::GF2>, std::allocator<NTL::Mat<NTL::GF2> > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      200     0.00     0.00  std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      200     0.00     0.00  std::vector<long, std::allocator<long> >::_M_default_append(unsigned long)
  0.00      2.70     0.00      200     0.00     0.00  std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> > const&)
  0.00      2.70     0.00      101     0.00     0.00  PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const
  0.00      2.70     0.00      100     0.00     0.00  void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long)
  0.00      2.70     0.00      100     0.00     0.10  buildModChain(FHEcontext&, long, long, long)
  0.00      2.70     0.00      100     0.00     0.75  addSome1DMatrices(FHESecKey&, long, long)
  0.00      2.70     0.00      100     0.00     0.02  decryptBinaryNums(std::vector<long, std::allocator<long> >&, PtrVector<Ctxt> const&, FHESecKey const&, EncryptedArray const&, bool, bool)
  0.00      2.70     0.00      100     0.00     0.38  addSomeFrbMatrices(FHESecKey&, long, long)
  0.00      2.70     0.00      100     0.00     0.00  buildLinPolyMatrix(NTL::Mat<NTL::zz_pE>&, long)
  0.00      2.70     0.00      100     0.00     0.03  buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&)
  0.00      2.70     0.00      100     0.00     0.00  EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, long)
  0.00      2.70     0.00      100     0.00     0.00  PolyRed(NTL::ZZX&, NTL::ZZX const&, long, bool)
  0.00      2.70     0.00      100     0.00     0.00  void convert<NTL::ZZX, NTL::zz_pX>(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&)
  0.00      2.70     0.00      100     0.00     0.00  void convert<long, NTL::GF2X>(std::vector<long, std::allocator<long> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&)
  0.00      2.70     0.00      100     0.00     0.00  setAlphaE(double&, long&, double, double, double, double, long, long)
  0.00      2.70     0.00      100     0.00     0.03  FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&)
  0.00      2.70     0.00      100     0.00     0.00  FHEcontext::~FHEcontext()
  0.00      2.70     0.00      100     0.00     1.39  RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool)
  0.00      2.70     0.00      100     0.00     0.00  RecryptData::~RecryptData()
  0.00      2.70     0.00      100     0.00     0.00  Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool)
  0.00      2.70     0.00      100     0.00     0.00  Step1Matrix<PA_GF2>::~Step1Matrix()
  0.00      2.70     0.00      100     0.00     0.00  Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool)
  0.00      2.70     0.00      100     0.00     0.00  Step1Matrix<PA_zz_p>::~Step1Matrix()
  0.00      2.70     0.00      100     0.00     0.00  Step2Matrix<PA_GF2>::~Step2Matrix()
  0.00      2.70     0.00      100     0.00     0.00  Step2Matrix<PA_zz_p>::~Step2Matrix()
  0.00      2.70     0.00      100     0.00     0.08  PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&)
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::genCrtTable()
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::genMaskTable()
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long)
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived()
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::genCrtTable()
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::genMaskTable()
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long)
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived()
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::EncryptedArrayDerived(FHEcontext const&, NTL::zz_pX const&, PAlgebraMod const&)
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived()
  0.00      2.70     0.00      100     0.00     0.00  MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long)
  0.00      2.70     0.00      100     0.00     0.00  MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long)
  0.00      2.70     0.00      100     0.00     0.08  PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&)
  0.00      2.70     0.00      100     0.00     0.09  BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long)
  0.00      2.70     0.00      100     0.00     0.04  BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long)
  0.00      2.70     0.00      100     0.00     0.00  void NTL::default_BlockConstruct<PowerfulConversion>(PowerfulConversion*, long)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Mat<NTL::Mat<NTL::GF2> >::SetDims(long, long)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Mat<NTL::Mat<NTL::zz_p> >::SetDims(long, long)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Vec<PowerfulConversion>::AllocateTo(long)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::AllocateTo(long)
  0.00      2.70     0.00      100     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::AllocateTo(long)
  0.00      2.70     0.00      100     0.00     0.00  void NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Vec<NTL::GF2X>::operator=(NTL::Vec<NTL::GF2X> const&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Vec<bool>::AllocateTo(long)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Vec<long>::operator=(NTL::Vec<long> const&)
  0.00      2.70     0.00      100     0.00     0.00  void NTL::conv<NTL::Vec<NTL::zz_pE>, NTL::Vec<NTL::zz_pX> >(NTL::Vec<NTL::Vec<NTL::zz_pE> >&, NTL::Vec<NTL::Vec<NTL::zz_pX> > const&)
  0.00      2.70     0.00      100     0.00     0.00  void NTL::conv<NTL::Vec<NTL::zz_pX>, NTL::Vec<NTL::zz_pE> >(NTL::Vec<NTL::Vec<NTL::zz_pX> >&, NTL::Vec<NTL::Vec<NTL::zz_pE> > const&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Mat<NTL::GF2E>* NTL::MakeRaw<NTL::Mat<NTL::GF2E>, NTL::Mat<NTL::GF2E>&>(NTL::Mat<NTL::GF2E>&)
  0.00      2.70     0.00      100     0.00     0.00  NTL::Mat<NTL::zz_pE>* NTL::MakeRaw<NTL::Mat<NTL::zz_pE>, NTL::Mat<NTL::zz_pE>&>(NTL::Mat<NTL::zz_pE>&)
  0.00      2.70     0.00      100     0.00     0.00  Ctxt::addConstant(DoubleCRT const&, double)
  0.00      2.70     0.00      100     0.00     0.03  PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&)
  0.00      2.70     0.00      100     0.00     0.02  DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&)
  0.00      2.70     0.00      100     0.00     0.26  FHESecKey::genRecryptData()
  0.00      2.70     0.00      100     0.00     0.00  FHEcontext::operator==(FHEcontext const&) const
  0.00      2.70     0.00      100     0.00     0.00  RecryptData::operator==(RecryptData const&) const
  0.00      2.70     0.00      100     0.00     0.00  Step1Matrix<PA_GF2>::getEA() const
  0.00      2.70     0.00      100     0.00     0.00  Step1Matrix<PA_zz_p>::getEA() const
  0.00      2.70     0.00      100     0.00     0.00  Step2Matrix<PA_GF2>::getEA() const
  0.00      2.70     0.00      100     0.00     0.00  Step2Matrix<PA_zz_p>::getEA() const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::CRT_decompose(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&) const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::getFactorsOverZZ() const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::getFactorsOverZZ() const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::getTag() const
  0.00      2.70     0.00      100     0.00     0.00  PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const
  0.00      2.70     0.00      100     0.00     0.02  EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const
  0.00      2.70     0.00      100     0.00     0.00  EncryptedArrayDerived<PA_zz_p>::getDegree() const
  0.00      2.70     0.00      100     0.00     0.00  DoubleCRT::toPoly(NTL::ZZX&, bool) const
  0.00      2.70     0.00      100     0.00     0.02  FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&) const
  0.00      2.70     0.00      100     0.00     0.02  FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const
  0.00      2.70     0.00      100     0.00     0.05  FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const
  0.00      2.70     0.00      100     0.00     0.00  std::vector<IndexSet, std::allocator<IndexSet> >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<NTL::Mat<NTL::zz_p>, std::allocator<NTL::Mat<NTL::zz_p> > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<NTL::GF2EX, std::allocator<NTL::GF2EX> >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_M_default_append(unsigned long)
  0.00      2.70     0.00      100     0.00     0.00  std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned long)
  0.00      2.70     0.00       55     0.00     0.00  registerTimer(FHEtimer*)
  0.00      2.70     0.00        7     0.00     0.00  void std::vector<FHEtimer*, std::allocator<FHEtimer*> >::_M_emplace_back_aux<FHEtimer* const&>(FHEtimer* const&)
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z11runningSumsR9PtrVectorI4CtxtE
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12BuildContextll
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13BluesteinInitlRKN3NTL4zz_pERNS_5zz_pXERNS_3VecImEERNS_6fftRepE
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13GetTimerClockv
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13extractDigitsRSt6vectorI4CtxtSaIS0_EERKS0_l
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z15KSGiantStepSizel
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z19buildEncryptedArrayRK10FHEcontextRKN3NTL3ZZXERK11PAlgebraMod
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z23buildUnpackSlotEncodingRSt6vectorIN3NTL3VecIlEESaIS2_EERK14EncryptedArray
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z4RLWER9DoubleCRTS0_RKS_lPN3NTL2ZZE
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z5FindMlllllllb
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10FHEglobals13automorphValsE
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10FHEglobals6dryRunE
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11RecryptDataD2Ev
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN17DynamicCtxtPowers8getPowerEl
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN26PowerfulTranslationIndexesC2ERKN3NTL3VecIlEE
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3NTLltENS_3GF2ES0_
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6AddDAG4initERK9PtrVectorI4CtxtES4_
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7EvalMapC2ERK14EncryptedArraybRKN3NTL3VecIlEEbbb
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN8IndexSet8emptySetEv
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9DoubleCRT3FFTERKN3NTL3ZZXERK8IndexSet
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK13CubeSignature15breakIndexByDimEll
  0.00      2.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_fhe_test_force_bsgs

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.37% of 2.70 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     13.0    0.35    0.00                 NTL::new_ifft_short1_flipped(unsigned long*, long, NTL::new_mod_t const&) [1]
-----------------------------------------------
                                                 <spontaneous>
[2]      7.8    0.21    0.00                 NTL::new_ifft_short1_notab(unsigned long*, long, long, NTL::new_mod_t const&, long, unsigned long, long, unsigned long) [2]
-----------------------------------------------
                0.03    0.06  114400/232000      Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const [21]
                0.04    0.06  117600/232000      Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const [20]
[3]      6.9    0.07    0.12  232000         Cmodulus::FFT_aux(NTL::Vec<long>&, NTL::zz_pX&) const [3]
                0.10    0.02  232000/254100      BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [10]
-----------------------------------------------
                                                 <spontaneous>
[4]      6.7    0.18    0.00                 NTL::FromModularRep(NTL::zz_p*, NTL::fftRep const&, long, long, NTL::zz_pInfoT*) [4]
-----------------------------------------------
                                                 <spontaneous>
[5]      5.3    0.01    0.14                 FHEcontext::makeBootstrappable(NTL::Vec<long> const&, long, bool, bool) [5]
                0.00    0.14     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
-----------------------------------------------
                0.00    0.14     100/100         FHEcontext::makeBootstrappable(NTL::Vec<long> const&, long, bool, bool) [5]
[6]      5.2    0.00    0.14     100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
                0.00    0.13     200/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.01     100/100         PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [138]
                0.00    0.00    1200/1200        EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [195]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [268]
                0.00    0.00     100/200         buildPAlgebraMod(PAlgebra const&, long) [260]
                0.00    0.00     100/300         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
                0.00    0.00     200/1900        std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long) [443]
                0.00    0.00     100/700         computeProd(NTL::Vec<long> const&) [474]
                0.00    0.00     100/100         NTL::Vec<long>::operator=(NTL::Vec<long> const&) [617]
                0.00    0.00     100/300         PAlgebraModDerived<PA_GF2>::getR() const [535]
                0.00    0.00     100/400         PAlgebraModDerived<PA_GF2>::getPPowR() const [514]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::getFactorsOverZZ() const [630]
                0.00    0.00     100/400         PAlgebraModDerived<PA_zz_p>::restoreContext() const [515]
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::getDegree() const [632]
                0.00    0.00     100/100         setAlphaE(double&, long&, double, double, double, double, long, long) [592]
-----------------------------------------------
                0.00    0.01     100/1600        FHESecKey::genRecryptData() [52]
                0.00    0.02     200/1600        FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.11    1300/1600        add1Dmats4dim(FHESecKey&, long, long) [17]
[7]      5.2    0.00    0.14    1600         FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.08    3200/3200        RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
                0.01    0.01    3200/3700        DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.01    0.00    4800/9200        DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.01    3200/3200        std::vector<DoubleCRT, std::allocator<DoubleCRT> >::resize(unsigned long, DoubleCRT const&) [131]
                0.01    0.00    4800/7400        FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [81]
                0.00    0.01    3200/3600        DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00    3200/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00    1600/36300       auto_timer::stop() [75]
                0.00    0.00    6400/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00    1300/3500        DoubleCRT::automorph(long) [204]
                0.00    0.00     500/500         void std::vector<KeySwitch, std::allocator<KeySwitch> >::_M_emplace_back_aux<KeySwitch const&>(KeySwitch const&) [254]
                0.00    0.00     200/200         DoubleCRT::Exp(long) [263]
                0.00    0.00    1600/1840800     GetTimerClock() [35]
                0.00    0.00    1600/1600        KeySwitch::dummy() [447]
                0.00    0.00    1600/1900        FHEPubKey::getKeySWmatrix(SKHandle const&, long) const [441]
                0.00    0.00    1500/1600        PAlgebraModDerived<PA_zz_p>::getPPowR() const [449]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[8]      4.8    0.13    0.00                 void NTL::default_BlockDestroy<long>(long*, long) [8]
-----------------------------------------------
                0.00    0.13     200/200         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[9]      4.8    0.00    0.13     200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.12     200/200         EvalMap::upgrade() [14]
                0.00    0.01     200/200         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     200/200         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     100/100         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00    3000/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00     400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/100         void NTL::conv<NTL::Vec<NTL::zz_pX>, NTL::Vec<NTL::zz_pE> >(NTL::Vec<NTL::Vec<NTL::zz_pX> >&, NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [335]
                0.00    0.00     400/700         computeProd(NTL::Vec<long> const&) [474]
                0.00    0.00     400/600         phi_N(long) [480]
                0.00    0.00     400/500         multOrd(long, long) [491]
                0.00    0.00     400/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00     200/500         EncryptedArrayDerived<PA_GF2>::getTag() const [495]
                0.00    0.00     200/400         EncryptedArrayDerived<PA_zz_p>::getTag() const [516]
                0.00    0.00     200/300         NTL::Mat<NTL::zz_pX>::SetDims(long, long) [530]
                0.00    0.00     200/200         NTL::Vec<std::shared_ptr<CubeSignature> >::~Vec() [559]
                0.00    0.00     200/200         NTL::Vec<std::unique_ptr<MatMul1DExec, std::default_delete<MatMul1DExec> > >::AllocateTo(long) [560]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_GF2>::getContext() const [494]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_zz_p>::getContext() const [496]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     100/400         PAlgebraModDerived<PA_zz_p>::restoreContext() const [515]
                0.00    0.00     100/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
                0.00    0.00     100/3200        void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&) [418]
                0.00    0.00     100/100         void NTL::conv<NTL::Vec<NTL::zz_pE>, NTL::Vec<NTL::zz_pX> >(NTL::Vec<NTL::Vec<NTL::zz_pE> >&, NTL::Vec<NTL::Vec<NTL::zz_pX> > const&) [618]
                0.00    0.00     100/200         PAlgebraModDerived<PA_zz_p>::getZMStar() const [577]
                0.00    0.00     100/200         PAlgebraModDerived<PA_zz_p>::getR() const [576]
                0.00    0.00     100/200         ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
                0.00    0.00     100/100         Step2Matrix<PA_GF2>::~Step2Matrix() [598]
                0.00    0.00     100/100         Step2Matrix<PA_zz_p>::~Step2Matrix() [599]
                0.00    0.00     100/100         Step1Matrix<PA_GF2>::~Step1Matrix() [596]
                0.00    0.00     100/100         Step1Matrix<PA_zz_p>::~Step1Matrix() [597]
                0.00    0.00     100/500         PAlgebraModDerived<PA_GF2>::restoreContext() const [493]
                0.00    0.00     100/6053        NTL::Vec<NTL::GF2X>::DoSetLength(long) [392]
                0.00    0.00     100/200         NTL::Mat<NTL::GF2X>::SetDims(long, long) [547]
                0.00    0.00     100/100         Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
-----------------------------------------------
                0.01    0.00   22100/254100      Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
                0.10    0.02  232000/254100      Cmodulus::FFT_aux(NTL::Vec<long>&, NTL::zz_pX&) const [3]
[10]     4.7    0.11    0.02  254100         BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [10]
                0.02    0.00  508200/1840800     GetTimerClock() [35]
                0.00    0.00  249600/249600      Cmodulus::getScratch_fftRep(long) [358]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     100/8200        DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00     300/8200        DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.04    2800/8200        DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.01    0.07    5000/8200        DoubleCRT::operator=(NTL::ZZX const&) [28]
[11]     4.6    0.01    0.11    8200         DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.11  117600/117600      Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const [20]
                0.00    0.00  117600/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  117600/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    8200/16000       MakeIndexVector(IndexSet const&, NTL::Vec<long>&) [197]
                0.00    0.00   16400/1840800     GetTimerClock() [35]
                0.00    0.00  117600/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[12]     4.3    0.00    0.12                 SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
                0.00    0.08     100/100         addSome1DMatrices(FHESecKey&, long, long) [27]
                0.00    0.03     100/100         FHESecKey::genRecryptData() [52]
                0.00    0.01     100/100         buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.00     100/100         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     100/100         FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [173]
                0.00    0.00     100/200         FHEPubKey::setKeySwitchMap(long) [564]
-----------------------------------------------
                0.00    0.12     800/800         EvalMap::upgrade() [14]
[13]     4.3    0.00    0.12     800         ConstMultiplierCache::upgrade(FHEcontext const&) [13]
                0.00    0.12    5200/5200        ConstMultiplier_zzX::upgrade(FHEcontext const&) const [16]
                0.00    0.00     800/36300       auto_timer::stop() [75]
                0.00    0.00     800/1840800     GetTimerClock() [35]
                0.00    0.00   10400/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00    5200/5200        std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [402]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.12     200/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[14]     4.3    0.00    0.12     200         EvalMap::upgrade() [14]
                0.00    0.12     800/800         ConstMultiplierCache::upgrade(FHEcontext const&) [13]
                0.00    0.00     400/500         EncryptedArrayDerived<PA_GF2>::getContext() const [494]
                0.00    0.00     400/500         EncryptedArrayDerived<PA_zz_p>::getContext() const [496]
-----------------------------------------------
                0.00    0.12    5200/5200        ConstMultiplier_zzX::upgrade(FHEcontext const&) const [16]
[15]     4.3    0.00    0.12    5200         DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.11    5200/5200        DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00  114400/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  114400/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00  114400/1545500     IndexSet::contains(long) const [88]
                0.00    0.00  114400/252700      IndexSet::insert(long) [196]
                0.00    0.00  114400/2075300     IndexSet::next(long) const [85]
                0.00    0.00   10400/1840800     GetTimerClock() [35]
                0.00    0.00    5200/10000       IndexSet::intervalConstructor(long, long) [293]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.12    5200/5200        ConstMultiplierCache::upgrade(FHEcontext const&) [13]
[16]     4.3    0.00    0.12    5200         ConstMultiplier_zzX::upgrade(FHEcontext const&) const [16]
                0.00    0.12    5200/5200        DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.00    5200/5200        std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [407]
-----------------------------------------------
                0.00    0.04     100/300         addSomeFrbMatrices(FHESecKey&, long, long) [44]
                0.00    0.08     200/300         addSome1DMatrices(FHESecKey&, long, long) [27]
[17]     4.2    0.00    0.11     300         add1Dmats4dim(FHESecKey&, long, long) [17]
                0.00    0.11    1300/1600        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00    1300/6500        PAlgebra::genToPow(long, long) const [386]
                0.00    0.00    1100/1100        PAlgebra::frobenuisPow(long) const [460]
                0.00    0.00     200/200         NTL::Vec<int>::DoSetLength(long, int const&) [562]
-----------------------------------------------
                0.00    0.11    5200/5200        DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
[18]     4.1    0.00    0.11    5200         DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.11  114400/114400      Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const [21]
                0.00    0.00  114400/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  114400/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    5200/16000       MakeIndexVector(IndexSet const&, NTL::Vec<long>&) [197]
                0.00    0.00   10400/1840800     GetTimerClock() [35]
                0.00    0.00  114400/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[19]     4.1    0.11    0.00                 NTL::RandomStream_impl::get_bytes(unsigned char*, long, long) [19]
-----------------------------------------------
                0.00    0.11  117600/117600      DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
[20]     4.1    0.00    0.11  117600         Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const [20]
                0.04    0.06  117600/232000      Cmodulus::FFT_aux(NTL::Vec<long>&, NTL::zz_pX&) const [3]
                0.02    0.00  470400/1840800     GetTimerClock() [35]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.11  114400/114400      DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
[21]     3.9    0.00    0.11  114400         Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const [21]
                0.03    0.06  114400/232000      Cmodulus::FFT_aux(NTL::Vec<long>&, NTL::zz_pX&) const [3]
                0.01    0.00  457600/1840800     GetTimerClock() [35]
                0.00    0.00       1/101         PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[22]     3.7    0.10    0.00                 NTL::mul(NTL::fftRep&, NTL::fftRep const&, NTL::fftRep const&) [22]
-----------------------------------------------
                                                 <spontaneous>
[23]     3.3    0.09    0.00                 NTL::new_fft(long*, long const*, long, NTL::FFTPrimeInfo const&, long, long) [23]
-----------------------------------------------
                                                 <spontaneous>
[24]     3.3    0.09    0.00                 NTL::new_fft_short(unsigned long*, long, long, long, NTL::new_mod_t const&) [24]
-----------------------------------------------
                0.00    0.08    3200/3200        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[25]     3.1    0.00    0.08    3200         RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
                0.00    0.05    3200/5000        DoubleCRT::operator=(NTL::ZZX const&) [28]
                0.01    0.00    3200/5600        DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.01    0.00    3200/9200        DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.01    0.00    3200/6300        DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.01    0.00    3200/4400        sampleGaussian(NTL::ZZX&, long, double) [89]
                0.00    0.00    3200/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                                                 <spontaneous>
[26]     3.0    0.08    0.00                 NTL::new_ifft(long*, long const*, long, NTL::FFTPrimeInfo const&, long) [26]
-----------------------------------------------
                0.00    0.08     100/100         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
[27]     2.8    0.00    0.08     100         addSome1DMatrices(FHESecKey&, long, long) [27]
                0.00    0.08     200/300         add1Dmats4dim(FHESecKey&, long, long) [17]
-----------------------------------------------
                0.00    0.00     100/5000        DoubleCRT::sampleHWt(long) [191]
                0.00    0.00     200/5000        RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.02    1500/5000        FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.05    3200/5000        RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
[28]     2.8    0.00    0.08    5000         DoubleCRT::operator=(NTL::ZZX const&) [28]
                0.01    0.07    5000/8200        DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
-----------------------------------------------
                                                 <spontaneous>
[29]     2.6    0.07    0.00                 void NTL::default_BlockConstructFromVec<long>(long*, long, long const*) [29]
-----------------------------------------------
                0.00    0.02     300/1100        SHEEP::ContextHElib_F2<bool>::Multiply(NTL::Vec<Ctxt>, NTL::Vec<Ctxt>) [33]
                0.00    0.02     400/1100        SHEEP::ContextHElib_F2<bool>::Add(NTL::Vec<Ctxt>, NTL::Vec<Ctxt>) [50]
                0.00    0.02     400/1100        Ctxt::operator*=(Ctxt const&) [47]
[30]     2.5    0.00    0.07    1100         Ctxt::modDownToLevel(long) [30]
                0.00    0.07    1100/1100        Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    1100/9100        operator&(IndexSet const&, IndexSet const&) [217]
                0.00    0.00    3100/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    1100/10000       IndexSet::intervalConstructor(long, long) [293]
                0.00    0.00    1100/2075300     IndexSet::next(long) const [85]
                0.00    0.00    2900/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    1100/3400        IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00    2200/6400        card(IndexSet const&) [387]
                0.00    0.00     300/7800        IndexSet::operator==(IndexSet const&) const [381]
-----------------------------------------------
                0.00    0.07    1100/1100        Ctxt::modDownToLevel(long) [30]
[31]     2.5    0.00    0.07    1100         Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.07    2200/2200        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.00    1100/36300       auto_timer::stop() [75]
                0.00    0.00    1100/2900        Ctxt::verifyPrimeSet() const [237]
                0.00    0.00    1100/9100        operator&(IndexSet const&, IndexSet const&) [217]
                0.00    0.00   10200/2075300     IndexSet::next(long) const [85]
                0.00    0.00    1100/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00    1100/13300       IndexSet::remove(IndexSet const&) [218]
                0.00    0.00    1100/1840800     GetTimerClock() [35]
                0.00    0.00    1100/7800        IndexSet::operator==(IndexSet const&) const [381]
                0.00    0.00    1100/2500        Ctxt::modSwitchAddedNoiseVar() const [427]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.07    2200/2200        Ctxt::modDownToSet(IndexSet const&) [31]
[32]     2.4    0.00    0.07    2200         DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.04    2200/2200        DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun) [41]
                0.01    0.01    2200/2600        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00    2200/7400        FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [81]
                0.00    0.00    2200/3500        DoubleCRT::automorph(long) [204]
                0.00    0.00   20400/1855100     std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
                0.00    0.00   20400/2075300     IndexSet::next(long) const [85]
                0.00    0.00    2200/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00    2200/13300       IndexSet::remove(IndexSet const&) [218]
                0.00    0.00    2200/7800        IndexSet::operator==(IndexSet const&) const [381]
-----------------------------------------------
                                                 <spontaneous>
[33]     2.3    0.00    0.06                 SHEEP::ContextHElib_F2<bool>::Multiply(NTL::Vec<Ctxt>, NTL::Vec<Ctxt>) [33]
                0.00    0.04     300/300         multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
                0.00    0.02     300/1100        Ctxt::modDownToLevel(long) [30]
-----------------------------------------------
                                                 <spontaneous>
[34]     2.2    0.06    0.00                 NTL::PowerMod(long, long, long) [34]
-----------------------------------------------
                0.00    0.00     100/1840800     EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const [306]
                0.00    0.00     200/1840800     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00     200/1840800     FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     200/1840800     FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     200/1840800     buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     200/1840800     MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     200/1840800     BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     300/1840800     Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.00     300/1840800     Ctxt::reLinearize(long) [67]
                0.00    0.00     300/1840800     Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00     300/1840800     Ctxt::multiplyBy(Ctxt const&) [37]
                0.00    0.00     300/1840800     multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
                0.00    0.00     600/1840800     DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00     600/1840800     EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00     600/1840800     EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     800/1840800     Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00     800/1840800     addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
                0.00    0.00     800/1840800     ConstMultiplierCache::upgrade(FHEcontext const&) [13]
                0.00    0.00    1000/1840800     FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00    1100/1840800     Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    1200/1840800     DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00    1300/1840800     Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00    1600/1840800     FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00    3000/1840800     Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00    3800/1840800     PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    4300/1840800     PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00    5200/1840800     Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00    5600/1840800     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00    7600/1840800     PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00    8100/1840800     PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
                0.00    0.00   10400/1840800     DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00   10400/1840800     DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.00   12600/1840800     DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00   15600/1840800     DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00   16400/1840800     DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00   36300/1840800     auto_timer::stop() [75]
                0.00    0.00   88400/1840800     Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
                0.01    0.00  163700/1840800     DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.01    0.00  457600/1840800     Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const [21]
                0.02    0.00  470400/1840800     Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const [20]
                0.02    0.00  508200/1840800     BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [10]
[35]     2.2    0.06    0.00 1840800         GetTimerClock() [35]
-----------------------------------------------
                0.00    0.04     300/300         SHEEP::ContextHElib_F2<bool>::Multiply(NTL::Vec<Ctxt>, NTL::Vec<Ctxt>) [33]
[36]     1.6    0.00    0.04     300         multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
                0.00    0.04     300/300         Ctxt::multiplyBy(Ctxt const&) [37]
                0.00    0.00     300/36300       auto_timer::stop() [75]
                0.00    0.00     300/300         void vecCopy<Ctxt>(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, long) [287]
                0.00    0.00     300/1840800     GetTimerClock() [35]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.04     300/300         multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
[37]     1.6    0.00    0.04     300         Ctxt::multiplyBy(Ctxt const&) [37]
                0.00    0.03     300/300         Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.02     300/300         Ctxt::reLinearize(long) [67]
                0.00    0.00     300/36300       auto_timer::stop() [75]
                0.00    0.00     300/1840800     GetTimerClock() [35]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     100/2800        FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.01     500/2800        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun) [135]
                0.00    0.03    2200/2800        DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun) [41]
[38]     1.6    0.00    0.04    2800         DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.04    2800/8200        DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00   15200/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00   15200/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00    5600/1840800     GetTimerClock() [35]
                0.00    0.00   15200/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   15200/252700      IndexSet::insert(long) [196]
                0.00    0.00   15200/2075300     IndexSet::next(long) const [85]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.04     500/500         EncryptedArray::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [40]
[39]     1.5    0.00    0.04     500         EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [39]
                0.00    0.04     500/500         FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00     500/500         EncryptedArrayDerived<PA_GF2>::encode(NTL::ZZX&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [219]
                0.00    0.00     500/500         void convert<NTL::GF2X, NTL::ZZX>(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [490]
                0.00    0.00     500/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
-----------------------------------------------
                                                 <spontaneous>
[40]     1.5    0.00    0.04                 EncryptedArray::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [40]
                0.00    0.04     500/500         EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [39]
-----------------------------------------------
                0.00    0.04    2200/2200        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
[41]     1.5    0.00    0.04    2200         DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun) [41]
                0.00    0.03    2200/2800        DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00    2200/5600        DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00    2200/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                0.00    0.04     500/500         EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [39]
[42]     1.5    0.00    0.04     500         FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.02    1500/5000        DoubleCRT::operator=(NTL::ZZX const&) [28]
                0.00    0.01     500/500         DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun) [135]
                0.00    0.00    1000/9200        DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00    1000/6300        DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00    1000/4400        sampleGaussian(NTL::ZZX&, long, double) [89]
                0.00    0.00    1000/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00     500/2600        Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00    1000/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00    1000/1840800     GetTimerClock() [35]
                0.00    0.00     500/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     500/500         sampleSmall(NTL::ZZX&, long) [489]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[43]     1.5    0.04    0.00                 NTL::PlainInvTrunc(NTL::zz_pX&, NTL::zz_pX const&, long) [43]
-----------------------------------------------
                0.00    0.04     100/100         addFrbMatrices(FHESecKey&, long) [45]
[44]     1.4    0.00    0.04     100         addSomeFrbMatrices(FHESecKey&, long, long) [44]
                0.00    0.04     100/300         add1Dmats4dim(FHESecKey&, long, long) [17]
-----------------------------------------------
                                                 <spontaneous>
[45]     1.4    0.00    0.04                 addFrbMatrices(FHESecKey&, long) [45]
                0.00    0.04     100/100         addSomeFrbMatrices(FHESecKey&, long, long) [44]
                0.00    0.00     100/200         FHEPubKey::setKeySwitchMap(long) [564]
-----------------------------------------------
                                                 <spontaneous>
[46]     1.3    0.04    0.00                 _ntl_gmul(_ntl_gbigint_body*, _ntl_gbigint_body*, _ntl_gbigint_body**) [46]
-----------------------------------------------
                0.00    0.03     300/300         Ctxt::multiplyBy(Ctxt const&) [37]
[47]     1.1    0.00    0.03     300         Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.02     400/1100        Ctxt::modDownToLevel(long) [30]
                0.00    0.00     300/300         Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00     300/36300       auto_timer::stop() [75]
                0.00    0.00     600/1400        Ctxt::findBaseLevel() const [252]
                0.00    0.00     300/2600        Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00     300/1840800     GetTimerClock() [35]
                0.00    0.00     300/1700        Ctxt::Ctxt(FHEPubKey const&, long) [446]
                0.00    0.00     300/7800        IndexSet::operator==(IndexSet const&) const [381]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00    2100/1538800     DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00    2200/1538800     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00    4400/1538800     DoubleCRT::Exp(long) [263]
                0.00    0.00   15200/1538800     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00   22100/1538800     DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00   27600/1538800     DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   32400/1538800     DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00   34800/1538800     DoubleCRT::automorph(long) [204]
                0.00    0.00   37800/1538800     DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   80000/1538800     DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00  114400/1538800     DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00  114400/1538800     DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.00  117600/1538800     DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00  158400/1538800     DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00  159200/1538800     DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00  194000/1538800     DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00  196600/1538800     DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00  225600/1538800     DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
[48]     1.1    0.02    0.01 1538800         std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.01    0.00 1538800/1855100     std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
                0.00    0.00  243800/243800      std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*) [243]
-----------------------------------------------
                                                 <spontaneous>
[49]     1.0    0.02    0.01                 NTL::PlainRem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [49]
                0.00    0.00  146150/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00  211589/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[50]     1.0    0.00    0.03                 SHEEP::ContextHElib_F2<bool>::Add(NTL::Vec<Ctxt>, NTL::Vec<Ctxt>) [50]
                0.00    0.02     400/1100        Ctxt::modDownToLevel(long) [30]
                0.00    0.00     400/400         addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
-----------------------------------------------
                0.00    0.00     200/9200        RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00    1000/9200        FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.01    0.00    3200/9200        RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
                0.01    0.00    4800/9200        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[51]     1.0    0.02    0.01    9200         DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00  194000/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  194000/1545500     IndexSet::contains(long) const [88]
                0.00    0.00  194000/2075300     IndexSet::next(long) const [85]
                0.00    0.00  194000/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.03     100/100         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
[52]     0.9    0.00    0.03     100         FHESecKey::genRecryptData() [52]
                0.00    0.01     100/200         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.01     100/1600        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00     100/100         FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     100/100         DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00     100/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     100/1600        PAlgebraModDerived<PA_zz_p>::getPPowR() const [449]
                0.00    0.00     100/400         PAlgebraModDerived<PA_GF2>::getPPowR() const [514]
                0.00    0.00     100/200         sampleHWt(NTL::ZZX&, long, long) [540]
-----------------------------------------------
                0.00    0.00     100/2600        FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     300/2600        DoubleCRT::addPrimes(IndexSet const&) [139]
                0.01    0.01    2200/2600        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
[53]     0.9    0.01    0.02    2600         DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.01   22100/22100       Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
                0.00    0.00   15600/1840800     GetTimerClock() [35]
                0.00    0.00   22100/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00    2600/16000       MakeIndexVector(IndexSet const&, NTL::Vec<long>&) [197]
                0.00    0.00    2600/9100        operator&(IndexSet const&, IndexSet const&) [217]
                0.00    0.00   22100/1545500     IndexSet::contains(long) const [88]
                0.00    0.00      50/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00   22100/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00       1/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    5200/5200        NTL::PartitionInfo::PartitionInfo(long, long) [399]
                0.00    0.00       3/55          registerTimer(FHEtimer*) [643]
                0.00    0.00       1/501         NTL::Vec<NTL::Vec<long> >::AllocateTo(long) [488]
                0.00    0.00       1/6525        NTL::Vec<NTL::zz_pX>::AllocateTo(long) [385]
                0.00    0.00       1/37509       NTL::Vec<unsigned long>::AllocateTo(long) [362]
                0.00    0.00       1/1501        NTL::Vec<double>::AllocateTo(long) [451]
-----------------------------------------------
                0.00    0.00       1/785957      DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00       1/785957      Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
                0.00    0.00     100/785957      NTL::SetX(NTL::zz_pX&) [344]
                0.00    0.00     100/785957      NTL::mul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_p) [343]
                0.00    0.00     200/785957      PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
                0.00    0.00     294/785957      NTL::MinPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [318]
                0.00    0.00     300/785957      NTL::IrredPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [330]
                0.00    0.00     300/785957      NTL::RecFindFactors(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::Vec<NTL::zz_p> const&, long, long) [331]
                0.00    0.00     307/785957      NTL::FromfftRep(NTL::zz_pX&, NTL::fftRep&, long, long) [56]
                0.00    0.00     462/785957      NTL::ProbMinPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [321]
                0.00    0.00     462/785957      NTL::TraceMap(NTL::zz_pX&, NTL::zz_pX const&, long, NTL::zz_pXModulus const&, NTL::zz_pX const&) [304]
                0.00    0.00     500/785957      NTL::mul_aux(NTL::Vec<NTL::zz_pE>&, NTL::Vec<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [319]
                0.00    0.00     554/785957      NTL::UpdateMap(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::zz_pXMultiplier const&, NTL::zz_pXModulus const&) [284]
                0.00    0.00     562/785957      NTL::random(NTL::zz_pX&, long) [317]
                0.00    0.00     800/785957      NTL::SetCoeff(NTL::zz_pEX&, long) [312]
                0.00    0.00     800/785957      NTL::negate(NTL::zz_pX&, NTL::zz_pX const&) [311]
                0.00    0.00     883/785957      NTL::BerlekampMassey(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&, long) [262]
                0.00    0.00    1200/785957      void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&) [289]
                0.00    0.00    1400/785957      NTL::mul_aux(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [182]
                0.00    0.00    1800/785957      NTL::SetCoeff(NTL::zz_pX&, long) [291]
                0.00    0.00    2600/785957      PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    2808/785957      NTL::ProjectPowers(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, long, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [228]
                0.00    0.00    3164/785957      NTL::PlainUpdateMap(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::zz_pX const&, NTL::zz_pX const&) [259]
                0.00    0.00    3800/785957      NTL::mul(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [84]
                0.00    0.00    4200/785957      NTL::PlainDivRem(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [264]
                0.00    0.00    7119/785957      NTL::conv(NTL::zz_pX&, NTL::zz_p) [248]
                0.00    0.00    8800/785957      BluesteinInit(long, NTL::zz_p const&, NTL::zz_pX&, NTL::Vec<unsigned long>&, NTL::fftRep&) [82]
                0.00    0.00    9300/785957      NTL::PlainDiv(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [232]
                0.00    0.00   10801/785957      NTL::conv(NTL::Vec<NTL::zz_p>&, NTL::Vec<long> const&) [231]
                0.00    0.00   14800/785957      NTL::ident(NTL::Mat<NTL::zz_pE>&, long) [220]
                0.00    0.00   17600/785957      NTL::sub(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [214]
                0.00    0.00   30100/785957      NTL::conv(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::ZZ> const&) [76]
                0.00    0.00   33200/785957      NTL::PlainSqr(NTL::zz_pX&, NTL::zz_pX const&) [205]
                0.00    0.00   37711/785957      NTL::VectorCopy(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, long) [202]
                0.00    0.00   48662/785957      NTL::add(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [74]
                0.00    0.00  108647/785957      NTL::Vec<NTL::zz_p>::SetMaxLength(long) [171]
                0.00    0.00  116861/785957      NTL::PlainMul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [69]
                0.00    0.00  146150/785957      NTL::PlainRem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [49]
                0.00    0.00  168608/785957      NTL::Vec<NTL::zz_p>::FixLength(long) [144]
[54]     0.9    0.02    0.00  785957         NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00  785957/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
-----------------------------------------------
                0.00    0.01     100/200         FHESecKey::GenSecKey(long, long, long) [77]
                0.00    0.01     100/200         FHESecKey::genRecryptData() [52]
[55]     0.8    0.00    0.02     200         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.02     200/1600        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00     100/200         RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00     100/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00     200/200         void std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_emplace_back_aux<DoubleCRT const&>(DoubleCRT const&) [337]
                0.00    0.00     200/6800        void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long const&>(long const&) [382]
                0.00    0.00     100/200         std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_assign(unsigned long, CtxtPart const&) [583]
                0.00    0.00     100/400         PAlgebraModDerived<PA_GF2>::getPPowR() const [514]
-----------------------------------------------
                                                 <spontaneous>
[56]     0.7    0.02    0.00                 NTL::FromfftRep(NTL::zz_pX&, NTL::fftRep&, long, long) [56]
                0.00    0.00     307/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[57]     0.7    0.02    0.00                 _ntl_gcopy(_ntl_gbigint_body*, _ntl_gbigint_body**) [57]
-----------------------------------------------
                                                 <spontaneous>
[58]     0.7    0.02    0.00                 _ntl_general_rem_one_struct_apply(_ntl_gbigint_body*, long, _ntl_general_rem_one_struct*) [58]
-----------------------------------------------
                                                 <spontaneous>
[59]     0.7    0.02    0.00                 NTL::TofftRep_trunc(NTL::fftRep&, NTL::zz_pX const&, long, long, long, long) [59]
-----------------------------------------------
                                                 <spontaneous>
[60]     0.7    0.02    0.00                 NTL::zz_pX::normalize() [60]
-----------------------------------------------
                                                 <spontaneous>
[61]     0.7    0.02    0.00                 NTL::sha256_transform(NTL::SHA256_CTX&, unsigned char*) [61]
-----------------------------------------------
                                                 <spontaneous>
[62]     0.7    0.02    0.00                 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*) [62]
-----------------------------------------------
                                                 <spontaneous>
[63]     0.7    0.02    0.00                 std::__detail::_Hash_node_value_base<std::pair<long const, NTL::Vec<long> > >::_M_valptr() [63]
-----------------------------------------------
                0.00    0.00     200/3700        RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00     300/3700        Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.01    0.01    3200/3700        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[64]     0.7    0.01    0.01    3700         DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.01    0.00  163700/1840800     GetTimerClock() [35]
                0.00    0.00   80000/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00    3700/36300       auto_timer::stop() [75]
                0.00    0.00   80000/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   80000/2075300     IndexSet::next(long) const [85]
                0.00    0.00   80000/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    3700/3700        NTL::Vec<unsigned char>::~Vec() [415]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     100/6300        FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     200/6300        RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00     600/6300        Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00    1000/6300        FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00    1200/6300        Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.01    0.00    3200/6300        RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
[65]     0.6    0.01    0.01    6300         DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00  196600/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  196600/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    8600/34200       IndexSet::contains(IndexSet const&) const [177]
                0.00    0.00   98300/2075300     IndexSet::next(long) const [85]
                0.00    0.00    6300/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   12600/1840800     GetTimerClock() [35]
                0.00    0.00    6300/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00  196600/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    6300/19600       operator<=(IndexSet const&, IndexSet const&) [370]
                0.00    0.00    2300/14600       operator>=(IndexSet const&, IndexSet const&) [373]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     200/5600        RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00    2200/5600        DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun) [41]
                0.01    0.00    3200/5600        RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
[66]     0.6    0.01    0.01    5600         DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00  159200/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  159200/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   11200/34200       IndexSet::contains(IndexSet const&) const [177]
                0.00    0.00    5600/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   79600/2075300     IndexSet::next(long) const [85]
                0.00    0.00    5600/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00  159200/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    5600/19600       operator<=(IndexSet const&, IndexSet const&) [370]
                0.00    0.00    5600/14600       operator>=(IndexSet const&, IndexSet const&) [373]
-----------------------------------------------
                0.00    0.02     300/300         Ctxt::multiplyBy(Ctxt const&) [37]
[67]     0.6    0.00    0.02     300         Ctxt::reLinearize(long) [67]
                0.00    0.01     300/300         Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.00     600/1300        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00     600/1400        DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00     300/36300       auto_timer::stop() [75]
                0.00    0.00     300/2600        Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00    2100/2075300     IndexSet::next(long) const [85]
                0.00    0.00     300/1840800     GetTimerClock() [35]
                0.00    0.00     300/3400        IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00     300/1700        Ctxt::Ctxt(FHEPubKey const&, long) [446]
                0.00    0.00     300/1900        FHEPubKey::getKeySWmatrix(SKHandle const&, long) const [441]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     100/895079      PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00     200/895079      PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
                0.00    0.00     300/895079      PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const [338]
                0.00    0.00     300/895079      NTL::PlainDiv(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [232]
                0.00    0.00     300/895079      NTL::BuildFromRoots(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&) [339]
                0.00    0.00     400/895079      PAlgebraModDerived<PA_zz_p>::genCrtTable() [326]
                0.00    0.00     400/895079      EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     400/895079      Step2Matrix<PA_zz_p>::get(NTL::zz_pX&, long, long, long) const [334]
                0.00    0.00     400/895079      void NTL::conv<NTL::Vec<NTL::zz_pX>, NTL::Vec<NTL::zz_pE> >(NTL::Vec<NTL::Vec<NTL::zz_pX> >&, NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [335]
                0.00    0.00     400/895079      NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
                0.00    0.00     400/895079      NTL::SetCoeff(NTL::zz_pEX&, long, NTL::zz_pE const&) [336]
                0.00    0.00     456/895079      NTL::PowerXPlusAMod(NTL::zz_pX&, NTL::zz_p, NTL::ZZ const&, NTL::zz_pXModulus const&) [333]
                0.00    0.00     462/895079      NTL::MinPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [318]
                0.00    0.00     762/895079      NTL::Vec<NTL::zz_pX>::append(NTL::zz_pX const&) [320]
                0.00    0.00    1100/895079      NTL::PowerXMod(NTL::zz_pX&, NTL::ZZ const&, NTL::zz_pXModulus const&) [316]
                0.00    0.00    1200/895079      MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00    1200/895079      NTL::GCD(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [314]
                0.00    0.00    1300/895079      EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00    1386/895079      NTL::TraceMap(NTL::zz_pX&, NTL::zz_pX const&, long, NTL::zz_pXModulus const&, NTL::zz_pX const&) [304]
                0.00    0.00    1400/895079      void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&) [289]
                0.00    0.00    1404/895079      NTL::ProjectPowers(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, long, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [228]
                0.00    0.00    1800/895079      NTL::InvMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [307]
                0.00    0.00    1800/895079      NTL::PlainGCD(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [308]
                0.00    0.00    2772/895079      NTL::Comp2Mod(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [295]
                0.00    0.00    3164/895079      NTL::PlainUpdateMap(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::zz_pX const&, NTL::zz_pX const&) [259]
                0.00    0.00    3827/895079      NTL::UpdateMap(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::zz_pXMultiplier const&, NTL::zz_pXModulus const&) [284]
                0.00    0.00    4800/895079      Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00    5901/895079      NTL::CompMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [200]
                0.00    0.00    6000/895079      EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00    6458/895079      NTL::BerlekampMassey(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&, long) [262]
                0.00    0.00    6600/895079      PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [274]
                0.00    0.00    7600/895079      InvModpr(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [265]
                0.00    0.00    9600/895079      BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00   11162/895079      NTL::build(NTL::zz_pXModulus&, NTL::zz_pX const&) [253]
                0.00    0.00   13200/895079      buildLinPolyMatrix(NTL::Mat<NTL::zz_pE>&, long) [247]
                0.00    0.00   13300/895079      NTL::PowerMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::ZZ const&, NTL::zz_pXModulus const&) [246]
                0.00    0.00   16200/895079      NTL::inv(NTL::zz_pE&, NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&) [236]
                0.00    0.00   16500/895079      NTL::XGCD(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [235]
                0.00    0.00   23300/895079      NTL::rem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [227]
                0.00    0.00   24000/895079      NTL::Vec<NTL::Vec<NTL::zz_p> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [226]
                0.00    0.00   25795/895079      NTL::build(NTL::zz_pXMultiplier&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [223]
                0.00    0.00   26600/895079      PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
                0.00    0.00   39556/895079      NTL::conv(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&) [211]
                0.00    0.00   43600/895079      NTL::IterHalfGCD(NTL::zz_pXMatrix&, NTL::zz_pX&, NTL::zz_pX&, long) [210]
                0.00    0.00   59200/895079      NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00   73135/895079      NTL::PlainMul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [69]
                0.00    0.00  103600/895079      NTL::mul_aux(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [182]
                0.00    0.00  119750/895079      NTL::rem21(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [73]
                0.00    0.00  211589/895079      NTL::PlainRem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [49]
[68]     0.6    0.01    0.01  895079         NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.01    0.00  888577/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00  491671/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                                                 <spontaneous>
[69]     0.6    0.01    0.00                 NTL::PlainMul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [69]
                0.00    0.00  116861/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00   73135/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.01   22100/22100       DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
[70]     0.5    0.00    0.01   22100         Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
                0.01    0.00   22100/254100      BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [10]
                0.00    0.00   88400/1840800     GetTimerClock() [35]
                0.00    0.00       1/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00   22100/22100       rem(NTL::zz_pX&, NTL::zz_pX const&, zz_pXModulus1 const&) [369]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.01     300/300         Ctxt::reLinearize(long) [67]
[71]     0.5    0.00    0.01     300         Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.01     300/300         DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     300/300         Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00     300/36300       auto_timer::stop() [75]
                0.00    0.00     300/300         keySwitchNoise(CtxtPart const&, FHEPubKey const&, long) [310]
                0.00    0.00     300/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     300/1840800     GetTimerClock() [35]
                0.00    0.00     300/3400        IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.01     200/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[72]     0.5    0.00    0.01     200         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.01     100/100         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     100/100         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
                0.00    0.00     200/36300       auto_timer::stop() [75]
                0.00    0.00     200/1840800     GetTimerClock() [35]
                0.00    0.00     400/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     400/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     200/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     200/200         _ZNK14EncryptedArray8dispatchI27BlockMatMul1DExec_constructIRK13BlockMatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [570]
                0.00    0.00     100/100         Step1Matrix<PA_GF2>::getEA() const [622]
                0.00    0.00     100/100         Step1Matrix<PA_zz_p>::getEA() const [623]
                0.00    0.00     100/400         Step1Matrix<PA_GF2>::getDim() const [509]
                0.00    0.00     100/400         Step1Matrix<PA_zz_p>::getDim() const [510]
                0.00    0.00     100/900         EncryptedArrayDerived<PA_GF2>::getDegree() const [462]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.4    0.01    0.00                 NTL::rem21(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [73]
                0.00    0.00  119750/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.4    0.01    0.00                 NTL::add(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [74]
                0.00    0.00   48662/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     100/36300       EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const [306]
                0.00    0.00     200/36300       MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     200/36300       BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     300/36300       Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.00     300/36300       Ctxt::reLinearize(long) [67]
                0.00    0.00     300/36300       Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00     300/36300       Ctxt::multiplyBy(Ctxt const&) [37]
                0.00    0.00     300/36300       multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
                0.00    0.00     600/36300       EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00     600/36300       EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     800/36300       Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00     800/36300       ConstMultiplierCache::upgrade(FHEcontext const&) [13]
                0.00    0.00    1100/36300       Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    1300/36300       Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00    1600/36300       FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00    3700/36300       DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00    3800/36300       PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    4300/36300       PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00    7600/36300       PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00    8100/36300       PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
[75]     0.4    0.01    0.00   36300         auto_timer::stop() [75]
                0.00    0.00   36300/1840800     GetTimerClock() [35]
-----------------------------------------------
                                                 <spontaneous>
[76]     0.4    0.01    0.00                 NTL::conv(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::ZZ> const&) [76]
                0.00    0.00   30100/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[77]     0.4    0.00    0.01                 FHESecKey::GenSecKey(long, long, long) [77]
                0.00    0.01     100/200         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.00     100/3600        DoubleCRT::DoubleCRT(FHEcontext const&) [142]
-----------------------------------------------
                0.00    0.01     100/100         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
[78]     0.4    0.00    0.01     100         buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.01     200/200         AddManyPrimes(FHEcontext&, double, bool, bool) [130]
                0.00    0.00     100/2300        FHEcontext::AddPrime(long, long, bool) [79]
                0.00    0.00    3800/2075300     IndexSet::next(long) const [85]
                0.00    0.00     800/252700      IndexSet::insert(long) [196]
                0.00    0.00     100/800         IndexSet::insert(IndexSet const&) [309]
                0.00    0.00     100/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00     100/400         PAlgebraModDerived<PA_GF2>::getPPowR() const [514]
                0.00    0.00     100/100         std::vector<IndexSet, std::allocator<IndexSet> >::_M_default_append(unsigned long) [634]
-----------------------------------------------
                0.00    0.00     100/2300        buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.01    2200/2300        AddManyPrimes(FHEcontext&, double, bool, bool) [130]
[79]     0.4    0.00    0.01    2300         FHEcontext::AddPrime(long, long, bool) [79]
                0.00    0.01    2200/2200        Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
                0.00    0.00     600/600         void std::vector<Cmodulus, std::allocator<Cmodulus> >::_M_emplace_back_aux<Cmodulus>(Cmodulus&&) [280]
                0.00    0.00    2200/252700      IndexSet::insert(long) [196]
                0.00    0.00    2200/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.01    2200/2200        FHEcontext::AddPrime(long, long, bool) [79]
[80]     0.4    0.00    0.01    2200         Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
                0.01    0.00    4400/4400        BluesteinInit(long, NTL::zz_p const&, NTL::zz_pX&, NTL::Vec<unsigned long>&, NTL::fftRep&) [82]
                0.00    0.00    2200/2200        zz_pXModulus1::zz_pXModulus1(long, NTL::zz_pX const&) [324]
                0.00    0.00    2200/2200        void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long) [432]
                0.00    0.00    2200/2200        FindPrimitiveRoot(NTL::zz_p&, unsigned long) [433]
                0.00    0.00    2200/2200        BuildContext(long, long) [431]
-----------------------------------------------
                0.00    0.00     100/7400        Ctxt::addConstant(DoubleCRT const&, double) [241]
                0.00    0.00     300/7400        DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00    2200/7400        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.01    0.00    4800/7400        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[81]     0.4    0.01    0.00    7400         FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [81]
                0.00    0.00   59500/2075300     IndexSet::next(long) const [85]
-----------------------------------------------
                0.01    0.00    4400/4400        Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
[82]     0.4    0.01    0.00    4400         BluesteinInit(long, NTL::zz_p const&, NTL::zz_pX&, NTL::Vec<unsigned long>&, NTL::fftRep&) [82]
                0.00    0.00    8800/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    4400/37509       NTL::Vec<unsigned long>::AllocateTo(long) [362]
-----------------------------------------------
                                                 <spontaneous>
[83]     0.4    0.01    0.00                 NTL::mul_strassen(NTL::mat_window_zz_p const&, NTL::const_mat_window_zz_p const&, NTL::const_mat_window_zz_p const&) [83]
                0.00    0.00    7946/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.4    0.01    0.00                 NTL::mul(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [84]
                0.00    0.00    3800/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00       1/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00   15200/15500       NTL::Vec<NTL::zz_p>::SetLength(long) [372]
-----------------------------------------------
                0.00    0.00    1100/2075300     Ctxt::modDownToLevel(long) [30]
                0.00    0.00    1300/2075300     FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00    1400/2075300     Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    1400/2075300     Ctxt::findBaseLevel() const [252]
                0.00    0.00    2100/2075300     DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00    2100/2075300     Ctxt::reLinearize(long) [67]
                0.00    0.00    2100/2075300     FHEcontext::logOfProduct(IndexSet const&) const [327]
                0.00    0.00    2200/2075300     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00    3800/2075300     buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.00    4400/2075300     DoubleCRT::Exp(long) [263]
                0.00    0.00    5300/2075300     keySwitchNoise(CtxtPart const&, FHEPubKey const&, long) [310]
                0.00    0.00   10200/2075300     Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00   15200/2075300     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00   16200/2075300     DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00   20400/2075300     DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.00   34800/2075300     DoubleCRT::automorph(long) [204]
                0.00    0.00   37800/2075300     DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   39400/2075300     DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   53900/2075300     IndexSet::remove(long) [239]
                0.00    0.00   59500/2075300     FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [81]
                0.00    0.00   70800/2075300     IndexSet::remove(IndexSet const&) [218]
                0.00    0.00   79600/2075300     DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00   80000/2075300     DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00   85900/2075300     IndexSet::retain(IndexSet const&) [216]
                0.00    0.00   98300/2075300     DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00  112800/2075300     DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00  114400/2075300     DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.00  158400/2075300     DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00  194000/2075300     DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00  254100/2075300     MakeIndexVector(IndexSet const&, NTL::Vec<long>&) [197]
                0.00    0.00  512400/2075300     IndexSet::contains(IndexSet const&) const [177]
[85]     0.4    0.01    0.00 2075300         IndexSet::next(long) const [85]
-----------------------------------------------
                0.00    0.00    1800/1855100     std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [328]
                0.00    0.00   10000/1855100     IndexSet::intervalConstructor(long, long) [293]
                0.00    0.00   20400/1855100     DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.00   45300/1855100     std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [244]
                0.00    0.00  238800/1855100     IndexSet::insert(long) [196]
                0.01    0.00 1538800/1855100     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
[86]     0.4    0.01    0.00 1855100         std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
-----------------------------------------------
                0.00    0.00     200/1726896     NTL::EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [346]
                0.00    0.00     400/1726896     NTL::Vec<NTL::zz_pX>::append(NTL::zz_pX const&) [320]
                0.00    0.00     462/1726896     NTL::FindRoots(NTL::Vec<NTL::zz_p>&, NTL::zz_pX const&) [345]
                0.00    0.00     700/1726896     NTL::Vec<NTL::zz_p>::Vec(NTL::Vec<NTL::zz_p> const&) [341]
                0.00    0.00     800/1726896     NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00    2200/1726896     zz_pXModulus1::zz_pXModulus1(long, NTL::zz_pX const&) [324]
                0.00    0.00    2400/1726896     NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long, NTL::Vec<NTL::zz_p> const*) [323]
                0.00    0.00    9600/1726896     std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [292]
                0.00    0.00   14400/1726896     NTL::Vec<NTL::zz_pE>::Init(long, NTL::zz_pE const*) [281]
                0.00    0.00   21200/1726896     Cmodulus::operator=(Cmodulus const&) [267]
                0.00    0.00  785957/1726896     NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.01    0.00  888577/1726896     NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
[87]     0.4    0.01    0.00 1726896         NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
-----------------------------------------------
                0.00    0.00    1400/1545500     Ctxt::findBaseLevel() const [252]
                0.00    0.00    2100/1545500     DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00    2200/1545500     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00    2200/1545500     Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    3100/1545500     Ctxt::modDownToLevel(long) [30]
                0.00    0.00    4400/1545500     DoubleCRT::Exp(long) [263]
                0.00    0.00   15200/1545500     DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00   22100/1545500     DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00   27600/1545500     DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   32400/1545500     DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00   34800/1545500     DoubleCRT::automorph(long) [204]
                0.00    0.00   37800/1545500     DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   80000/1545500     DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00  114400/1545500     DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00  114400/1545500     DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.00  117600/1545500     DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00  158400/1545500     DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00  159200/1545500     DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00  194000/1545500     DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00  196600/1545500     DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00  225600/1545500     DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
[88]     0.4    0.01    0.00 1545500         IndexSet::contains(long) const [88]
-----------------------------------------------
                0.00    0.00     200/4400        RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00    1000/4400        FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.01    0.00    3200/4400        RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
[89]     0.4    0.01    0.00    4400         sampleGaussian(NTL::ZZX&, long, double) [89]
                0.00    0.00    4400/5200        NTL::Vec<NTL::ZZ>::SetMaxLength(long) [400]
-----------------------------------------------
                0.00    0.00     300/3500        DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.01    0.00    3200/3500        std::vector<DoubleCRT, std::allocator<DoubleCRT> >::resize(unsigned long, DoubleCRT const&) [131]
[90]     0.4    0.01    0.00    3500         std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<DoubleCRT*, std::vector<DoubleCRT, std::allocator<DoubleCRT> > >, unsigned long, DoubleCRT const&) [90]
-----------------------------------------------
                0.00    0.00     100/400         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
                0.01    0.00     300/400         PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
[91]     0.4    0.01    0.00     400         Cyclotomic(long) [91]
                0.00    0.00    2200/2200        mobius(long) [434]
                0.00    0.00    1200/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
-----------------------------------------------
                                                 <spontaneous>
[92]     0.4    0.01    0.00                 _ntl_GetTime() [92]
-----------------------------------------------
                                                 <spontaneous>
[93]     0.4    0.01    0.00                 _ntl_gsetlength(_ntl_gbigint_body**, long) [93]
-----------------------------------------------
                                                 <spontaneous>
[94]     0.4    0.01    0.00                 _ntl_gblock_destroy(_ntl_gbigint_body*) [94]
-----------------------------------------------
                                                 <spontaneous>
[95]     0.4    0.01    0.00                 _ntl_rem_struct_fast::fetch() [95]
-----------------------------------------------
                                                 <spontaneous>
[96]     0.4    0.01    0.00                 NTL::KarSqr_long(NTL::zz_p*, NTL::zz_p const*, long, NTL::zz_p*) [96]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.4    0.01    0.00                 NTL::scope_guard<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>::scope_guard({lambda()#1}&&, char const*) [97]
-----------------------------------------------
                                                 <spontaneous>
[98]     0.4    0.01    0.00                 NTL::FromModularRep(NTL::ZZ_p&, NTL::Vec<long>&, NTL::ZZ_pFFTInfoT const*, NTL::ZZ_pTmpSpaceT*) [98]
-----------------------------------------------
                                                 <spontaneous>
[99]     0.4    0.01    0.00                 NTL::NextPowerOfTwo(long) [99]
-----------------------------------------------
                                                 <spontaneous>
[100]    0.4    0.01    0.00                 NTL::RandomLen_long(long) [100]
-----------------------------------------------
                                                 <spontaneous>
[101]    0.4    0.01    0.00                 void NTL::default_BlockDestroy<NTL::ZZ>(NTL::ZZ*, long) [101]
-----------------------------------------------
                                                 <spontaneous>
[102]    0.4    0.01    0.00                 void NTL::BlockConstructFromVec<long>(long*, long, long const*) [102]
-----------------------------------------------
                                                 <spontaneous>
[103]    0.4    0.01    0.00                 NTL::FFTMulTabsDeleterPolicy::deleter(NTL::FFTMulTabs*) [103]
-----------------------------------------------
                                                 <spontaneous>
[104]    0.4    0.01    0.00                 NTL::ZZ::~ZZ() [104]
-----------------------------------------------
                                                 <spontaneous>
[105]    0.4    0.01    0.00                 NTL::Vec<long>::AllocateTo(long) [105]
-----------------------------------------------
                                                 <spontaneous>
[106]    0.4    0.01    0.00                 NTL::add(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [106]
                0.00    0.00   14200/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
-----------------------------------------------
                                                 <spontaneous>
[107]    0.4    0.01    0.00                 NTL::conv(NTL::zz_pX&, long) [107]
-----------------------------------------------
                                                 <spontaneous>
[108]    0.4    0.01    0.00                 NTL::zz_p::FFTInit(long) [108]
-----------------------------------------------
                                                 <spontaneous>
[109]    0.4    0.01    0.00                 NTL::fftRep::operator=(NTL::fftRep const&) [109]
-----------------------------------------------
                                                 <spontaneous>
[110]    0.4    0.01    0.00                 NTL::random(NTL::Vec<NTL::zz_p>&, long) [110]
-----------------------------------------------
                                                 <spontaneous>
[111]    0.4    0.01    0.00                 NTL::PlainMul(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [111]
                0.00    0.00   15500/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
-----------------------------------------------
                                                 <spontaneous>
[112]    0.4    0.01    0.00                 NTL::SetCoeff(NTL::zz_pX&, long, NTL::zz_p) [112]
-----------------------------------------------
                                                 <spontaneous>
[113]    0.4    0.01    0.00                 NTL::ProbPrime(long, long) [113]
-----------------------------------------------
                                                 <spontaneous>
[114]    0.4    0.01    0.00                 NTL::zz_pContext::restore() const [114]
-----------------------------------------------
                                                 <spontaneous>
[115]    0.4    0.01    0.00                 NTL::zz_pEContext::restore() const [115]
                0.00    0.00     200/300         NTL::MakeSmartAux<NTL::zz_pEInfoT>::~MakeSmartAux() [529]
-----------------------------------------------
                                                 <spontaneous>
[116]    0.4    0.01    0.00                 NTL::Vec<long>::MaxLength() const [116]
-----------------------------------------------
                                                 <spontaneous>
[117]    0.4    0.01    0.00                 __gnu_cxx::__aligned_buffer<std::pair<long const, NTL::Vec<long> > >::_M_ptr() const [117]
-----------------------------------------------
                                                 <spontaneous>
[118]    0.4    0.01    0.00                 std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>::_M_next() const [118]
-----------------------------------------------
                                                 <spontaneous>
[119]    0.4    0.01    0.00                 std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [119]
-----------------------------------------------
                                                 <spontaneous>
[120]    0.4    0.01    0.00                 std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [120]
-----------------------------------------------
                                                 <spontaneous>
[121]    0.4    0.01    0.00                 void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#1}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#1} const&) [121]
-----------------------------------------------
                                                 <spontaneous>
[122]    0.4    0.01    0.00                 long const& std::__pair_get<0ul>::__const_get<long const, NTL::Vec<long> >(std::pair<long const, NTL::Vec<long> > const&) [122]
-----------------------------------------------
                                                 <spontaneous>
[123]    0.4    0.01    0.00                 std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::_Bit_const_iterator, std::_Bit_iterator>(std::_Bit_const_iterator, std::_Bit_const_iterator, std::_Bit_iterator) [123]
-----------------------------------------------
                                                 <spontaneous>
[124]    0.4    0.01    0.00                 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >&, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*, unsigned long) [124]
-----------------------------------------------
                                                 <spontaneous>
[125]    0.4    0.01    0.00                 std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_iterator const&) [125]
-----------------------------------------------
                                                 <spontaneous>
[126]    0.4    0.01    0.00                 std::pair<long const, NTL::Vec<long> >::pair(std::pair<long const, NTL::Vec<long> > const&) [126]
-----------------------------------------------
                                                 <spontaneous>
[127]    0.4    0.01    0.00                 std::__detail::_Equal_helper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, NTL::Vec<Ctxt> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, unsigned long, true>::_S_equals(std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, NTL::Vec<Ctxt> >, true>*) [127]
-----------------------------------------------
                                                 <spontaneous>
[128]    0.4    0.01    0.00                 void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}&& std::forward<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>(std::remove_reference<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>::type&) [128]
-----------------------------------------------
                                                 <spontaneous>
[129]    0.4    0.01    0.00                 std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>* std::addressof<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>&) [129]
-----------------------------------------------
                0.00    0.01     200/200         buildModChain(FHEcontext&, long, long, long) [78]
[130]    0.4    0.00    0.01     200         AddManyPrimes(FHEcontext&, double, bool, bool) [130]
                0.00    0.01    2200/2300        FHEcontext::AddPrime(long, long, bool) [79]
-----------------------------------------------
                0.00    0.01    3200/3200        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[131]    0.3    0.00    0.01    3200         std::vector<DoubleCRT, std::allocator<DoubleCRT> >::resize(unsigned long, DoubleCRT const&) [131]
                0.01    0.00    3200/3500        std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<DoubleCRT*, std::vector<DoubleCRT, std::allocator<DoubleCRT> > >, unsigned long, DoubleCRT const&) [90]
-----------------------------------------------
                0.00    0.01     300/300         Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
[132]    0.3    0.00    0.01     300         DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.01     300/300         DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00     300/3500        std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<DoubleCRT*, std::vector<DoubleCRT, std::allocator<DoubleCRT> > >, unsigned long, DoubleCRT const&) [90]
                0.00    0.00     300/7400        FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [81]
                0.00    0.00     300/3000        DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00    1200/1840800     GetTimerClock() [35]
                0.00    0.00     600/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00     300/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00     300/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     300/300         operator|(IndexSet const&, IndexSet const&) [325]
                0.00    0.00     300/13300       IndexSet::remove(IndexSet const&) [218]
                0.00    0.00     300/1900        IndexSet::emptySet() [440]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.01     100/100         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
[133]    0.3    0.00    0.01     100         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.01     200/200         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00    2400/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
                0.00    0.00     200/200         BlockMatMul1D_derived<PA_GF2>::processDiagonal(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&) const [578]
                0.00    0.00     100/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     100/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     100/900         EncryptedArrayDerived<PA_GF2>::getDegree() const [462]
                0.00    0.00     100/400         dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     100/500         PAlgebraModDerived<PA_GF2>::restoreContext() const [493]
                0.00    0.00     100/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00     100/400         Step1Matrix<PA_GF2>::getDim() const [509]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long) [524]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long) [525]
-----------------------------------------------
                0.00    0.01     200/200         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
[134]    0.3    0.00    0.01     200         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.01     400/500         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00    2400/4300        PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
                0.00    0.00    2400/2600        EncryptedArrayDerived<PA_GF2>::encode(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [425]
                0.00    0.00     800/900         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::operator=(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [464]
                0.00    0.00     400/800         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::vector(unsigned long, std::allocator<NTL::GF2X> const&) [469]
                0.00    0.00     400/400         std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::vector(unsigned long, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > const&) [520]
                0.00    0.00     400/2700        mcMod(long, long) [419]
                0.00    0.00     400/400         Step1Matrix<PA_GF2>::get(NTL::Mat<NTL::GF2>&, long, long, long) const [508]
                0.00    0.00     400/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00     400/400         std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::~vector() [521]
                0.00    0.00     200/400         Step1Matrix<PA_GF2>::getDim() const [509]
                0.00    0.00     200/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     200/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     200/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     200/900         EncryptedArrayDerived<PA_GF2>::getDegree() const [462]
                0.00    0.00     200/1700        NTL::Mat<NTL::GF2>::SetDims(long, long) [444]
                0.00    0.00     200/4300        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long) [409]
                0.00    0.00     200/600         NTL::Vec<NTL::Vec<NTL::GF2> >::~Vec() [483]
                0.00    0.00     100/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
-----------------------------------------------
                0.00    0.01     500/500         FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
[135]    0.3    0.00    0.01     500         DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun) [135]
                0.00    0.01     500/2800        DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00     500/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00     500/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                0.00    0.00     200/6700        FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     300/6700        Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00     500/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun) [135]
                0.00    0.00     700/6700        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00     800/6700        Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00    1000/6700        FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00    3200/6700        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[136]    0.3    0.00    0.01    6700         DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00  225600/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00  225600/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   13400/34200       IndexSet::contains(IndexSet const&) const [177]
                0.00    0.00  112800/2075300     IndexSet::next(long) const [85]
                0.00    0.00    6700/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00    6700/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00  225600/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    6700/19600       operator<=(IndexSet const&, IndexSet const&) [370]
                0.00    0.00    6700/14600       operator>=(IndexSet const&, IndexSet const&) [373]
-----------------------------------------------
                0.00    0.00     100/500         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.01     400/500         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[137]    0.3    0.00    0.01     500         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.01    0.00     100/100         buildLinPolyMatrix(NTL::Mat<NTL::GF2E>&, long) [141]
                0.00    0.00     600/36300       auto_timer::stop() [75]
                0.00    0.00     600/1840800     GetTimerClock() [35]
                0.00    0.00    1000/1400        NTL::Vec<NTL::GF2E>::~Vec() [452]
                0.00    0.00     500/5400        NTL::Vec<NTL::GF2E>::AllocateTo(long) [393]
                0.00    0.00     500/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
                0.00    0.00     200/300         NTL::Vec<NTL::Vec<NTL::GF2E> >::~Vec() [532]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     100/100         NTL::Mat<NTL::GF2E>* NTL::MakeRaw<NTL::Mat<NTL::GF2E>, NTL::Mat<NTL::GF2E>&>(NTL::Mat<NTL::GF2E>&) [619]
                0.00    0.00     100/200         std::unique_lock<std::mutex>::unlock() [582]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.01     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[138]    0.3    0.00    0.01     100         PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [138]
                0.00    0.01     100/100         PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
                0.00    0.00    2200/2200        PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [274]
                0.00    0.00     100/100         NTL::Vec<PowerfulConversion>::AllocateTo(long) [610]
                0.00    0.00     100/100         void NTL::default_BlockConstruct<PowerfulConversion>(PowerfulConversion*, long) [606]
-----------------------------------------------
                0.00    0.01     300/300         DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
[139]    0.3    0.00    0.01     300         DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00     300/8200        DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00     300/2600        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00    2100/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00    2100/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00     600/1840800     GetTimerClock() [35]
                0.00    0.00    2100/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    2100/252700      IndexSet::insert(long) [196]
                0.00    0.00    2100/2075300     IndexSet::next(long) const [85]
                0.00    0.00     300/3400        IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.01     100/100         PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [138]
[140]    0.3    0.00    0.01     100         PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
                0.01    0.00     300/400         Cyclotomic(long) [91]
                0.00    0.00    1000/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00     200/700         computeProd(NTL::Vec<long> const&) [474]
                0.00    0.00     200/600         phi_N(long) [480]
                0.00    0.00     100/400         NTL::Vec<NTL::ZZX>::AllocateTo(long) [503]
-----------------------------------------------
                0.01    0.00     100/100         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
[141]    0.3    0.01    0.00     100         buildLinPolyMatrix(NTL::Mat<NTL::GF2E>&, long) [141]
                0.00    0.00     100/200         NTL::Mat<NTL::GF2E>::SetDims(long, long) [151]
-----------------------------------------------
                0.00    0.00     100/3600        FHESecKey::GenSecKey(long, long, long) [77]
                0.00    0.00     300/3600        Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.01    3200/3600        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[142]    0.2    0.00    0.01    3600         DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00  158400/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00   79200/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00  158400/1545500     IndexSet::contains(long) const [88]
                0.00    0.00  158400/2075300     IndexSet::next(long) const [85]
                0.00    0.00   79200/252700      IndexSet::insert(long) [196]
                0.00    0.00    3600/10000       IndexSet::intervalConstructor(long, long) [293]
                0.00    0.00   79200/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.00     100/200         FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     100/200         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
[143]    0.2    0.00    0.01     200         RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00     200/5000        DoubleCRT::operator=(NTL::ZZX const&) [28]
                0.00    0.00     200/3700        DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00     200/5600        DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00     200/9200        DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00     200/6300        DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00     200/4400        sampleGaussian(NTL::ZZX&, long, double) [89]
                0.00    0.00     200/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                0.00    0.01  168608/168608      void NTL::Vec<NTL::Vec<NTL::zz_p> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_p>::Fixer>(long, NTL::Mat<NTL::zz_p>::Fixer&) [146]
[144]    0.2    0.00    0.01  168608         NTL::Vec<NTL::zz_p>::FixLength(long) [144]
                0.00    0.00  168608/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     100/26215       EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     100/26215       NTL::basic_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [290]
                0.00    0.00     100/26215       NTL::relaxed_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [313]
                0.00    0.00     200/26215       void NTL::conv<NTL::zz_p, NTL::ZZ>(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::ZZ> const&) [300]
                0.00    0.00     200/26215       BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00     200/26215       NTL::sub(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [302]
                0.00    0.00     200/26215       NTL::ident(NTL::Mat<NTL::zz_p>&, long) [303]
                0.00    0.00     200/26215       NTL::mul(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::zz_p) [301]
                0.00    0.00     400/26215       PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00     500/26215       Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00     600/26215       void NTL::conv<NTL::zz_p, long>(NTL::Mat<NTL::zz_p>&, NTL::Mat<long> const&) [269]
                0.00    0.00     600/26215       NTL::add(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [270]
                0.00    0.00    1404/26215       NTL::ProjectPowers(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, long, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [228]
                0.00    0.00    1404/26215       NTL::transpose(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&) [234]
                0.00    0.00    5442/26215       NTL::CompMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [200]
                0.00    0.00    5919/26215       NTL::build(NTL::zz_pXNewArgument&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [201]
                0.00    0.00    8646/26215       NTL::mul_aux(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [183]
[145]    0.2    0.00    0.01   26215         NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.01   25815/25815       void NTL::Vec<NTL::Vec<NTL::zz_p> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_p>::Fixer>(long, NTL::Mat<NTL::zz_p>::Fixer&) [146]
-----------------------------------------------
                0.00    0.01   25815/25815       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
[146]    0.2    0.00    0.01   25815         void NTL::Vec<NTL::Vec<NTL::zz_p> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_p>::Fixer>(long, NTL::Mat<NTL::zz_p>::Fixer&) [146]
                0.00    0.01  168608/168608      NTL::Vec<NTL::zz_p>::FixLength(long) [144]
                0.00    0.00   25815/27615       NTL::Vec<NTL::Vec<NTL::zz_p> >::AllocateTo(long) [366]
-----------------------------------------------
                0.00    0.00       1/308811      NTL::ToFFTRep_trunc(NTL::FFTRep&, NTL::ZZ_pX const&, long, long, long, long) [347]
                0.00    0.00       1/308811      NTL::mul(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [84]
                0.00    0.00       3/308811      MakeIndexVector(IndexSet const&, NTL::Vec<long>&) [197]
                0.00    0.00      50/308811      DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00     100/308811      NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
                0.00    0.00     100/308811      NTL::inv(NTL::GF2E&, NTL::Mat<NTL::GF2E>&, NTL::Mat<NTL::GF2E> const&) [175]
                0.00    0.00     100/308811      NTL::basic_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [290]
                0.00    0.00     100/308811      NTL::relaxed_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [313]
                0.00    0.00     200/308811      NTL::basic_tri(NTL::zz_p&, NTL::Mat<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const*, NTL::Vec<NTL::zz_p>*, bool, bool) [285]
                0.00    0.00     200/308811      NTL::inv(NTL::zz_pE&, NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&) [236]
                0.00    0.00    1000/308811      PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
                0.00    0.00    2600/308811      convert(NTL::Vec<long>&, NTL::zz_pX const&) [299]
                0.00    0.00    3000/308811      EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00    3800/308811      convert(NTL::Vec<long>&, NTL::GF2X const&) [288]
                0.00    0.00    6603/308811      NTL::InitFFTPrimeInfo(NTL::FFTPrimeInfo&, long, long, long) [276]
                0.00    0.00    7946/308811      NTL::mul_strassen(NTL::mat_window_zz_p const&, NTL::const_mat_window_zz_p const&, NTL::const_mat_window_zz_p const&) [83]
                0.00    0.00   14400/308811      void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [245]
                0.00    0.00   17607/308811      NTL::LazyPrecompFFTMultipliers(long, long, NTL::sp_inverse, long const*, NTL::LazyTable<NTL::FFTVectorPair, 26l> const&) [233]
                0.00    0.00  251000/308811      NTL::Vec<long>::FixLength(long) [168]
[147]    0.2    0.01    0.00  308811         NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     100/82300       FHESecKey::genRecryptData() [52]
                0.00    0.00     100/82300       void std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_emplace_back_aux<DoubleCRT const&>(DoubleCRT const&) [337]
                0.00    0.00     200/82300       RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00     200/82300       FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     200/82300       FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     300/82300       DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     300/82300       Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.00     500/82300       DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun) [135]
                0.00    0.00     500/82300       FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00     600/82300       Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00     800/82300       AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
                0.00    0.00     800/82300       addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
                0.00    0.00     900/82300       DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00     900/82300       std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&) [224]
                0.00    0.00    1200/82300       void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&) [286]
                0.00    0.00    2200/82300       DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun) [41]
                0.00    0.00    3000/82300       void std::vector<KeySwitch, std::allocator<KeySwitch> >::_M_emplace_back_aux<KeySwitch const&>(KeySwitch const&) [254]
                0.00    0.00    3200/82300       RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [25]
                0.00    0.00    5600/82300       DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00    6300/82300       DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00    6400/82300       FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00    6700/82300       DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00   41300/82300       cloned_ptr<IndexMapInit<NTL::Vec<long> >, deep_clone<IndexMapInit<NTL::Vec<long> > > >::~cloned_ptr() [174]
[148]    0.2    0.01    0.00   82300         DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                0.01    0.00   31800/31800       deep_clone<IndexMapInit<NTL::Vec<long> > >::apply(IndexMapInit<NTL::Vec<long> > const*) [155]
[149]    0.2    0.01    0.00   31800         DoubleCRTHelper::clone() const [149]
-----------------------------------------------
                0.01    0.00    2400/2400        void NTL::Vec<NTL::Vec<NTL::GF2E> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2E>::Fixer>(long, NTL::Mat<NTL::GF2E>::Fixer&) [152]
[150]    0.2    0.01    0.00    2400         NTL::Vec<NTL::GF2E>::FixLength(long) [150]
                0.00    0.00    2400/5400        NTL::Vec<NTL::GF2E>::AllocateTo(long) [393]
-----------------------------------------------
                0.00    0.00     100/200         buildLinPolyMatrix(NTL::Mat<NTL::GF2E>&, long) [141]
                0.00    0.00     100/200         NTL::inv(NTL::GF2E&, NTL::Mat<NTL::GF2E>&, NTL::Mat<NTL::GF2E> const&) [175]
[151]    0.2    0.00    0.01     200         NTL::Mat<NTL::GF2E>::SetDims(long, long) [151]
                0.00    0.01     200/200         void NTL::Vec<NTL::Vec<NTL::GF2E> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2E>::Fixer>(long, NTL::Mat<NTL::GF2E>::Fixer&) [152]
-----------------------------------------------
                0.00    0.01     200/200         NTL::Mat<NTL::GF2E>::SetDims(long, long) [151]
[152]    0.2    0.00    0.01     200         void NTL::Vec<NTL::Vec<NTL::GF2E> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2E>::Fixer>(long, NTL::Mat<NTL::GF2E>::Fixer&) [152]
                0.01    0.00    2400/2400        NTL::Vec<NTL::GF2E>::FixLength(long) [150]
                0.00    0.00     200/300         NTL::Vec<NTL::Vec<NTL::GF2E> >::AllocateTo(long) [531]
-----------------------------------------------
                                                 <spontaneous>
[153]    0.2    0.01    0.00                 _ntl_ginvmod(_ntl_gbigint_body*, _ntl_gbigint_body*, _ntl_gbigint_body**) [153]
-----------------------------------------------
                                                 <spontaneous>
[154]    0.2    0.01    0.00                 pp_factorize(std::vector<long, std::allocator<long> >&, long) [154]
-----------------------------------------------
                                                 <spontaneous>
[155]    0.2    0.00    0.01                 deep_clone<IndexMapInit<NTL::Vec<long> > >::apply(IndexMapInit<NTL::Vec<long> > const*) [155]
                0.01    0.00   31800/31800       DoubleCRTHelper::clone() const [149]
-----------------------------------------------
                                                 <spontaneous>
[156]    0.2    0.01    0.00                 NTL::scope_guard<void NTL::default_BlockConstructFromObj<Ctxt>(Ctxt*, long, Ctxt const&)::{lambda()#1}>::relax() [156]
-----------------------------------------------
                                                 <spontaneous>
[157]    0.2    0.01    0.00                 NTL::scope_guard<void NTL::default_BlockConstructFromObj<Ctxt>(Ctxt*, long, Ctxt const&)::{lambda()#1}>::~scope_guard() [157]
-----------------------------------------------
                                                 <spontaneous>
[158]    0.2    0.01    0.00                 IndexSet::~IndexSet() [158]
-----------------------------------------------
                                                 <spontaneous>
[159]    0.2    0.01    0.00                 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >::allocate(unsigned long, void const*) [159]
-----------------------------------------------
                                                 <spontaneous>
[160]    0.2    0.01    0.00                 __gnu_cxx::new_allocator<std::pair<long const, NTL::Vec<long> > >::new_allocator() [160]
-----------------------------------------------
                                                 <spontaneous>
[161]    0.2    0.01    0.00                 std::bad_alloc::bad_alloc() [161]
-----------------------------------------------
                                                 <spontaneous>
[162]    0.2    0.01    0.00                 operator new(unsigned long, void*) [162]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::genRecryptData() [52]
[163]    0.2    0.00    0.00     100         FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     100/200         RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [143]
                0.00    0.00     100/2800        DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00     100/100         Ctxt::addConstant(DoubleCRT const&, double) [241]
                0.00    0.00     200/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     100/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00     200/1840800     GetTimerClock() [35]
                0.00    0.00     100/200         std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_assign(unsigned long, CtxtPart const&) [583]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     300/300         Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
[164]    0.2    0.00    0.00     300         Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00     600/6300        DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00     300/3700        DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00     600/1300        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00     300/3600        DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00    3000/1840800     GetTimerClock() [35]
                0.00    0.00     300/3000        DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00     300/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00     300/1900        IndexSet::emptySet() [440]
                0.00    0.00       5/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     200/3800        MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00    1200/3800        EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [194]
                0.00    0.00    2400/3800        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[165]    0.2    0.00    0.00    3800         PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00    7600/36300       auto_timer::stop() [75]
                0.00    0.00    3800/3800        PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    7600/1840800     GetTimerClock() [35]
                0.00    0.00    7600/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00    3800/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     200/4300        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     500/4300        EncryptedArrayDerived<PA_GF2>::encode(NTL::ZZX&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [219]
                0.00    0.00    1200/4300        EncryptedArrayDerived<PA_GF2>::encode(NTL::Vec<long>&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [199]
                0.00    0.00    2400/4300        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[166]    0.2    0.00    0.00    4300         PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
                0.00    0.00    8100/36300       auto_timer::stop() [75]
                0.00    0.00    4300/4300        PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00    8100/1840800     GetTimerClock() [35]
                0.00    0.00    4300/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     300/300         Ctxt::operator*=(Ctxt const&) [47]
[167]    0.2    0.00    0.00     300         Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00    1200/6300        DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00    1200/3000        DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00     300/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00     900/1500        void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&) [286]
                0.00    0.00     600/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     300/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00     300/1900        IndexSet::emptySet() [440]
-----------------------------------------------
                0.00    0.00    2100/251000      DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00    2200/251000      DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00    7200/251000      void NTL::Vec<NTL::Vec<long> >::DoSetLengthAndApply<NTL::Mat<long>::Fixer>(long, NTL::Mat<long>::Fixer&) [273]
                0.00    0.00   11800/251000      DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   15200/251000      DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00   18900/251000      DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   79200/251000      DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00  114400/251000      DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
[168]    0.2    0.00    0.00  251000         NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00  251000/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     100/100         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
[169]    0.1    0.00    0.00     100         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
                0.00    0.00     200/200         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00    2400/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
                0.00    0.00     200/200         BlockMatMul1D_derived<PA_zz_p>::processDiagonal(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&) const [579]
                0.00    0.00     100/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     100/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     100/400         dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     100/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00     100/400         Step1Matrix<PA_zz_p>::getDim() const [510]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long) [524]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long) [525]
-----------------------------------------------
                0.00    0.00     200/200         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
[170]    0.1    0.00    0.00     200         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00    2400/3800        PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00     400/500         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00    9600/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     400/400         Step1Matrix<PA_zz_p>::get(NTL::Mat<NTL::zz_p>&, long, long, long) const [278]
                0.00    0.00     800/800         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [292]
                0.00    0.00     200/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00    2400/2600        EncryptedArrayDerived<PA_zz_p>::encode(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [426]
                0.00    0.00     400/800         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::vector(unsigned long, std::allocator<NTL::zz_pX> const&) [470]
                0.00    0.00     400/400         std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::vector(unsigned long, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > const&) [522]
                0.00    0.00     400/2700        mcMod(long, long) [419]
                0.00    0.00     400/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00     400/400         std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::~vector() [523]
                0.00    0.00     200/400         Step1Matrix<PA_zz_p>::getDim() const [510]
                0.00    0.00     200/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     200/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     200/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     200/4100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::resize(unsigned long) [413]
                0.00    0.00     200/3200        NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
                0.00    0.00     100/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
-----------------------------------------------
                                                 <spontaneous>
[171]    0.1    0.00    0.00                 NTL::Vec<NTL::zz_p>::SetMaxLength(long) [171]
                0.00    0.00  108647/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     100/100         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
[172]    0.1    0.00    0.00     100         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00    1200/1200        EncryptedArrayDerived<PA_GF2>::encode(NTL::Vec<long>&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [199]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     200/1840800     GetTimerClock() [35]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_GF2>::getTag() const [495]
                0.00    0.00     100/500         PAlgebraModDerived<PA_GF2>::restoreContext() const [493]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     100/900         EncryptedArrayDerived<PA_GF2>::getDegree() const [462]
                0.00    0.00     100/100         std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >::_M_default_append(unsigned long) [636]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     100/100         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
[173]    0.1    0.00    0.00     100         FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [173]
                0.00    0.00     100/100         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
                0.00    0.00     100/200         buildPAlgebraMod(PAlgebra const&, long) [260]
                0.00    0.00     100/300         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::getFactorsOverZZ() const [628]
-----------------------------------------------
                                                 <spontaneous>
[174]    0.1    0.00    0.00                 cloned_ptr<IndexMapInit<NTL::Vec<long> >, deep_clone<IndexMapInit<NTL::Vec<long> > > >::~cloned_ptr() [174]
                0.00    0.00   41300/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                                                 <spontaneous>
[175]    0.1    0.00    0.00                 NTL::inv(NTL::GF2E&, NTL::Mat<NTL::GF2E>&, NTL::Mat<NTL::GF2E> const&) [175]
                0.00    0.00     100/200         NTL::Mat<NTL::GF2E>::SetDims(long, long) [151]
                0.00    0.00     100/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     100/100         FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [173]
[176]    0.1    0.00    0.00     100         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
                0.00    0.00     100/400         Cyclotomic(long) [91]
                0.00    0.00     500/800         compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [465]
                0.00    0.00     200/200         std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> > const&) [587]
                0.00    0.00     200/400         std::vector<long, std::allocator<long> >::_M_fill_assign(unsigned long, long const&) [526]
                0.00    0.00     100/500         multOrd(long, long) [491]
                0.00    0.00     100/100         NTL::Vec<bool>::AllocateTo(long) [616]
                0.00    0.00     100/200         std::vector<long, std::allocator<long> >::_M_default_append(unsigned long) [586]
                0.00    0.00     100/100         std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned long) [642]
-----------------------------------------------
                0.00    0.00    1000/34200       Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00    8600/34200       DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00   11200/34200       DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00   13400/34200       DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
[177]    0.1    0.00    0.00   34200         IndexSet::contains(IndexSet const&) const [177]
                0.00    0.00  512400/2075300     IndexSet::next(long) const [85]
                0.00    0.00  512400/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.00     400/400         SHEEP::ContextHElib_F2<bool>::Add(NTL::Vec<Ctxt>, NTL::Vec<Ctxt>) [50]
[178]    0.1    0.00    0.00     400         addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
                0.00    0.00     400/400         AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
                0.00    0.00     400/400         AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [275]
                0.00    0.00     800/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     800/1840800     GetTimerClock() [35]
                0.00    0.00     800/1600        std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*) [450]
                0.00    0.00     400/800         std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::find(std::pair<long, long> const&) const [468]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     400/400         addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
[179]    0.1    0.00    0.00     400         AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
                0.00    0.00     400/400         AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [203]
                0.00    0.00     400/800         Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00     800/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     400/800         std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::find(std::pair<long, long> const&) const [468]
                0.00    0.00     400/400         AddDAG::markAsAvailable(DAGnode*) [506]
-----------------------------------------------
                0.00    0.00     400/800         AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [203]
                0.00    0.00     400/800         AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
[180]    0.1    0.00    0.00     800         Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00     800/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00     400/400         Ctxt::modUpToSet(IndexSet const&) [209]
                0.00    0.00     800/36300       auto_timer::stop() [75]
                0.00    0.00     800/2600        Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00     800/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00     800/1840800     GetTimerClock() [35]
                0.00    0.00     400/1700        Ctxt::Ctxt(FHEPubKey const&, long) [446]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00    3800/3800        PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
[181]    0.1    0.00    0.00    3800         PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    3800/36300       auto_timer::stop() [75]
                0.00    0.00    3800/3800        PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
                0.00    0.00    3800/1840800     GetTimerClock() [35]
                0.00    0.00    2600/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    7600/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00    3800/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
                0.00    0.00    3800/4100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::resize(unsigned long) [413]
                0.00    0.00    3800/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00    3800/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[182]    0.1    0.00    0.00                 NTL::mul_aux(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [182]
                0.00    0.00  103600/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    1400/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    1400/3500        NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
                0.00    0.00    1400/29100       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
-----------------------------------------------
                                                 <spontaneous>
[183]    0.1    0.00    0.00                 NTL::mul_aux(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [183]
                0.00    0.00    8646/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::genRecryptData() [52]
[184]    0.1    0.00    0.00     100         DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00     100/8200        DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00    2200/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00    2200/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00    2200/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    2200/252700      IndexSet::insert(long) [196]
                0.00    0.00    2200/2075300     IndexSet::next(long) const [85]
                0.00    0.00     200/1840800     GetTimerClock() [35]
                0.00    0.00     100/10000       IndexSet::intervalConstructor(long, long) [293]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     100/100         SHEEP::ContextHElib_F2<bool>::decrypt(NTL::Vec<Ctxt>) [187]
[185]    0.1    0.00    0.00     100         decryptBinaryNums(std::vector<long, std::allocator<long> >&, PtrVector<Ctxt> const&, FHESecKey const&, EncryptedArray const&, bool, bool) [185]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const [186]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
-----------------------------------------------
                0.00    0.00     100/100         decryptBinaryNums(std::vector<long, std::allocator<long> >&, PtrVector<Ctxt> const&, FHESecKey const&, EncryptedArray const&, bool, bool) [185]
[186]    0.1    0.00    0.00     100         EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const [186]
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&) const [189]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const [306]
                0.00    0.00     100/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00     100/100         void convert<long, NTL::GF2X>(std::vector<long, std::allocator<long> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [591]
-----------------------------------------------
                                                 <spontaneous>
[187]    0.1    0.00    0.00                 SHEEP::ContextHElib_F2<bool>::decrypt(NTL::Vec<Ctxt>) [187]
                0.00    0.00     100/100         decryptBinaryNums(std::vector<long, std::allocator<long> >&, PtrVector<Ctxt> const&, FHESecKey const&, EncryptedArray const&, bool, bool) [185]
-----------------------------------------------
                0.00    0.00     100/21800       FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     100/21800       FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.00     100/21800       FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     300/21800       DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     300/21800       Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00     300/21800       Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00    1000/21800       FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00    1000/21800       Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00    5600/21800       DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00    6300/21800       DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00    6700/21800       DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
[188]    0.1    0.00    0.00   21800         DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   37800/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00   18900/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00   37800/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   37800/2075300     IndexSet::next(long) const [85]
                0.00    0.00   18900/252700      IndexSet::insert(long) [196]
                0.00    0.00   18900/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const [186]
[189]    0.1    0.00    0.00     100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&) const [189]
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&) const [189]
[190]    0.1    0.00    0.00     100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     100/2600        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00     100/6300        DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00     200/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00     200/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     100/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00     200/1840800     GetTimerClock() [35]
                0.00    0.00    1300/2075300     IndexSet::next(long) const [85]
                0.00    0.00     100/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00     100/13300       IndexSet::remove(IndexSet const&) [218]
                0.00    0.00    1300/1300        DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZX const&, DoubleCRT::MulFun) [456]
                0.00    0.00     100/100         RecryptData::operator==(RecryptData const&) const [621]
                0.00    0.00     100/100         FHEcontext::operator==(FHEcontext const&) const [620]
                0.00    0.00     100/100         DoubleCRT::toPoly(NTL::ZZX&, bool) const [633]
                0.00    0.00     100/100         PolyRed(NTL::ZZX&, NTL::ZZX const&, long, bool) [589]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[191]    0.1    0.00    0.00                 DoubleCRT::sampleHWt(long) [191]
                0.00    0.00     100/5000        DoubleCRT::operator=(NTL::ZZX const&) [28]
                0.00    0.00     100/200         sampleHWt(NTL::ZZX&, long, long) [540]
-----------------------------------------------
                0.00    0.00     100/1300        Ctxt::addConstant(DoubleCRT const&, double) [241]
                0.00    0.00     600/1300        Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00     600/1300        Ctxt::reLinearize(long) [67]
[192]    0.1    0.00    0.00    1300         Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00     700/6700        DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00    1300/36300       auto_timer::stop() [75]
                0.00    0.00    1000/34200       IndexSet::contains(IndexSet const&) const [177]
                0.00    0.00    1000/21800       DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00    1300/1840800     GetTimerClock() [35]
                0.00    0.00    1000/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00     600/1500        void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&) [286]
                0.00    0.00    1000/19600       operator<=(IndexSet const&, IndexSet const&) [370]
                0.00    0.00    1000/1900        IndexSet::emptySet() [440]
                0.00    0.00     600/600         void std::vector<CtxtPart, std::allocator<CtxtPart> >::emplace_back<CtxtPart>(CtxtPart&&) [487]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00    4300/4300        PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
[193]    0.1    0.00    0.00    4300         PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00    4300/36300       auto_timer::stop() [75]
                0.00    0.00    4300/1840800     GetTimerClock() [35]
                0.00    0.00    3800/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
                0.00    0.00    3800/4300        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long) [409]
                0.00    0.00    3800/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00    3800/3800        PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const [414]
                0.00    0.00    3800/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00    1200/1200        EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [195]
[194]    0.1    0.00    0.00    1200         EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [194]
                0.00    0.00    1200/3800        PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00    1200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00    1200/1200        RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[195]    0.1    0.00    0.00    1200         EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [195]
                0.00    0.00    1200/1200        EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [194]
                0.00    0.00    1200/1300        void convert<NTL::zz_pX, NTL::ZZX>(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [455]
                0.00    0.00    1200/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
-----------------------------------------------
                0.00    0.00     800/252700      buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.00    2100/252700      DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00    2200/252700      FHEcontext::AddPrime(long, long, bool) [79]
                0.00    0.00    2200/252700      DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00    5900/252700      IndexSet::insert(IndexSet const&) [309]
                0.00    0.00   11800/252700      DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   15200/252700      DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00   18900/252700      DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   79200/252700      DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00  114400/252700      DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
[196]    0.0    0.00    0.00  252700         IndexSet::insert(long) [196]
                0.00    0.00  238800/1855100     std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
-----------------------------------------------
                0.00    0.00    2600/16000       DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00    5200/16000       DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00    8200/16000       DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
[197]    0.0    0.00    0.00   16000         MakeIndexVector(IndexSet const&, NTL::Vec<long>&) [197]
                0.00    0.00  254100/2075300     IndexSet::next(long) const [85]
                0.00    0.00       3/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     600/1400        Ctxt::reLinearize(long) [67]
                0.00    0.00     800/1400        Ctxt::modUpToSet(IndexSet const&) [209]
[198]    0.0    0.00    0.00    1400         DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   27600/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00   11800/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00   39400/2075300     IndexSet::next(long) const [85]
                0.00    0.00   27600/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    1400/9100        operator&(IndexSet const&, IndexSet const&) [217]
                0.00    0.00   11800/252700      IndexSet::insert(long) [196]
                0.00    0.00   15800/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.00    1200/1200        buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
[199]    0.0    0.00    0.00    1200         EncryptedArrayDerived<PA_GF2>::encode(NTL::Vec<long>&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [199]
                0.00    0.00    1200/4300        PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
                0.00    0.00    1200/3800        convert(NTL::Vec<long>&, NTL::GF2X const&) [288]
-----------------------------------------------
                                                 <spontaneous>
[200]    0.0    0.00    0.00                 NTL::CompMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [200]
                0.00    0.00    5442/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00    5901/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[201]    0.0    0.00    0.00                 NTL::build(NTL::zz_pXNewArgument&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [201]
                0.00    0.00    5919/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00   11838/25538       NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [367]
-----------------------------------------------
                                                 <spontaneous>
[202]    0.0    0.00    0.00                 NTL::VectorCopy(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, long) [202]
                0.00    0.00   37711/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     400/400         AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
[203]    0.0    0.00    0.00     400         AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [203]
                0.00    0.00     400/800         Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00     800/800         PtrVector<Ctxt>::isSet(long) const [467]
                0.00    0.00     400/400         AddDAG::allocateCtxtLike(Ctxt const&) [507]
-----------------------------------------------
                0.00    0.00    1300/3500        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00    2200/3500        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
[204]    0.0    0.00    0.00    3500         DoubleCRT::automorph(long) [204]
                0.00    0.00   34800/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00   34800/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   34800/2075300     IndexSet::next(long) const [85]
                0.00    0.00   34800/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                                                 <spontaneous>
[205]    0.0    0.00    0.00                 NTL::PlainSqr(NTL::zz_pX&, NTL::zz_pX const&) [205]
                0.00    0.00   33200/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     400/6000        PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00    5600/6000        NTL::Vec<NTL::Vec<NTL::zz_pE> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [208]
[206]    0.0    0.00    0.00    6000         NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00   59200/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     800/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00    6000/36800       NTL::Vec<NTL::zz_pE>::AllocateTo(long) [363]
                0.00    0.00     800/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                0.00    0.00     300/3000        DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     300/3000        Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00    1200/3000        Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00    1200/3000        std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&) [224]
[207]    0.0    0.00    0.00    3000         DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00   32400/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00   32400/1545500     IndexSet::contains(long) const [88]
                0.00    0.00   16200/2075300     IndexSet::next(long) const [85]
                0.00    0.00     900/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     900/900         std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [328]
                0.00    0.00   32400/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    3000/7800        IndexSet::operator==(IndexSet const&) const [381]
-----------------------------------------------
                                                 <spontaneous>
[208]    0.0    0.00    0.00                 NTL::Vec<NTL::Vec<NTL::zz_pE> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [208]
                0.00    0.00    5600/6000        NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00     800/4100        NTL::Vec<NTL::Vec<NTL::zz_pE> >::AllocateTo(long) [412]
-----------------------------------------------
                0.00    0.00     400/400         Ctxt::addCtxt(Ctxt const&, bool) [180]
[209]    0.0    0.00    0.00     400         Ctxt::modUpToSet(IndexSet const&) [209]
                0.00    0.00     800/1400        DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00     400/2900        Ctxt::verifyPrimeSet() const [237]
                0.00    0.00     400/800         IndexSet::insert(IndexSet const&) [309]
                0.00    0.00     400/9300        operator/(IndexSet const&, IndexSet const&) [230]
-----------------------------------------------
                                                 <spontaneous>
[210]    0.0    0.00    0.00                 NTL::IterHalfGCD(NTL::zz_pXMatrix&, NTL::zz_pX&, NTL::zz_pX&, long) [210]
                0.00    0.00   43600/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00   10900/25538       NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [367]
-----------------------------------------------
                                                 <spontaneous>
[211]    0.0    0.00    0.00                 NTL::conv(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&) [211]
                0.00    0.00   39556/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     100/500         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [268]
                0.00    0.00     400/500         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[212]    0.0    0.00    0.00     500         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     100/100         buildLinPolyMatrix(NTL::Mat<NTL::zz_pE>&, long) [247]
                0.00    0.00     600/36300       auto_timer::stop() [75]
                0.00    0.00    6000/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/100         NTL::Mat<NTL::zz_pE>* NTL::MakeRaw<NTL::Mat<NTL::zz_pE>, NTL::Mat<NTL::zz_pE>&>(NTL::Mat<NTL::zz_pE>&) [283]
                0.00    0.00     600/1840800     GetTimerClock() [35]
                0.00    0.00    1000/1400        NTL::Vec<NTL::zz_pE>::~Vec() [453]
                0.00    0.00     500/36800       NTL::Vec<NTL::zz_pE>::AllocateTo(long) [363]
                0.00    0.00     500/29600       NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long) [364]
                0.00    0.00     500/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
                0.00    0.00     200/1900        NTL::Vec<NTL::Vec<NTL::zz_pE> >::~Vec() [439]
                0.00    0.00     100/300         std::unique_lock<std::mutex>::lock() [538]
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     100/200         ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
                0.00    0.00     100/200         std::unique_lock<std::mutex>::unlock() [582]
                0.00    0.00       2/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00     300/2600        Ctxt::reLinearize(long) [67]
                0.00    0.00     300/2600        Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00     300/2600        void vecCopy<Ctxt>(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, long) [287]
                0.00    0.00     400/2600        Ctxt::operator=(Ctxt const&) [279]
                0.00    0.00     500/2600        FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00     800/2600        Ctxt::addCtxt(Ctxt const&, bool) [180]
[213]    0.0    0.00    0.00    2600         Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00    2600/2600        std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&) [224]
                0.00    0.00    5200/1840800     GetTimerClock() [35]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[214]    0.0    0.00    0.00                 NTL::sub(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [214]
                0.00    0.00   17600/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     200/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[215]    0.0    0.00    0.00     200         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     100/100         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     100/100         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     200/36300       auto_timer::stop() [75]
                0.00    0.00     200/1840800     GetTimerClock() [35]
                0.00    0.00     400/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     400/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     200/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     200/200         _ZNK14EncryptedArray8dispatchI22MatMul1DExec_constructIRK8MatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [569]
                0.00    0.00     100/100         Step2Matrix<PA_GF2>::getEA() const [624]
                0.00    0.00     100/100         Step2Matrix<PA_zz_p>::getEA() const [625]
                0.00    0.00     100/400         Step2Matrix<PA_GF2>::getDim() const [512]
                0.00    0.00     100/400         Step2Matrix<PA_zz_p>::getDim() const [513]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                0.00    0.00    9100/9100        operator&(IndexSet const&, IndexSet const&) [217]
[216]    0.0    0.00    0.00    9100         IndexSet::retain(IndexSet const&) [216]
                0.00    0.00   85900/2075300     IndexSet::next(long) const [85]
                0.00    0.00   46700/118600      IndexSet::remove(long) [239]
                0.00    0.00   39600/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                0.00    0.00    1100/9100        Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    1100/9100        Ctxt::modDownToLevel(long) [30]
                0.00    0.00    1400/9100        DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00    2600/9100        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00    2900/9100        Ctxt::verifyPrimeSet() const [237]
[217]    0.0    0.00    0.00    9100         operator&(IndexSet const&, IndexSet const&) [217]
                0.00    0.00    9100/9100        IndexSet::retain(IndexSet const&) [216]
-----------------------------------------------
                0.00    0.00     100/13300       FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     300/13300       DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     300/13300       Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    1100/13300       Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    2200/13300       DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.00    9300/13300       operator/(IndexSet const&, IndexSet const&) [230]
[218]    0.0    0.00    0.00   13300         IndexSet::remove(IndexSet const&) [218]
                0.00    0.00   70800/2075300     IndexSet::next(long) const [85]
                0.00    0.00   70800/118600      IndexSet::remove(long) [239]
-----------------------------------------------
                0.00    0.00     500/500         EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [39]
[219]    0.0    0.00    0.00     500         EncryptedArrayDerived<PA_GF2>::encode(NTL::ZZX&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [219]
                0.00    0.00     500/4300        PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
-----------------------------------------------
                                                 <spontaneous>
[220]    0.0    0.00    0.00                 NTL::ident(NTL::Mat<NTL::zz_pE>&, long) [220]
                0.00    0.00   14800/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00     200/3500        NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[221]    0.0    0.00    0.00     100         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00     100/200         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
                0.00    0.00     400/1600        NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&) [225]
                0.00    0.00     500/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00    4800/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/400         PAlgebraModDerived<PA_zz_p>::restoreContext() const [515]
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     100/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
                0.00    0.00     100/300         NTL::Mat<NTL::zz_pX>::SetDims(long, long) [530]
                0.00    0.00     100/100         NTL::Mat<NTL::Mat<NTL::zz_p> >::SetDims(long, long) [608]
                0.00    0.00     100/200         PAlgebraModDerived<PA_zz_p>::getZMStar() const [577]
                0.00    0.00     100/200         PAlgebraModDerived<PA_zz_p>::getR() const [576]
-----------------------------------------------
                               22800             PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
                0.00    0.00    3800/3800        PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
[222]    0.0    0.00    0.00    3800+22800   PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
                0.00    0.00   26600/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00   45600/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00   22800/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                               22800             PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
-----------------------------------------------
                                                 <spontaneous>
[223]    0.0    0.00    0.00                 NTL::build(NTL::zz_pXMultiplier&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [223]
                0.00    0.00   25795/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00    2600/2600        Ctxt::privateAssign(Ctxt const&) [213]
[224]    0.0    0.00    0.00    2600         std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&) [224]
                0.00    0.00    1200/3000        DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00     900/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00     400/1900        CtxtPart* std::__uninitialized_copy<false>::__uninit_copy<CtxtPart*, CtxtPart*>(CtxtPart*, CtxtPart*, CtxtPart*) [442]
-----------------------------------------------
                0.00    0.00     400/1600        Step1Matrix<PA_zz_p>::get(NTL::Mat<NTL::zz_p>&, long, long, long) const [278]
                0.00    0.00     400/1600        Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00     800/1600        NTL::mul(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [249]
[225]    0.0    0.00    0.00    1600         NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&) [225]
                0.00    0.00    1600/1600        NTL::Vec<NTL::Vec<NTL::zz_p> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [226]
-----------------------------------------------
                0.00    0.00    1600/1600        NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&) [225]
[226]    0.0    0.00    0.00    1600         NTL::Vec<NTL::Vec<NTL::zz_p> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [226]
                0.00    0.00   24000/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    1600/27615       NTL::Vec<NTL::Vec<NTL::zz_p> >::AllocateTo(long) [366]
-----------------------------------------------
                                                 <spontaneous>
[227]    0.0    0.00    0.00                 NTL::rem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [227]
                0.00    0.00   23300/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[228]    0.0    0.00    0.00                 NTL::ProjectPowers(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, long, NTL::zz_pXNewArgument const&, NTL::zz_pXModulus const&) [228]
                0.00    0.00    1404/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00    2808/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    1404/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     100/200         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     100/200         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
[229]    0.0    0.00    0.00     200         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
                0.00    0.00     600/900         void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [245]
                0.00    0.00     600/600         void NTL::conv<NTL::zz_p, long>(NTL::Mat<NTL::zz_p>&, NTL::Mat<long> const&) [269]
                0.00    0.00     600/900         void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&) [272]
                0.00    0.00    3600/18600       long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&) [371]
                0.00    0.00    1600/3200        NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
                0.00    0.00     600/600         void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<long> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<long> > const&) [484]
                0.00    0.00     200/500         NTL::Vec<NTL::Vec<long> >::~Vec() [492]
-----------------------------------------------
                0.00    0.00     100/9300        buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.00     100/9300        FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00     100/9300        Ctxt::addConstant(DoubleCRT const&, double) [241]
                0.00    0.00     400/9300        Ctxt::modUpToSet(IndexSet const&) [209]
                0.00    0.00     600/9300        DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     800/9300        Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00    1000/9300        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00    1100/9300        Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    2200/9300        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.00    2900/9300        Ctxt::verifyPrimeSet() const [237]
[230]    0.0    0.00    0.00    9300         operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00    9300/13300       IndexSet::remove(IndexSet const&) [218]
-----------------------------------------------
                                                 <spontaneous>
[231]    0.0    0.00    0.00                 NTL::conv(NTL::Vec<NTL::zz_p>&, NTL::Vec<long> const&) [231]
                0.00    0.00   10801/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[232]    0.0    0.00    0.00                 NTL::PlainDiv(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [232]
                0.00    0.00    9300/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00     300/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[233]    0.0    0.00    0.00                 NTL::LazyPrecompFFTMultipliers(long, long, NTL::sp_inverse, long const*, NTL::LazyTable<NTL::FFTVectorPair, 26l> const&) [233]
                0.00    0.00   17607/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                                                 <spontaneous>
[234]    0.0    0.00    0.00                 NTL::transpose(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&) [234]
                0.00    0.00    1404/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                                                 <spontaneous>
[235]    0.0    0.00    0.00                 NTL::XGCD(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [235]
                0.00    0.00   16500/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    2100/25538       NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [367]
-----------------------------------------------
                                                 <spontaneous>
[236]    0.0    0.00    0.00                 NTL::inv(NTL::zz_pE&, NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&) [236]
                0.00    0.00   16200/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     200/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00    1400/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
                0.00    0.00     200/3500        NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
-----------------------------------------------
                0.00    0.00     400/2900        Ctxt::modUpToSet(IndexSet const&) [209]
                0.00    0.00    1100/2900        Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    1400/2900        Ctxt::findBaseSet(IndexSet&) const [255]
[237]    0.0    0.00    0.00    2900         Ctxt::verifyPrimeSet() const [237]
                0.00    0.00    2900/9100        operator&(IndexSet const&, IndexSet const&) [217]
                0.00    0.00    2900/9300        operator/(IndexSet const&, IndexSet const&) [230]
                0.00    0.00     500/7800        IndexSet::operator==(IndexSet const&) const [381]
-----------------------------------------------
                0.00    0.00     100/100         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
[238]    0.0    0.00    0.00     100         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     200/200         MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     200/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
                0.00    0.00     200/200         MatMul1D_derived<PA_zz_p>::processDiagonal(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&) const [572]
                0.00    0.00     200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     100/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     100/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     100/400         dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long) [524]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long) [525]
                0.00    0.00     100/400         Step2Matrix<PA_zz_p>::getDim() const [513]
-----------------------------------------------
                0.00    0.00    1100/118600      Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00   46700/118600      IndexSet::retain(IndexSet const&) [216]
                0.00    0.00   70800/118600      IndexSet::remove(IndexSet const&) [218]
[239]    0.0    0.00    0.00  118600         IndexSet::remove(long) [239]
                0.00    0.00   53900/2075300     IndexSet::next(long) const [85]
                0.00    0.00    5800/11700       IndexSet::prev(long) const [376]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
[240]    0.0    0.00    0.00     200         MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     200/3800        PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00    1200/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     400/400         Step2Matrix<PA_zz_p>::get(NTL::zz_pX&, long, long, long) const [334]
                0.00    0.00     400/800         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::vector(unsigned long, std::allocator<NTL::zz_pX> const&) [470]
                0.00    0.00     400/2700        mcMod(long, long) [419]
                0.00    0.00     400/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00     200/400         Step2Matrix<PA_zz_p>::getDim() const [513]
                0.00    0.00     200/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     200/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     200/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     200/2600        EncryptedArrayDerived<PA_zz_p>::encode(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [426]
                0.00    0.00     200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
[241]    0.0    0.00    0.00     100         Ctxt::addConstant(DoubleCRT const&, double) [241]
                0.00    0.00     100/7400        FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [81]
                0.00    0.00     100/1300        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00     100/9300        operator/(IndexSet const&, IndexSet const&) [230]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[242]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     100/200         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
                0.00    0.00    1300/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00     100/200         void NTL::conv<NTL::zz_p, NTL::ZZ>(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::ZZ> const&) [300]
                0.00    0.00     200/200         NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&) [322]
                0.00    0.00    1200/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
                0.00    0.00     600/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     300/3200        NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
                0.00    0.00     100/300         std::unique_lock<std::mutex>::lock() [538]
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00     100/200         NTL::Mat<NTL::ZZ>::SetDims(long, long) [545]
                0.00    0.00     100/200         void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<NTL::ZZ> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<NTL::ZZ> > const&) [563]
-----------------------------------------------
                0.00    0.00  243800/243800      std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
[243]    0.0    0.00    0.00  243800         std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*) [243]
                0.00    0.00   45300/45300       std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [244]
-----------------------------------------------
                0.00    0.00   45300/45300       std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*) [243]
[244]    0.0    0.00    0.00   45300         std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [244]
                0.00    0.00   45300/1855100     std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
-----------------------------------------------
                0.00    0.00     100/900         NTL::basic_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [290]
                0.00    0.00     200/900         NTL::basic_tri(NTL::zz_p&, NTL::Mat<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const*, NTL::Vec<NTL::zz_p>*, bool, bool) [285]
                0.00    0.00     600/900         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
[245]    0.0    0.00    0.00     900         void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [245]
                0.00    0.00   14400/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                                                 <spontaneous>
[246]    0.0    0.00    0.00                 NTL::PowerMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::ZZ const&, NTL::zz_pXModulus const&) [246]
                0.00    0.00   13300/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
[247]    0.0    0.00    0.00     100         buildLinPolyMatrix(NTL::Mat<NTL::zz_pE>&, long) [247]
                0.00    0.00   13200/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/3500        NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
-----------------------------------------------
                                                 <spontaneous>
[248]    0.0    0.00    0.00                 NTL::conv(NTL::zz_pX&, NTL::zz_p) [248]
                0.00    0.00    7119/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[249]    0.0    0.00    0.00                 NTL::mul(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [249]
                0.00    0.00     800/1600        NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&) [225]
                0.00    0.00     800/3200        NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
-----------------------------------------------
                0.00    0.00     100/100         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
[250]    0.0    0.00    0.00     100         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     200/200         MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     200/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
                0.00    0.00     200/200         MatMul1D_derived<PA_GF2>::processDiagonal(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&) const [571]
                0.00    0.00     100/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     100/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     100/400         dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     100/500         PAlgebraModDerived<PA_GF2>::restoreContext() const [493]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long) [524]
                0.00    0.00     100/400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long) [525]
                0.00    0.00     100/400         Step2Matrix<PA_GF2>::getDim() const [512]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
[251]    0.0    0.00    0.00     200         MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     200/4300        PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
                0.00    0.00     400/800         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::vector(unsigned long, std::allocator<NTL::GF2X> const&) [469]
                0.00    0.00     400/2700        mcMod(long, long) [419]
                0.00    0.00     400/400         Step2Matrix<PA_GF2>::get(NTL::GF2X&, long, long, long) const [511]
                0.00    0.00     400/900         EncryptedArrayDerived<PA_GF2>::getDegree() const [462]
                0.00    0.00     400/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00     200/400         Step2Matrix<PA_GF2>::getDim() const [512]
                0.00    0.00     200/1600        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     200/1200        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     200/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     200/2600        EncryptedArrayDerived<PA_GF2>::encode(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [425]
-----------------------------------------------
                0.00    0.00     600/1400        Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00     800/1400        AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [275]
[252]    0.0    0.00    0.00    1400         Ctxt::findBaseLevel() const [252]
                0.00    0.00    1400/1400        Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    1400/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    1400/2075300     IndexSet::next(long) const [85]
                0.00    0.00     300/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    2800/6400        card(IndexSet const&) [387]
-----------------------------------------------
                                                 <spontaneous>
[253]    0.0    0.00    0.00                 NTL::build(NTL::zz_pXModulus&, NTL::zz_pX const&) [253]
                0.00    0.00   11162/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     500/500         FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[254]    0.0    0.00    0.00     500         void std::vector<KeySwitch, std::allocator<KeySwitch> >::_M_emplace_back_aux<KeySwitch const&>(KeySwitch const&) [254]
                0.00    0.00    3000/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                0.00    0.00    1400/1400        Ctxt::findBaseLevel() const [252]
[255]    0.0    0.00    0.00    1400         Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    1400/2900        Ctxt::verifyPrimeSet() const [237]
                0.00    0.00    2200/1545500     IndexSet::contains(long) const [88]
                0.00    0.00     300/13300       IndexSet::remove(IndexSet const&) [218]
                0.00    0.00     300/300         FHEcontext::logOfProduct(IndexSet const&) const [327]
                0.00    0.00    1400/2075300     IndexSet::next(long) const [85]
                0.00    0.00    1100/118600      IndexSet::remove(long) [239]
                0.00    0.00    1100/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    1400/3400        IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00    1400/6400        card(IndexSet const&) [387]
                0.00    0.00    1400/2500        Ctxt::modSwitchAddedNoiseVar() const [427]
-----------------------------------------------
                0.00    0.00       1/101         Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const [21]
                0.00    0.00     100/101         EncryptedArrayDerived<PA_zz_p>::EncryptedArrayDerived(FHEcontext const&, NTL::zz_pX const&, PAlgebraMod const&) [258]
[256]    0.0    0.00    0.00     101         PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00     400/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00     400/6000        NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00     400/400         PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const [338]
                0.00    0.00     100/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    1600/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     400/1400        NTL::Vec<NTL::zz_pE>::~Vec() [453]
                0.00    0.00     100/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
                0.00    0.00     100/4100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::resize(unsigned long) [413]
                0.00    0.00     100/18600       long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&) [371]
                0.00    0.00     100/100         std::vector<NTL::Mat<NTL::zz_p>, std::allocator<NTL::Mat<NTL::zz_p> > >::_M_default_append(unsigned long) [635]
                0.00    0.00     100/100         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_default_append(unsigned long) [638]
-----------------------------------------------
                0.00    0.00     100/300         EncryptedArray::EncryptedArray(FHEcontext const&, NTL::ZZX const&) [294]
                0.00    0.00     100/300         FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [173]
                0.00    0.00     100/300         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[257]    0.0    0.00    0.00     300         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::EncryptedArrayDerived(FHEcontext const&, NTL::zz_pX const&, PAlgebraMod const&) [258]
                0.00    0.00     200/200         PAlgebraModDerived<PA_GF2>::getTag() const [574]
                0.00    0.00     200/200         EncryptedArrayDerived<PA_GF2>::EncryptedArrayDerived(FHEcontext const&, NTL::GF2X const&, PAlgebraMod const&) [543]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::getTag() const [631]
                0.00    0.00     100/400         PAlgebraModDerived<PA_zz_p>::restoreContext() const [515]
                0.00    0.00     100/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     100/100         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
[258]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_zz_p>::EncryptedArrayDerived(FHEcontext const&, NTL::zz_pX const&, PAlgebraMod const&) [258]
                0.00    0.00     100/101         PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
-----------------------------------------------
                                                 <spontaneous>
[259]    0.0    0.00    0.00                 NTL::PlainUpdateMap(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::zz_pX const&, NTL::zz_pX const&) [259]
                0.00    0.00    3164/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    3164/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     100/200         FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [173]
                0.00    0.00     100/200         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[260]    0.0    0.00    0.00     200         buildPAlgebraMod(PAlgebra const&, long) [260]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
-----------------------------------------------
                0.00    0.00     100/100         buildPAlgebraMod(PAlgebra const&, long) [260]
[261]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     100/100         void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [266]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::genCrtTable() [326]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
                0.00    0.00     300/300         bool poly_comp<NTL::zz_pX>(NTL::zz_pX const&, NTL::zz_pX const&) [528]
                0.00    0.00     300/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     100/800         compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [465]
                0.00    0.00     100/100         EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, long) [588]
                0.00    0.00     100/25538       NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [367]
                0.00    0.00     100/300         NTL::Vec<NTL::zz_pX>::~Vec() [534]
                0.00    0.00     100/400         NTL::zz_pXModulus::~zz_pXModulus() [498]
                0.00    0.00     100/1900        std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long) [443]
-----------------------------------------------
                                                 <spontaneous>
[262]    0.0    0.00    0.00                 NTL::BerlekampMassey(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&, long) [262]
                0.00    0.00    6458/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     883/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     200/200         FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[263]    0.0    0.00    0.00     200         DoubleCRT::Exp(long) [263]
                0.00    0.00    4400/1538800     std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&) [48]
                0.00    0.00    4400/1545500     IndexSet::contains(long) const [88]
                0.00    0.00    4400/2075300     IndexSet::next(long) const [85]
                0.00    0.00    4400/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
                                                 <spontaneous>
[264]    0.0    0.00    0.00                 NTL::PlainDivRem(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [264]
                0.00    0.00    4200/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     400/400         void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [266]
[265]    0.0    0.00    0.00     400         InvModpr(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [265]
                0.00    0.00    7600/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    6400/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
[266]    0.0    0.00    0.00     100         void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [266]
                0.00    0.00     400/400         InvModpr(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [265]
                0.00    0.00     200/6525        NTL::Vec<NTL::zz_pX>::AllocateTo(long) [385]
                0.00    0.00     200/5362        NTL::Vec<NTL::zz_pX>::Init(long) [395]
                0.00    0.00     100/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00    1600/5300        void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    3700/5300        void std::vector<Cmodulus, std::allocator<Cmodulus> >::_M_emplace_back_aux<Cmodulus>(Cmodulus&&) [280]
[267]    0.0    0.00    0.00    5300         Cmodulus::operator=(Cmodulus const&) [267]
                0.00    0.00   21200/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00   10600/10600       NTL::Vec<unsigned long>::operator=(NTL::Vec<unsigned long> const&) [377]
                0.00    0.00    5300/5300        NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>* NTL::MakeRaw<NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>, NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&>(NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&) [396]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[268]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [268]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     200/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00     100/1300        void convert<NTL::zz_pX, NTL::ZZX>(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [455]
                0.00    0.00     100/100         void convert<NTL::ZZX, NTL::zz_pX>(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [590]
-----------------------------------------------
                0.00    0.00     600/600         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
[269]    0.0    0.00    0.00     600         void NTL::conv<NTL::zz_p, long>(NTL::Mat<NTL::zz_p>&, NTL::Mat<long> const&) [269]
                0.00    0.00     600/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                                                 <spontaneous>
[270]    0.0    0.00    0.00                 NTL::add(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [270]
                0.00    0.00     600/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                0.00    0.00     900/900         void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&) [272]
[271]    0.0    0.00    0.00     900         NTL::Mat<long>::SetDims(long, long) [271]
                0.00    0.00     500/500         void NTL::Vec<NTL::Vec<long> >::DoSetLengthAndApply<NTL::Mat<long>::Fixer>(long, NTL::Mat<long>::Fixer&) [273]
-----------------------------------------------
                0.00    0.00     100/900         NTL::basic_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [290]
                0.00    0.00     200/900         NTL::basic_tri(NTL::zz_p&, NTL::Mat<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const*, NTL::Vec<NTL::zz_p>*, bool, bool) [285]
                0.00    0.00     600/900         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
[272]    0.0    0.00    0.00     900         void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&) [272]
                0.00    0.00     900/900         NTL::Mat<long>::SetDims(long, long) [271]
-----------------------------------------------
                0.00    0.00     500/500         NTL::Mat<long>::SetDims(long, long) [271]
[273]    0.0    0.00    0.00     500         void NTL::Vec<NTL::Vec<long> >::DoSetLengthAndApply<NTL::Mat<long>::Fixer>(long, NTL::Mat<long>::Fixer&) [273]
                0.00    0.00    7200/251000      NTL::Vec<long>::FixLength(long) [168]
                0.00    0.00     500/501         NTL::Vec<NTL::Vec<long> >::AllocateTo(long) [488]
-----------------------------------------------
                0.00    0.00    2200/2200        PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [138]
[274]    0.0    0.00    0.00    2200         PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [274]
                0.00    0.00    6600/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    6600/6600        NTL::zz_pX NTL::conv<NTL::zz_pX, NTL::ZZX>(NTL::ZZX const&) [384]
                0.00    0.00    2200/2200        NTL::Vec<NTL::zz_pXModulus>::AllocateTo(long) [437]
                0.00    0.00    2200/2200        void NTL::default_BlockConstruct<NTL::zz_pXModulus>(NTL::zz_pXModulus*, long) [436]
-----------------------------------------------
                0.00    0.00     400/400         addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
[275]    0.0    0.00    0.00     400         AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [275]
                0.00    0.00     800/1400        Ctxt::findBaseLevel() const [252]
                0.00    0.00     800/1600        std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*) [450]
                0.00    0.00     800/800         std::pair<std::_Rb_tree_iterator<std::pair<std::pair<long, long> const, DAGnode> >, bool> std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_emplace_unique<std::pair<long, long>&, DAGnode>(std::pair<long, long>&, DAGnode&&) [472]
-----------------------------------------------
                                                 <spontaneous>
[276]    0.0    0.00    0.00                 NTL::InitFFTPrimeInfo(NTL::FFTPrimeInfo&, long, long, long) [276]
                0.00    0.00    6603/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     200/2600        MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00    2400/2600        BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
[277]    0.0    0.00    0.00    2600         std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
                0.00    0.00    2600/2600        void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&) [289]
                0.00    0.00    2600/2600        NTL::Vec<long> convert<NTL::Vec<long>, NTL::zz_pX>(NTL::zz_pX const&) [298]
                0.00    0.00    2600/2600        void plaintextAutomorph<NTL::zz_pX, PA_zz_p>(NTL::zz_pX&, NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [422]
                0.00    0.00    2600/5200        std::__shared_ptr<ConstMultiplier_zzX, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<ConstMultiplier_zzX>, NTL::Vec<long> >(std::_Sp_make_shared_tag, std::allocator<ConstMultiplier_zzX> const&, NTL::Vec<long>&&) [401]
                0.00    0.00    2600/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     400/400         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[278]    0.0    0.00    0.00     400         Step1Matrix<PA_zz_p>::get(NTL::Mat<NTL::zz_p>&, long, long, long) const [278]
                0.00    0.00     400/1600        NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&) [225]
-----------------------------------------------
                                                 <spontaneous>
[279]    0.0    0.00    0.00                 Ctxt::operator=(Ctxt const&) [279]
                0.00    0.00     400/2600        Ctxt::privateAssign(Ctxt const&) [213]
-----------------------------------------------
                0.00    0.00     600/600         FHEcontext::AddPrime(long, long, bool) [79]
[280]    0.0    0.00    0.00     600         void std::vector<Cmodulus, std::allocator<Cmodulus> >::_M_emplace_back_aux<Cmodulus>(Cmodulus&&) [280]
                0.00    0.00    3700/5300        Cmodulus::operator=(Cmodulus const&) [267]
-----------------------------------------------
                0.00    0.00    1200/1200        NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&) [282]
[281]    0.0    0.00    0.00    1200         NTL::Vec<NTL::zz_pE>::Init(long, NTL::zz_pE const*) [281]
                0.00    0.00   14400/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00   14400/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                0.00    0.00     100/100         NTL::Mat<NTL::zz_pE>* NTL::MakeRaw<NTL::Mat<NTL::zz_pE>, NTL::Mat<NTL::zz_pE>&>(NTL::Mat<NTL::zz_pE>&) [283]
[282]    0.0    0.00    0.00     100         NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&) [282]
                0.00    0.00    1200/1200        NTL::Vec<NTL::zz_pE>::Init(long, NTL::zz_pE const*) [281]
                0.00    0.00    1200/36800       NTL::Vec<NTL::zz_pE>::AllocateTo(long) [363]
                0.00    0.00     100/4100        NTL::Vec<NTL::Vec<NTL::zz_pE> >::AllocateTo(long) [412]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
[283]    0.0    0.00    0.00     100         NTL::Mat<NTL::zz_pE>* NTL::MakeRaw<NTL::Mat<NTL::zz_pE>, NTL::Mat<NTL::zz_pE>&>(NTL::Mat<NTL::zz_pE>&) [283]
                0.00    0.00     100/100         NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&) [282]
-----------------------------------------------
                                                 <spontaneous>
[284]    0.0    0.00    0.00                 NTL::UpdateMap(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::zz_pXMultiplier const&, NTL::zz_pXModulus const&) [284]
                0.00    0.00    3827/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     554/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[285]    0.0    0.00    0.00                 NTL::basic_tri(NTL::zz_p&, NTL::Mat<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const*, NTL::Vec<NTL::zz_p>*, bool, bool) [285]
                0.00    0.00     200/900         void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [245]
                0.00    0.00     200/900         void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&) [272]
                0.00    0.00     200/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00     200/500         NTL::Vec<NTL::Vec<long> >::~Vec() [492]
-----------------------------------------------
                0.00    0.00     600/1500        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00     900/1500        Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
[286]    0.0    0.00    0.00    1500         void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&) [286]
                0.00    0.00    1200/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
                0.00    0.00    1500/1900        CtxtPart* std::__uninitialized_copy<false>::__uninit_copy<CtxtPart*, CtxtPart*>(CtxtPart*, CtxtPart*, CtxtPart*) [442]
-----------------------------------------------
                0.00    0.00     300/300         multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
[287]    0.0    0.00    0.00     300         void vecCopy<Ctxt>(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, long) [287]
                0.00    0.00     300/2600        Ctxt::privateAssign(Ctxt const&) [213]
-----------------------------------------------
                0.00    0.00    1200/3800        EncryptedArrayDerived<PA_GF2>::encode(NTL::Vec<long>&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [199]
                0.00    0.00    2600/3800        NTL::Vec<long> convert<NTL::Vec<long>, NTL::GF2X>(NTL::GF2X const&) [297]
[288]    0.0    0.00    0.00    3800         convert(NTL::Vec<long>&, NTL::GF2X const&) [288]
                0.00    0.00    3800/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00    2600/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
[289]    0.0    0.00    0.00    2600         void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&) [289]
                0.00    0.00    1200/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00    1400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00    1200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                                                 <spontaneous>
[290]    0.0    0.00    0.00                 NTL::basic_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [290]
                0.00    0.00     100/900         void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [245]
                0.00    0.00     100/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00     100/900         void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&) [272]
                0.00    0.00     100/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00     100/500         NTL::Vec<NTL::Vec<long> >::~Vec() [492]
-----------------------------------------------
                                                 <spontaneous>
[291]    0.0    0.00    0.00                 NTL::SetCoeff(NTL::zz_pX&, long) [291]
                0.00    0.00    1800/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     800/800         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[292]    0.0    0.00    0.00     800         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [292]
                0.00    0.00    9600/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00    9600/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
                0.00    0.00     800/13200       std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&) [375]
-----------------------------------------------
                0.00    0.00     100/10000       DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00    1100/10000       Ctxt::modDownToLevel(long) [30]
                0.00    0.00    3600/10000       DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00    5200/10000       DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
[293]    0.0    0.00    0.00   10000         IndexSet::intervalConstructor(long, long) [293]
                0.00    0.00   10000/1855100     std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
-----------------------------------------------
                                                 <spontaneous>
[294]    0.0    0.00    0.00                 EncryptedArray::EncryptedArray(FHEcontext const&, NTL::ZZX const&) [294]
                0.00    0.00     100/300         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
-----------------------------------------------
                                                 <spontaneous>
[295]    0.0    0.00    0.00                 NTL::Comp2Mod(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [295]
                0.00    0.00    2772/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     200/2600        MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00    2400/2600        BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
[296]    0.0    0.00    0.00    2600         std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
                0.00    0.00    2600/2600        NTL::Vec<long> convert<NTL::Vec<long>, NTL::GF2X>(NTL::GF2X const&) [297]
                0.00    0.00    2600/2600        void plaintextAutomorph<NTL::GF2X, NTL::GF2XModulus>(NTL::GF2X&, NTL::GF2X const&, long, long, NTL::GF2XModulus const&) [421]
                0.00    0.00    2600/2600        void plaintextAutomorph<NTL::GF2X, PA_GF2>(NTL::GF2X&, NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [420]
                0.00    0.00    2600/5200        std::__shared_ptr<ConstMultiplier_zzX, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<ConstMultiplier_zzX>, NTL::Vec<long> >(std::_Sp_make_shared_tag, std::allocator<ConstMultiplier_zzX> const&, NTL::Vec<long>&&) [401]
-----------------------------------------------
                0.00    0.00    2600/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
[297]    0.0    0.00    0.00    2600         NTL::Vec<long> convert<NTL::Vec<long>, NTL::GF2X>(NTL::GF2X const&) [297]
                0.00    0.00    2600/3800        convert(NTL::Vec<long>&, NTL::GF2X const&) [288]
-----------------------------------------------
                0.00    0.00    2600/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
[298]    0.0    0.00    0.00    2600         NTL::Vec<long> convert<NTL::Vec<long>, NTL::zz_pX>(NTL::zz_pX const&) [298]
                0.00    0.00    2600/2600        convert(NTL::Vec<long>&, NTL::zz_pX const&) [299]
-----------------------------------------------
                0.00    0.00    2600/2600        NTL::Vec<long> convert<NTL::Vec<long>, NTL::zz_pX>(NTL::zz_pX const&) [298]
[299]    0.0    0.00    0.00    2600         convert(NTL::Vec<long>&, NTL::zz_pX const&) [299]
                0.00    0.00    2600/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     100/200         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     100/200         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
[300]    0.0    0.00    0.00     200         void NTL::conv<NTL::zz_p, NTL::ZZ>(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::ZZ> const&) [300]
                0.00    0.00     200/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                                                 <spontaneous>
[301]    0.0    0.00    0.00                 NTL::mul(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::zz_p) [301]
                0.00    0.00     200/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                                                 <spontaneous>
[302]    0.0    0.00    0.00                 NTL::sub(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [302]
                0.00    0.00     200/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                                                 <spontaneous>
[303]    0.0    0.00    0.00                 NTL::ident(NTL::Mat<NTL::zz_p>&, long) [303]
                0.00    0.00     200/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
-----------------------------------------------
                                                 <spontaneous>
[304]    0.0    0.00    0.00                 NTL::TraceMap(NTL::zz_pX&, NTL::zz_pX const&, long, NTL::zz_pXModulus const&, NTL::zz_pX const&) [304]
                0.00    0.00    1386/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     462/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     300/1853800     IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00     300/1853800     Ctxt::findBaseLevel() const [252]
                0.00    0.00    1100/1853800     Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    2200/1853800     FHEcontext::AddPrime(long, long, bool) [79]
                0.00    0.00    2900/1853800     Ctxt::modDownToLevel(long) [30]
                0.00    0.00    4400/1853800     DoubleCRT::Exp(long) [263]
                0.00    0.00   15800/1853800     DoubleCRT::addPrimesAndScale(IndexSet const&) [198]
                0.00    0.00   18900/1853800     DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [188]
                0.00    0.00   22100/1853800     DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00   32400/1853800     DoubleCRT::operator=(DoubleCRT const&) [207]
                0.00    0.00   34800/1853800     DoubleCRT::automorph(long) [204]
                0.00    0.00   39600/1853800     IndexSet::retain(IndexSet const&) [216]
                0.00    0.00   79200/1853800     DoubleCRT::DoubleCRT(FHEcontext const&) [142]
                0.00    0.00   80000/1853800     DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00  114400/1853800     DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00  117600/1853800     DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00  159200/1853800     DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00  194000/1853800     DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [51]
                0.00    0.00  196600/1853800     DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00  225600/1853800     DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
                0.00    0.00  512400/1853800     IndexSet::contains(IndexSet const&) const [177]
[305]    0.0    0.00    0.00 1853800         void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
                0.00    0.00    1600/5300        Cmodulus::operator=(Cmodulus const&) [267]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const [186]
[306]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const [306]
                0.00    0.00     100/36300       auto_timer::stop() [75]
                0.00    0.00     100/1840800     GetTimerClock() [35]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const [627]
                0.00    0.00       1/55          registerTimer(FHEtimer*) [643]
-----------------------------------------------
                                                 <spontaneous>
[307]    0.0    0.00    0.00                 NTL::InvMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [307]
                0.00    0.00    1800/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[308]    0.0    0.00    0.00                 NTL::PlainGCD(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [308]
                0.00    0.00    1800/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     100/800         buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.00     300/800         operator|(IndexSet const&, IndexSet const&) [325]
                0.00    0.00     400/800         Ctxt::modUpToSet(IndexSet const&) [209]
[309]    0.0    0.00    0.00     800         IndexSet::insert(IndexSet const&) [309]
                0.00    0.00    5900/252700      IndexSet::insert(long) [196]
                0.00    0.00    5900/11700       IndexSet::prev(long) const [376]
-----------------------------------------------
                0.00    0.00     300/300         Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
[310]    0.0    0.00    0.00     300         keySwitchNoise(CtxtPart const&, FHEPubKey const&, long) [310]
                0.00    0.00    5300/2075300     IndexSet::next(long) const [85]
-----------------------------------------------
                                                 <spontaneous>
[311]    0.0    0.00    0.00                 NTL::negate(NTL::zz_pX&, NTL::zz_pX const&) [311]
                0.00    0.00     800/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[312]    0.0    0.00    0.00                 NTL::SetCoeff(NTL::zz_pEX&, long) [312]
                0.00    0.00     800/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00     400/29100       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
-----------------------------------------------
                                                 <spontaneous>
[313]    0.0    0.00    0.00                 NTL::relaxed_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [313]
                0.00    0.00     100/26215       NTL::Mat<NTL::zz_p>::SetDims(long, long) [145]
                0.00    0.00     100/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                                                 <spontaneous>
[314]    0.0    0.00    0.00                 NTL::GCD(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [314]
                0.00    0.00    1200/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     600/25538       NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [367]
-----------------------------------------------
                0.00    0.00     100/100         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
[315]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     100/200         void NTL::conv<NTL::zz_p, NTL::ZZ>(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::ZZ> const&) [300]
                0.00    0.00    1200/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
                0.00    0.00     200/200         NTL::Mat<NTL::GF2>::Mat(NTL::Mat<NTL::GF2> const&) [546]
                0.00    0.00     200/600         NTL::Vec<NTL::Vec<NTL::GF2> >::~Vec() [483]
                0.00    0.00     100/300         std::unique_lock<std::mutex>::lock() [538]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     100/1700        NTL::Mat<NTL::GF2>::SetDims(long, long) [444]
                0.00    0.00     100/200         NTL::Mat<NTL::ZZ>::SetDims(long, long) [545]
                0.00    0.00     100/200         void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<NTL::ZZ> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<NTL::ZZ> > const&) [563]
                0.00    0.00     100/3200        NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
-----------------------------------------------
                                                 <spontaneous>
[316]    0.0    0.00    0.00                 NTL::PowerXMod(NTL::zz_pX&, NTL::ZZ const&, NTL::zz_pXModulus const&) [316]
                0.00    0.00    1100/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[317]    0.0    0.00    0.00                 NTL::random(NTL::zz_pX&, long) [317]
                0.00    0.00     562/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[318]    0.0    0.00    0.00                 NTL::MinPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [318]
                0.00    0.00     294/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00     462/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                                                 <spontaneous>
[319]    0.0    0.00    0.00                 NTL::mul_aux(NTL::Vec<NTL::zz_pE>&, NTL::Vec<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [319]
                0.00    0.00     500/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00     500/29100       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
-----------------------------------------------
                                                 <spontaneous>
[320]    0.0    0.00    0.00                 NTL::Vec<NTL::zz_pX>::append(NTL::zz_pX const&) [320]
                0.00    0.00     762/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     400/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00    1162/6525        NTL::Vec<NTL::zz_pX>::AllocateTo(long) [385]
                0.00    0.00     400/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                                                 <spontaneous>
[321]    0.0    0.00    0.00                 NTL::ProbMinPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [321]
                0.00    0.00     462/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                0.00    0.00     200/200         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
[322]    0.0    0.00    0.00     200         NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&) [322]
                0.00    0.00     200/200         NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long, NTL::Vec<NTL::zz_p> const*) [323]
                0.00    0.00    2400/2400        NTL::Vec<NTL::zz_p>::FixAtCurrentLength() [429]
                0.00    0.00     200/27615       NTL::Vec<NTL::Vec<NTL::zz_p> >::AllocateTo(long) [366]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&) [322]
[323]    0.0    0.00    0.00     200         NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long, NTL::Vec<NTL::zz_p> const*) [323]
                0.00    0.00    2400/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00    2400/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                0.00    0.00    2200/2200        Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
[324]    0.0    0.00    0.00    2200         zz_pXModulus1::zz_pXModulus1(long, NTL::zz_pX const&) [324]
                0.00    0.00    2200/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00    2200/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                0.00    0.00     300/300         DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
[325]    0.0    0.00    0.00     300         operator|(IndexSet const&, IndexSet const&) [325]
                0.00    0.00     300/800         IndexSet::insert(IndexSet const&) [309]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
[326]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_zz_p>::genCrtTable() [326]
                0.00    0.00     400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
                0.00    0.00     100/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
-----------------------------------------------
                0.00    0.00     300/300         Ctxt::findBaseSet(IndexSet&) const [255]
[327]    0.0    0.00    0.00     300         FHEcontext::logOfProduct(IndexSet const&) const [327]
                0.00    0.00    2100/2075300     IndexSet::next(long) const [85]
-----------------------------------------------
                0.00    0.00     900/900         DoubleCRT::operator=(DoubleCRT const&) [207]
[328]    0.0    0.00    0.00     900         std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [328]
                0.00    0.00    1800/1855100     std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [86]
                0.00    0.00     900/900         void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2} const&) [463]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
[329]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
                0.00    0.00     200/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
                0.00    0.00     200/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     200/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
                0.00    0.00     100/100         std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::_M_default_append(unsigned long) [640]
                0.00    0.00     100/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                                                 <spontaneous>
[330]    0.0    0.00    0.00                 NTL::IrredPolyMod(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [330]
                0.00    0.00     300/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[331]    0.0    0.00    0.00                 NTL::RecFindFactors(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::Vec<NTL::zz_p> const&, long, long) [331]
                0.00    0.00     300/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[332]    0.0    0.00    0.00                 NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
                0.00    0.00     400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     100/308811      NTL::Vec<long>::DoSetLength(long) [147]
                0.00    0.00     400/400         NTL::Vec<NTL::Vec<NTL::ZZ> >::swap(NTL::Vec<NTL::Vec<NTL::ZZ> >&) [500]
                0.00    0.00     200/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
                0.00    0.00     200/200         NTL::Vec<NTL::ZZX>::~Vec() [558]
                0.00    0.00     100/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                                                 <spontaneous>
[333]    0.0    0.00    0.00                 NTL::PowerXPlusAMod(NTL::zz_pX&, NTL::zz_p, NTL::ZZ const&, NTL::zz_pXModulus const&) [333]
                0.00    0.00     456/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     400/400         MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
[334]    0.0    0.00    0.00     400         Step2Matrix<PA_zz_p>::get(NTL::zz_pX&, long, long, long) const [334]
                0.00    0.00     400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[335]    0.0    0.00    0.00     100         void NTL::conv<NTL::Vec<NTL::zz_pX>, NTL::Vec<NTL::zz_pE> >(NTL::Vec<NTL::Vec<NTL::zz_pX> >&, NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [335]
                0.00    0.00     400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     200/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
-----------------------------------------------
                                                 <spontaneous>
[336]    0.0    0.00    0.00                 NTL::SetCoeff(NTL::zz_pEX&, long, NTL::zz_pE const&) [336]
                0.00    0.00     400/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
-----------------------------------------------
                0.00    0.00     200/200         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
[337]    0.0    0.00    0.00     200         void std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_emplace_back_aux<DoubleCRT const&>(DoubleCRT const&) [337]
                0.00    0.00     100/82300       DoubleCRTHelper::~DoubleCRTHelper() [148]
-----------------------------------------------
                0.00    0.00     400/400         PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
[338]    0.0    0.00    0.00     400         PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const [338]
                0.00    0.00     300/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     900/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     300/400         NTL::zz_pXModulus::~zz_pXModulus() [498]
                0.00    0.00     100/18600       long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&) [371]
-----------------------------------------------
                                                 <spontaneous>
[339]    0.0    0.00    0.00                 NTL::BuildFromRoots(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&) [339]
                0.00    0.00     300/895079      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
                0.00    0.00     300/15500       NTL::Vec<NTL::zz_p>::SetLength(long) [372]
-----------------------------------------------
                0.00    0.00     700/700         PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
[340]    0.0    0.00    0.00     700         std::shared_ptr<TNode<NTL::zz_pX> > buildTNode<NTL::zz_pX>(std::shared_ptr<TNode<NTL::zz_pX> >, std::shared_ptr<TNode<NTL::zz_pX> >, NTL::zz_pX const&) [340]
                0.00    0.00     700/700         NTL::Vec<NTL::zz_p>::Vec(NTL::Vec<NTL::zz_p> const&) [341]
                0.00    0.00     600/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
-----------------------------------------------
                0.00    0.00     700/700         std::shared_ptr<TNode<NTL::zz_pX> > buildTNode<NTL::zz_pX>(std::shared_ptr<TNode<NTL::zz_pX> >, std::shared_ptr<TNode<NTL::zz_pX> >, NTL::zz_pX const&) [340]
[341]    0.0    0.00    0.00     700         NTL::Vec<NTL::zz_p>::Vec(NTL::Vec<NTL::zz_p> const&) [341]
                0.00    0.00     700/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00     700/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                                 600             PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::genCrtTable() [326]
[342]    0.0    0.00    0.00     100+600     PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
                0.00    0.00     700/700         std::shared_ptr<TNode<NTL::zz_pX> > buildTNode<NTL::zz_pX>(std::shared_ptr<TNode<NTL::zz_pX> >, std::shared_ptr<TNode<NTL::zz_pX> >, NTL::zz_pX const&) [340]
                0.00    0.00    1200/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00     300/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                                 600             PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
-----------------------------------------------
                                                 <spontaneous>
[343]    0.0    0.00    0.00                 NTL::mul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_p) [343]
                0.00    0.00     100/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[344]    0.0    0.00    0.00                 NTL::SetX(NTL::zz_pX&) [344]
                0.00    0.00     100/785957      NTL::Vec<NTL::zz_p>::DoSetLength(long) [54]
-----------------------------------------------
                                                 <spontaneous>
[345]    0.0    0.00    0.00                 NTL::FindRoots(NTL::Vec<NTL::zz_p>&, NTL::zz_pX const&) [345]
                0.00    0.00     462/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00     462/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                                                 <spontaneous>
[346]    0.0    0.00    0.00                 NTL::EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [346]
                0.00    0.00     200/1726896     NTL::Vec<NTL::zz_p>::AllocateTo(long) [87]
                0.00    0.00     200/522833      NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
                0.00    0.00     100/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
-----------------------------------------------
                                                 <spontaneous>
[347]    0.0    0.00    0.00                 NTL::ToFFTRep_trunc(NTL::FFTRep&, NTL::ZZ_pX const&, long, long, long, long) [347]
                0.00    0.00       1/308811      NTL::Vec<long>::DoSetLength(long) [147]
-----------------------------------------------
                0.00    0.00     300/3400        DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00     300/3400        Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.00     300/3400        Ctxt::reLinearize(long) [67]
                0.00    0.00    1100/3400        Ctxt::modDownToLevel(long) [30]
                0.00    0.00    1400/3400        Ctxt::findBaseSet(IndexSet&) const [255]
[348]    0.0    0.00    0.00    3400         IndexSet::disjointFrom(IndexSet const&) const [348]
                0.00    0.00     300/1853800     void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&) [305]
-----------------------------------------------
[349]    0.0    0.00    0.00   67800+2400    <cycle 1 as a whole> [349]
                0.00    0.00   68800             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00     700             std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
                0.00    0.00     700             std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [476]
-----------------------------------------------
                0.00    0.00     200/522833      NTL::EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [346]
                0.00    0.00     400/522833      NTL::Vec<NTL::zz_pX>::append(NTL::zz_pX const&) [320]
                0.00    0.00     462/522833      NTL::FindRoots(NTL::Vec<NTL::zz_p>&, NTL::zz_pX const&) [345]
                0.00    0.00     700/522833      NTL::Vec<NTL::zz_p>::Vec(NTL::Vec<NTL::zz_p> const&) [341]
                0.00    0.00     800/522833      NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00    2200/522833      zz_pXModulus1::zz_pXModulus1(long, NTL::zz_pX const&) [324]
                0.00    0.00    2400/522833      NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long, NTL::Vec<NTL::zz_p> const*) [323]
                0.00    0.00    9600/522833      std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [292]
                0.00    0.00   14400/522833      NTL::Vec<NTL::zz_pE>::Init(long, NTL::zz_pE const*) [281]
                0.00    0.00  491671/522833      NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [68]
[357]    0.0    0.00    0.00  522833         NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [357]
-----------------------------------------------
                0.00    0.00  249600/249600      BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [10]
[358]    0.0    0.00    0.00  249600         Cmodulus::getScratch_fftRep(long) [358]
-----------------------------------------------
                0.00    0.00     200/107600      sampleHWt(NTL::ZZX&, long, long) [540]
                0.00    0.00     300/107600      NTL::ZZX::operator=(long) [2189]
                0.00    0.00     500/107600      NTL::SetCoeff(NTL::ZZX&, long) [3023]
                0.00    0.00     800/107600      NTL::PlainPseudoDivRem(NTL::ZZX&, NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [1796]
                0.00    0.00    1200/107600      Cyclotomic(long) [91]
                0.00    0.00    1200/107600      EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00    1200/107600      EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00    1400/107600      NTL::conv(NTL::ZZX&, long) [2468]
                0.00    0.00    2400/107600      NTL::Vec<NTL::ZZ>::FixLength(long) [428]
                0.00    0.00    2800/107600      NTL::negate(NTL::ZZX&, NTL::ZZX const&) [2810]
                0.00    0.00    3000/107600      NTL::conv(NTL::ZZX&, NTL::ZZ_pX const&) [2466]
                0.00    0.00    4300/107600      NTL::divide(NTL::ZZX&, NTL::ZZX const&, NTL::ZZ const&) [2784]
                0.00    0.00    5100/107600      NTL::Vec<NTL::ZZ>::SetMaxLength(long) [400]
                0.00    0.00    5600/107600      NTL::mul(NTL::ZZX&, NTL::ZZX const&, NTL::ZZ const&) [2331]
                0.00    0.00   14200/107600      NTL::add(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [106]
                0.00    0.00   14800/107600      NTL::divide(NTL::ZZX&, NTL::ZZX const&, long) [2786]
                0.00    0.00   15500/107600      NTL::PlainMul(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [111]
                0.00    0.00   33100/107600      NTL::conv(NTL::ZZX&, NTL::zz_pX const&) [2467]
[359]    0.0    0.00    0.00  107600         NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
-----------------------------------------------
                0.00    0.00     100/82500       buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
                0.00    0.00     100/82500       EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
                0.00    0.00     100/82500       void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [266]
                0.00    0.00     100/82500       PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
                0.00    0.00     100/82500       PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
                0.00    0.00     100/82500       NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
                0.00    0.00     200/82500       ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
                0.00    0.00     200/82500       EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, long) [588]
                0.00    0.00     200/82500       MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     200/82500       MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     300/82500       NTL::MakeSmartAux<NTL::zz_pEInfoT>::~MakeSmartAux() [529]
                0.00    0.00     300/82500       PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
                0.00    0.00     300/82500       PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     600/82500       EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     700/82500       std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
                0.00    0.00     900/82500       PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const [338]
                0.00    0.00    1200/82500       EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [194]
                0.00    0.00    1200/82500       void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&) [289]
                0.00    0.00    1600/82500       PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00    2600/82500       std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
                0.00    0.00    4200/82500       convert(NTL::Vec<NTL::zz_pE>&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [410]
                0.00    0.00    6400/82500       InvModpr(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [265]
                0.00    0.00    7600/82500       PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    7600/82500       PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00   45600/82500       PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
[360]    0.0    0.00    0.00   82500         NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                                 600             std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
                                 600             std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [476]
                0.00    0.00     400/67800       EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     600/67800       std::shared_ptr<TNode<NTL::GF2X> > buildTNode<NTL::GF2X>(std::shared_ptr<TNode<NTL::GF2X> >, std::shared_ptr<TNode<NTL::GF2X> >, NTL::GF2X const&) [473]
                0.00    0.00     600/67800       std::shared_ptr<TNode<NTL::zz_pX> > buildTNode<NTL::zz_pX>(std::shared_ptr<TNode<NTL::zz_pX> >, std::shared_ptr<TNode<NTL::zz_pX> >, NTL::zz_pX const&) [340]
                0.00    0.00    1200/67800       PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const [629]
                0.00    0.00    1200/67800       PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const [342]
                0.00    0.00    3800/67800       PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00    3800/67800       PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00   10400/67800       ConstMultiplierCache::upgrade(FHEcontext const&) [13]
                0.00    0.00   22800/67800       PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const [414]
                0.00    0.00   22800/67800       PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const [222]
[361]    0.0    0.00    0.00   68800         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00    5200/5200        ConstMultiplier_zzX::~ConstMultiplier_zzX() [397]
                0.00    0.00    5200/5200        std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [403]
                                 600             std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [476]
                                 600             std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
-----------------------------------------------
                0.00    0.00       1/37509       DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00     300/37509       NTL::ZZ_p::DoInstall() [2441]
                0.00    0.00    2400/37509       NTL::zz_pInfoT::zz_pInfoT(long, long) [3208]
                0.00    0.00    4400/37509       BluesteinInit(long, NTL::zz_p const&, NTL::zz_pX&, NTL::Vec<unsigned long>&, NTL::fftRep&) [82]
                0.00    0.00   10600/37509       NTL::Vec<unsigned long>::operator=(NTL::Vec<unsigned long> const&) [377]
                0.00    0.00   19808/37509       NTL::Vec<unsigned long>::DoSetLength(long) [2179]
[362]    0.0    0.00    0.00   37509         NTL::Vec<unsigned long>::AllocateTo(long) [362]
-----------------------------------------------
                0.00    0.00     500/36800       EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00    1200/36800       NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&) [282]
                0.00    0.00    6000/36800       NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [206]
                0.00    0.00   29100/36800       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
[363]    0.0    0.00    0.00   36800         NTL::Vec<NTL::zz_pE>::AllocateTo(long) [363]
-----------------------------------------------
                0.00    0.00     500/29600       EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00   29100/29600       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
[364]    0.0    0.00    0.00   29600         NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long) [364]
-----------------------------------------------
                0.00    0.00     200/29100       void NTL::conv<NTL::Vec<NTL::zz_pE>, NTL::Vec<NTL::zz_pX> >(NTL::Vec<NTL::Vec<NTL::zz_pE> >&, NTL::Vec<NTL::Vec<NTL::zz_pX> > const&) [618]
                0.00    0.00     400/29100       NTL::SetCoeff(NTL::zz_pEX&, long) [312]
                0.00    0.00     500/29100       NTL::mul_aux(NTL::Vec<NTL::zz_pE>&, NTL::Vec<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [319]
                0.00    0.00    1400/29100       NTL::mul_aux(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [182]
                0.00    0.00    4200/29100       convert(NTL::Vec<NTL::zz_pE>&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [410]
                0.00    0.00   22400/29100       NTL::Vec<NTL::zz_pE>::FixLength(long) [368]
[365]    0.0    0.00    0.00   29100         NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
                0.00    0.00   29100/36800       NTL::Vec<NTL::zz_pE>::AllocateTo(long) [363]
                0.00    0.00   29100/29600       NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long) [364]
-----------------------------------------------
                0.00    0.00     200/27615       NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&) [322]
                0.00    0.00    1600/27615       NTL::Vec<NTL::Vec<NTL::zz_p> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [226]
                0.00    0.00   25815/27615       void NTL::Vec<NTL::Vec<NTL::zz_p> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_p>::Fixer>(long, NTL::Mat<NTL::zz_p>::Fixer&) [146]
[366]    0.0    0.00    0.00   27615         NTL::Vec<NTL::Vec<NTL::zz_p> >::AllocateTo(long) [366]
-----------------------------------------------
                0.00    0.00     100/25538       PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     600/25538       NTL::GCD(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [314]
                0.00    0.00    2100/25538       NTL::XGCD(NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [235]
                0.00    0.00   10900/25538       NTL::IterHalfGCD(NTL::zz_pXMatrix&, NTL::zz_pX&, NTL::zz_pX&, long) [210]
                0.00    0.00   11838/25538       NTL::build(NTL::zz_pXNewArgument&, NTL::zz_pX const&, NTL::zz_pXModulus const&, long) [201]
[367]    0.0    0.00    0.00   25538         NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [367]
-----------------------------------------------
                0.00    0.00   22400/22400       void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&) [418]
[368]    0.0    0.00    0.00   22400         NTL::Vec<NTL::zz_pE>::FixLength(long) [368]
                0.00    0.00   22400/29100       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
-----------------------------------------------
                0.00    0.00   22100/22100       Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
[369]    0.0    0.00    0.00   22100         rem(NTL::zz_pX&, NTL::zz_pX const&, zz_pXModulus1 const&) [369]
-----------------------------------------------
                0.00    0.00    1000/19600       Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00    5600/19600       DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00    6300/19600       DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00    6700/19600       DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
[370]    0.0    0.00    0.00   19600         operator<=(IndexSet const&, IndexSet const&) [370]
-----------------------------------------------
                0.00    0.00     100/18600       PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const [338]
                0.00    0.00     100/18600       PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00    3600/18600       ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
                0.00    0.00   14800/18600       long NTL::operator==<NTL::zz_pE>(NTL::Vec<NTL::zz_pE> const&, NTL::Vec<NTL::zz_pE> const&) [454]
[371]    0.0    0.00    0.00   18600         long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&) [371]
-----------------------------------------------
                0.00    0.00     300/15500       NTL::BuildFromRoots(NTL::zz_pX&, NTL::Vec<NTL::zz_p> const&) [339]
                0.00    0.00   15200/15500       NTL::mul(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [84]
[372]    0.0    0.00    0.00   15500         NTL::Vec<NTL::zz_p>::SetLength(long) [372]
-----------------------------------------------
                0.00    0.00    2300/14600       DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00    5600/14600       DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [66]
                0.00    0.00    6700/14600       DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [136]
[373]    0.0    0.00    0.00   14600         operator>=(IndexSet const&, IndexSet const&) [373]
-----------------------------------------------
                0.00    0.00     600/13800       phi_N(long) [480]
                0.00    0.00    2200/13800       mobius(long) [434]
                0.00    0.00    2200/13800       void factorT<long>(std::vector<long, std::allocator<long> >&, long const&) [435]
                0.00    0.00    8800/13800       void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long) [432]
[374]    0.0    0.00    0.00   13800         NTL::Vec<char>::~Vec() [374]
-----------------------------------------------
                0.00    0.00     800/13200       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [292]
                0.00    0.00     900/13200       std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::operator=(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [464]
                0.00    0.00    5400/13200       std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
                0.00    0.00    6100/13200       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
[375]    0.0    0.00    0.00   13200         std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&) [375]
-----------------------------------------------
                0.00    0.00    5800/11700       IndexSet::remove(long) [239]
                0.00    0.00    5900/11700       IndexSet::insert(IndexSet const&) [309]
[376]    0.0    0.00    0.00   11700         IndexSet::prev(long) const [376]
-----------------------------------------------
                0.00    0.00   10600/10600       Cmodulus::operator=(Cmodulus const&) [267]
[377]    0.0    0.00    0.00   10600         NTL::Vec<unsigned long>::operator=(NTL::Vec<unsigned long> const&) [377]
                0.00    0.00   10600/37509       NTL::Vec<unsigned long>::AllocateTo(long) [362]
-----------------------------------------------
                0.00    0.00     100/10100       EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
                0.00    0.00     100/10100       PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
                0.00    0.00     100/10100       BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
                0.00    0.00     200/10100       EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [268]
                0.00    0.00     400/10100       MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     400/10100       BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00    1200/10100       EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [195]
                0.00    0.00    3800/10100       PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00    3800/10100       PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
[378]    0.0    0.00    0.00   10100         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
-----------------------------------------------
                0.00    0.00     100/9900        EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const [186]
                0.00    0.00     100/9900        PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const [627]
                0.00    0.00     100/9900        BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     200/9900        EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived() [544]
                0.00    0.00     400/9900        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     400/9900        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     500/9900        EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [39]
                0.00    0.00    3800/9900        PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00    4300/9900        PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
[379]    0.0    0.00    0.00    9900         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
-----------------------------------------------
                0.00    0.00     800/9400        NTL::PlainPseudoDivRem(NTL::ZZX&, NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [1796]
                0.00    0.00    8600/9400        NTL::mul(NTL::ZZX&, NTL::ZZX const&, NTL::ZZ const&) [2331]
[380]    0.0    0.00    0.00    9400         NTL::Vec<NTL::ZZ>::SetLength(long) [380]
-----------------------------------------------
                0.00    0.00     300/7800        Ctxt::modDownToLevel(long) [30]
                0.00    0.00     300/7800        Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00     400/7800        FHEcontext::operator==(FHEcontext const&) const [620]
                0.00    0.00     500/7800        Ctxt::verifyPrimeSet() const [237]
                0.00    0.00    1100/7800        Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    2200/7800        DoubleCRT::scaleDownToSet(IndexSet const&, long) [32]
                0.00    0.00    3000/7800        DoubleCRT::operator=(DoubleCRT const&) [207]
[381]    0.0    0.00    0.00    7800         IndexSet::operator==(IndexSet const&) const [381]
-----------------------------------------------
                0.00    0.00     200/6800        FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.00    6600/6800        void factorT<long>(std::vector<long, std::allocator<long> >&, long const&) [435]
[382]    0.0    0.00    0.00    6800         void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long const&>(long const&) [382]
-----------------------------------------------
                0.00    0.00     100/6653        NTL::Vec<NTL::GF2X>::operator=(NTL::Vec<NTL::GF2X> const&) [615]
                0.00    0.00     100/6653        PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
                0.00    0.00     400/6653        NTL::Vec<NTL::GF2X>::append(NTL::GF2X const&) [2061]
                0.00    0.00    6053/6653        NTL::Vec<NTL::GF2X>::DoSetLength(long) [392]
[383]    0.0    0.00    0.00    6653         NTL::Vec<NTL::GF2X>::AllocateTo(long) [383]
-----------------------------------------------
                0.00    0.00    6600/6600        PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [274]
[384]    0.0    0.00    0.00    6600         NTL::zz_pX NTL::conv<NTL::zz_pX, NTL::ZZX>(NTL::ZZX const&) [384]
-----------------------------------------------
                0.00    0.00       1/6525        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00     200/6525        void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [266]
                0.00    0.00    1162/6525        NTL::Vec<NTL::zz_pX>::append(NTL::zz_pX const&) [320]
                0.00    0.00    5162/6525        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
[385]    0.0    0.00    0.00    6525         NTL::Vec<NTL::zz_pX>::AllocateTo(long) [385]
-----------------------------------------------
                0.00    0.00    1300/6500        add1Dmats4dim(FHESecKey&, long, long) [17]
                0.00    0.00    2600/6500        void plaintextAutomorph<NTL::GF2X, PA_GF2>(NTL::GF2X&, NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [420]
                0.00    0.00    2600/6500        void plaintextAutomorph<NTL::zz_pX, PA_zz_p>(NTL::zz_pX&, NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [422]
[386]    0.0    0.00    0.00    6500         PAlgebra::genToPow(long, long) const [386]
-----------------------------------------------
                0.00    0.00    1400/6400        Ctxt::findBaseSet(IndexSet&) const [255]
                0.00    0.00    2200/6400        Ctxt::modDownToLevel(long) [30]
                0.00    0.00    2800/6400        Ctxt::findBaseLevel() const [252]
[387]    0.0    0.00    0.00    6400         card(IndexSet const&) [387]
-----------------------------------------------
                0.00    0.00     100/6300        EncryptedArrayBase::size() const [3973]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     100/6300        buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     100/6300        decryptBinaryNums(std::vector<long, std::allocator<long> >&, PtrVector<Ctxt> const&, FHESecKey const&, EncryptedArray const&, bool, bool) [185]
                0.00    0.00     100/6300        EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/6300        Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
                0.00    0.00     200/6300        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     200/6300        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     400/6300        dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     400/6300        MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     400/6300        BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     600/6300        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     800/6300        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00    2600/6300        void plaintextAutomorph<NTL::GF2X, PA_GF2>(NTL::GF2X&, NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [420]
[388]    0.0    0.00    0.00    6300         EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
-----------------------------------------------
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     100/6100        EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     100/6100        RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
                0.00    0.00     100/6100        EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/6100        Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00     200/6100        MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     200/6100        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00     400/6100        dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     400/6100        MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     400/6100        BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     600/6100        dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     800/6100        EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00    2600/6100        void plaintextAutomorph<NTL::zz_pX, PA_zz_p>(NTL::zz_pX&, NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [422]
[389]    0.0    0.00    0.00    6100         EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
-----------------------------------------------
                0.00    0.00    6100/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
[390]    0.0    0.00    0.00    6100         NTL::zz_pX* std::__uninitialized_copy<false>::__uninit_copy<NTL::zz_pX*, NTL::zz_pX*>(NTL::zz_pX*, NTL::zz_pX*, NTL::zz_pX*) [390]
-----------------------------------------------
                0.00    0.00     100/6100        PAlgebraModDerived<PA_zz_p>::genCrtTable() [326]
                0.00    0.00     100/6100        PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00     100/6100        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00     200/6100        PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
                0.00    0.00     500/6100        EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00    1300/6100        void convert<NTL::zz_pX, NTL::ZZX>(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [455]
                0.00    0.00    3800/6100        PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
[391]    0.0    0.00    0.00    6100         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
                0.00    0.00    6100/13200       std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&) [375]
                0.00    0.00    6100/6100        NTL::zz_pX* std::__uninitialized_copy<false>::__uninit_copy<NTL::zz_pX*, NTL::zz_pX*>(NTL::zz_pX*, NTL::zz_pX*, NTL::zz_pX*) [390]
-----------------------------------------------
                0.00    0.00       1/6053        NTL::PlainDivRem(NTL::GF2X&, NTL::GF2X&, NTL::GF2X const&, NTL::GF2X const&) [1297]
                0.00    0.00     100/6053        EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/6053        Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
                0.00    0.00     100/6053        NTL::EDF(NTL::Vec<NTL::GF2X>&, NTL::GF2X const&, long, long) [1907]
                0.00    0.00    1452/6053        NTL::build(NTL::GF2XModulus&, NTL::GF2X const&) [2562]
                0.00    0.00    1700/6053        NTL::build(NTL::GF2XArgument&, NTL::GF2X const&, NTL::GF2XModulus const&, long) [2564]
                0.00    0.00    2600/6053        NTL::Vec<NTL::GF2X>::FixLength(long) [423]
[392]    0.0    0.00    0.00    6053         NTL::Vec<NTL::GF2X>::DoSetLength(long) [392]
                0.00    0.00    6053/6653        NTL::Vec<NTL::GF2X>::AllocateTo(long) [383]
-----------------------------------------------
                0.00    0.00     400/5400        NTL::Vec<NTL::GF2E>::operator=(NTL::Vec<NTL::GF2E> const&) [504]
                0.00    0.00     500/5400        EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00     900/5400        NTL::Vec<NTL::GF2E>::DoSetLength(long) [461]
                0.00    0.00    1200/5400        NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&) [609]
                0.00    0.00    2400/5400        NTL::Vec<NTL::GF2E>::FixLength(long) [150]
[393]    0.0    0.00    0.00    5400         NTL::Vec<NTL::GF2E>::AllocateTo(long) [393]
-----------------------------------------------
                0.00    0.00     100/5400        PAlgebraModDerived<PA_GF2>::genCrtTable() [600]
                0.00    0.00     100/5400        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     200/5400        PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
                0.00    0.00     200/5400        PAlgebraModDerived<PA_GF2>::genMaskTable() [601]
                0.00    0.00     500/5400        void convert<NTL::GF2X, NTL::ZZX>(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [490]
                0.00    0.00     500/5400        EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00    3800/5400        PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
[394]    0.0    0.00    0.00    5400         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
                0.00    0.00    5400/13200       std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&) [375]
-----------------------------------------------
                0.00    0.00     200/5362        void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [266]
                0.00    0.00    5162/5362        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
[395]    0.0    0.00    0.00    5362         NTL::Vec<NTL::zz_pX>::Init(long) [395]
-----------------------------------------------
                0.00    0.00    5300/5300        Cmodulus::operator=(Cmodulus const&) [267]
[396]    0.0    0.00    0.00    5300         NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>* NTL::MakeRaw<NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>, NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&>(NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&) [396]
-----------------------------------------------
                0.00    0.00    5200/5200        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
[397]    0.0    0.00    0.00    5200         ConstMultiplier_zzX::~ConstMultiplier_zzX() [397]
-----------------------------------------------
                0.00    0.00    5200/5200        std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector() [471]
[398]    0.0    0.00    0.00    5200         ConstMultiplier_DoubleCRT::~ConstMultiplier_DoubleCRT() [398]
-----------------------------------------------
                0.00    0.00    5200/5200        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
[399]    0.0    0.00    0.00    5200         NTL::PartitionInfo::PartitionInfo(long, long) [399]
-----------------------------------------------
                0.00    0.00     100/5200        PolyRed(NTL::ZZX&, NTL::ZZX const&, long, bool) [589]
                0.00    0.00     200/5200        sampleHWt(NTL::ZZX&, long, long) [540]
                0.00    0.00     500/5200        sampleSmall(NTL::ZZX&, long) [489]
                0.00    0.00    4400/5200        sampleGaussian(NTL::ZZX&, long, double) [89]
[400]    0.0    0.00    0.00    5200         NTL::Vec<NTL::ZZ>::SetMaxLength(long) [400]
                0.00    0.00    5100/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
-----------------------------------------------
                0.00    0.00    2600/5200        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
                0.00    0.00    2600/5200        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
[401]    0.0    0.00    0.00    5200         std::__shared_ptr<ConstMultiplier_zzX, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<ConstMultiplier_zzX>, NTL::Vec<long> >(std::_Sp_make_shared_tag, std::allocator<ConstMultiplier_zzX> const&, NTL::Vec<long>&&) [401]
                0.00    0.00    5200/5200        std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [404]
-----------------------------------------------
                0.00    0.00    5200/5200        ConstMultiplierCache::upgrade(FHEcontext const&) [13]
[402]    0.0    0.00    0.00    5200         std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [402]
-----------------------------------------------
                0.00    0.00    5200/5200        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
[403]    0.0    0.00    0.00    5200         std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [403]
-----------------------------------------------
                0.00    0.00    5200/5200        std::__shared_ptr<ConstMultiplier_zzX, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<ConstMultiplier_zzX>, NTL::Vec<long> >(std::_Sp_make_shared_tag, std::allocator<ConstMultiplier_zzX> const&, NTL::Vec<long>&&) [401]
[404]    0.0    0.00    0.00    5200         std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [404]
-----------------------------------------------
                0.00    0.00    5200/5200        std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector() [471]
[405]    0.0    0.00    0.00    5200         std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [405]
-----------------------------------------------
                0.00    0.00    5200/5200        std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector() [471]
[406]    0.0    0.00    0.00    5200         std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [406]
-----------------------------------------------
                0.00    0.00    5200/5200        ConstMultiplier_zzX::upgrade(FHEcontext const&) const [16]
[407]    0.0    0.00    0.00    5200         std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [407]
-----------------------------------------------
                0.00    0.00     100/5162        EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/5162        Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00     100/5162        NTL::EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [346]
                0.00    0.00     200/5162        void NTL::conv<NTL::Vec<NTL::zz_pX>, NTL::Vec<NTL::zz_pE> >(NTL::Vec<NTL::Vec<NTL::zz_pX> >&, NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [335]
                0.00    0.00     200/5162        NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
                0.00    0.00     462/5162        NTL::FindFactors(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, NTL::zz_pX const&, NTL::Vec<NTL::zz_p> const&) [3230]
                0.00    0.00    1400/5162        NTL::inv(NTL::zz_pE&, NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&) [236]
                0.00    0.00    2600/5162        NTL::Vec<NTL::zz_pX>::FixLength(long) [424]
[408]    0.0    0.00    0.00    5162         NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
                0.00    0.00    5162/6525        NTL::Vec<NTL::zz_pX>::AllocateTo(long) [385]
                0.00    0.00    5162/5362        NTL::Vec<NTL::zz_pX>::Init(long) [395]
-----------------------------------------------
                0.00    0.00     100/4300        PAlgebraModDerived<PA_GF2>::CRT_decompose(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&) const [626]
                0.00    0.00     200/4300        PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
                0.00    0.00     200/4300        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00    3800/4300        PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
[409]    0.0    0.00    0.00    4300         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long) [409]
-----------------------------------------------
                0.00    0.00    4200/4200        convert(NTL::Mat<NTL::zz_pE>&, std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > > const&) [481]
[410]    0.0    0.00    0.00    4200         convert(NTL::Vec<NTL::zz_pE>&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [410]
                0.00    0.00    4200/29100       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
                0.00    0.00    4200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00    4200/4200        convert(std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >&, NTL::Mat<NTL::zz_pE> const&) [482]
[411]    0.0    0.00    0.00    4200         convert(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, NTL::Vec<NTL::zz_pE> const&) [411]
                0.00    0.00    1400/1900        std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long) [443]
-----------------------------------------------
                0.00    0.00     100/4100        NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&) [282]
                0.00    0.00     800/4100        NTL::Vec<NTL::Vec<NTL::zz_pE> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [208]
                0.00    0.00    3200/4100        void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&) [418]
[412]    0.0    0.00    0.00    4100         NTL::Vec<NTL::Vec<NTL::zz_pE> >::AllocateTo(long) [412]
-----------------------------------------------
                0.00    0.00     100/4100        PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00     200/4100        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00    3800/4100        PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
[413]    0.0    0.00    0.00    4100         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::resize(unsigned long) [413]
-----------------------------------------------
                               22800             PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const [414]
                0.00    0.00    3800/3800        PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
[414]    0.0    0.00    0.00    3800+22800   PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const [414]
                0.00    0.00   22800/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                               22800             PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const [414]
-----------------------------------------------
                0.00    0.00    3700/3700        DoubleCRT::randomize(NTL::ZZ const*) [64]
[415]    0.0    0.00    0.00    3700         NTL::Vec<unsigned char>::~Vec() [415]
-----------------------------------------------
                0.00    0.00     100/3500        buildLinPolyMatrix(NTL::Mat<NTL::zz_pE>&, long) [247]
                0.00    0.00     200/3500        NTL::sub(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [2388]
                0.00    0.00     200/3500        NTL::ident(NTL::Mat<NTL::zz_pE>&, long) [220]
                0.00    0.00     200/3500        NTL::mul(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long) [2306]
                0.00    0.00     200/3500        NTL::inv(NTL::zz_pE&, NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&) [236]
                0.00    0.00     600/3500        convert(NTL::Mat<NTL::zz_pE>&, std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > > const&) [481]
                0.00    0.00     600/3500        NTL::add(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [2198]
                0.00    0.00    1400/3500        NTL::mul_aux(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, NTL::Mat<NTL::zz_pE> const&) [182]
[416]    0.0    0.00    0.00    3500         NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
                0.00    0.00    3100/3200        void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&) [418]
-----------------------------------------------
                0.00    0.00     100/3200        EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     200/3200        EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
                0.00    0.00     200/3200        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00     300/3200        EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
                0.00    0.00     800/3200        NTL::mul(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [249]
                0.00    0.00    1600/3200        ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
[417]    0.0    0.00    0.00    3200         NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
-----------------------------------------------
                0.00    0.00     100/3200        EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00    3100/3200        NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
[418]    0.0    0.00    0.00    3200         void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&) [418]
                0.00    0.00   22400/22400       NTL::Vec<NTL::zz_pE>::FixLength(long) [368]
                0.00    0.00    3200/4100        NTL::Vec<NTL::Vec<NTL::zz_pE> >::AllocateTo(long) [412]
-----------------------------------------------
                0.00    0.00     400/2700        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     400/2700        MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     400/2700        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     400/2700        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
                0.00    0.00    1100/2700        PAlgebra::frobenuisPow(long) const [460]
[419]    0.0    0.00    0.00    2700         mcMod(long, long) [419]
-----------------------------------------------
                0.00    0.00    2600/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
[420]    0.0    0.00    0.00    2600         void plaintextAutomorph<NTL::GF2X, PA_GF2>(NTL::GF2X&, NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [420]
                0.00    0.00    2600/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00    2600/6500        PAlgebra::genToPow(long, long) const [386]
-----------------------------------------------
                0.00    0.00    2600/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [296]
[421]    0.0    0.00    0.00    2600         void plaintextAutomorph<NTL::GF2X, NTL::GF2XModulus>(NTL::GF2X&, NTL::GF2X const&, long, long, NTL::GF2XModulus const&) [421]
-----------------------------------------------
                0.00    0.00    2600/2600        std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [277]
[422]    0.0    0.00    0.00    2600         void plaintextAutomorph<NTL::zz_pX, PA_zz_p>(NTL::zz_pX&, NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [422]
                0.00    0.00    2600/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
                0.00    0.00    2600/6500        PAlgebra::genToPow(long, long) const [386]
-----------------------------------------------
                0.00    0.00    2600/2600        void NTL::Vec<NTL::Vec<NTL::GF2X> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2X>::Fixer>(long, NTL::Mat<NTL::GF2X>::Fixer&) [552]
[423]    0.0    0.00    0.00    2600         NTL::Vec<NTL::GF2X>::FixLength(long) [423]
                0.00    0.00    2600/6053        NTL::Vec<NTL::GF2X>::DoSetLength(long) [392]
-----------------------------------------------
                0.00    0.00    2600/2600        void NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pX>::Fixer>(long, NTL::Mat<NTL::zz_pX>::Fixer&) [553]
[424]    0.0    0.00    0.00    2600         NTL::Vec<NTL::zz_pX>::FixLength(long) [424]
                0.00    0.00    2600/5162        NTL::Vec<NTL::zz_pX>::DoSetLength(long) [408]
-----------------------------------------------
                0.00    0.00     200/2600        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00    2400/2600        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[425]    0.0    0.00    0.00    2600         EncryptedArrayDerived<PA_GF2>::encode(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [425]
-----------------------------------------------
                0.00    0.00     200/2600        MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00    2400/2600        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[426]    0.0    0.00    0.00    2600         EncryptedArrayDerived<PA_zz_p>::encode(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [426]
-----------------------------------------------
                0.00    0.00    1100/2500        Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00    1400/2500        Ctxt::findBaseSet(IndexSet&) const [255]
[427]    0.0    0.00    0.00    2500         Ctxt::modSwitchAddedNoiseVar() const [427]
-----------------------------------------------
                0.00    0.00    2400/2400        void NTL::Vec<NTL::Vec<NTL::ZZ> >::DoSetLengthAndApply<NTL::Mat<NTL::ZZ>::Fixer>(long, NTL::Mat<NTL::ZZ>::Fixer&) [549]
[428]    0.0    0.00    0.00    2400         NTL::Vec<NTL::ZZ>::FixLength(long) [428]
                0.00    0.00    2400/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
-----------------------------------------------
                0.00    0.00    2400/2400        NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&) [322]
[429]    0.0    0.00    0.00    2400         NTL::Vec<NTL::zz_p>::FixAtCurrentLength() [429]
-----------------------------------------------
                0.00    0.00     200/2300        NTL::Mat<NTL::GF2>::Mat(NTL::Mat<NTL::GF2> const&) [546]
                0.00    0.00     400/2300        NTL::Vec<NTL::Vec<NTL::GF2> >::operator=(NTL::Vec<NTL::Vec<NTL::GF2> > const&) [501]
                0.00    0.00    1700/2300        void NTL::Vec<NTL::Vec<NTL::GF2> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2>::Fixer>(long, NTL::Mat<NTL::GF2>::Fixer&) [445]
[430]    0.0    0.00    0.00    2300         NTL::Vec<NTL::Vec<NTL::GF2> >::AllocateTo(long) [430]
-----------------------------------------------
                0.00    0.00    2200/2200        Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
[431]    0.0    0.00    0.00    2200         BuildContext(long, long) [431]
-----------------------------------------------
                0.00    0.00    2200/2200        Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
[432]    0.0    0.00    0.00    2200         void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long) [432]
                0.00    0.00    8800/13800       NTL::Vec<char>::~Vec() [374]
                0.00    0.00    2200/2200        void factorT<long>(std::vector<long, std::allocator<long> >&, long const&) [435]
                0.00    0.00    2200/2200        NTL::to_zz_p(long) [438]
-----------------------------------------------
                0.00    0.00    2200/2200        Cmodulus::Cmodulus(PAlgebra const&, long, long) [80]
[433]    0.0    0.00    0.00    2200         FindPrimitiveRoot(NTL::zz_p&, unsigned long) [433]
-----------------------------------------------
                0.00    0.00    2200/2200        Cyclotomic(long) [91]
[434]    0.0    0.00    0.00    2200         mobius(long) [434]
                0.00    0.00    2200/13800       NTL::Vec<char>::~Vec() [374]
-----------------------------------------------
                0.00    0.00    2200/2200        void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long) [432]
[435]    0.0    0.00    0.00    2200         void factorT<long>(std::vector<long, std::allocator<long> >&, long const&) [435]
                0.00    0.00    6600/6800        void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long const&>(long const&) [382]
                0.00    0.00    2200/13800       NTL::Vec<char>::~Vec() [374]
-----------------------------------------------
                0.00    0.00    2200/2200        PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [274]
[436]    0.0    0.00    0.00    2200         void NTL::default_BlockConstruct<NTL::zz_pXModulus>(NTL::zz_pXModulus*, long) [436]
-----------------------------------------------
                0.00    0.00    2200/2200        PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [274]
[437]    0.0    0.00    0.00    2200         NTL::Vec<NTL::zz_pXModulus>::AllocateTo(long) [437]
-----------------------------------------------
                0.00    0.00    2200/2200        void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long) [432]
[438]    0.0    0.00    0.00    2200         NTL::to_zz_p(long) [438]
-----------------------------------------------
                0.00    0.00     100/1900        EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
                0.00    0.00     200/1900        EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00    1600/1900        ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
[439]    0.0    0.00    0.00    1900         NTL::Vec<NTL::Vec<NTL::zz_pE> >::~Vec() [439]
-----------------------------------------------
                0.00    0.00     300/1900        DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00     300/1900        Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
                0.00    0.00     300/1900        Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [167]
                0.00    0.00    1000/1900        Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
[440]    0.0    0.00    0.00    1900         IndexSet::emptySet() [440]
-----------------------------------------------
                0.00    0.00     300/1900        Ctxt::reLinearize(long) [67]
                0.00    0.00    1600/1900        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[441]    0.0    0.00    0.00    1900         FHEPubKey::getKeySWmatrix(SKHandle const&, long) const [441]
-----------------------------------------------
                0.00    0.00     400/1900        std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&) [224]
                0.00    0.00    1500/1900        void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&) [286]
[442]    0.0    0.00    0.00    1900         CtxtPart* std::__uninitialized_copy<false>::__uninit_copy<CtxtPart*, CtxtPart*>(CtxtPart*, CtxtPart*, CtxtPart*) [442]
-----------------------------------------------
                0.00    0.00     100/1900        void convert<NTL::ZZX, NTL::zz_pX>(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [590]
                0.00    0.00     100/1900        PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     100/1900        PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
                0.00    0.00     200/1900        RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
                0.00    0.00    1400/1900        convert(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, NTL::Vec<NTL::zz_pE> const&) [411]
[443]    0.0    0.00    0.00    1900         std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long) [443]
-----------------------------------------------
                0.00    0.00     100/1700        EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     200/1700        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     200/1700        NTL::inv(NTL::ref_GF2, NTL::Mat<NTL::GF2>&, NTL::Mat<NTL::GF2> const&) [2268]
                0.00    0.00     400/1700        Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
                0.00    0.00     800/1700        PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
[444]    0.0    0.00    0.00    1700         NTL::Mat<NTL::GF2>::SetDims(long, long) [444]
                0.00    0.00    1700/1700        void NTL::Vec<NTL::Vec<NTL::GF2> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2>::Fixer>(long, NTL::Mat<NTL::GF2>::Fixer&) [445]
-----------------------------------------------
                0.00    0.00    1700/1700        NTL::Mat<NTL::GF2>::SetDims(long, long) [444]
[445]    0.0    0.00    0.00    1700         void NTL::Vec<NTL::Vec<NTL::GF2> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2>::Fixer>(long, NTL::Mat<NTL::GF2>::Fixer&) [445]
                0.00    0.00    1700/2300        NTL::Vec<NTL::Vec<NTL::GF2> >::AllocateTo(long) [430]
-----------------------------------------------
                0.00    0.00     200/1700        FHEPubKey::FHEPubKey(FHEcontext const&) [3654]
                0.00    0.00     300/1700        Ctxt::reLinearize(long) [67]
                0.00    0.00     300/1700        Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00     400/1700        Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00     500/1700        SHEEP::ContextHElib_F2<bool>::encrypt(std::vector<bool, std::allocator<bool> >) [3575]
[446]    0.0    0.00    0.00    1700         Ctxt::Ctxt(FHEPubKey const&, long) [446]
-----------------------------------------------
                0.00    0.00    1600/1600        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[447]    0.0    0.00    0.00    1600         KeySwitch::dummy() [447]
-----------------------------------------------
                0.00    0.00     100/1600        MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     100/1600        BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     100/1600        MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     100/1600        BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
                0.00    0.00     200/1600        MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     200/1600        BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     200/1600        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     200/1600        MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     200/1600        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     200/1600        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[448]    0.0    0.00    0.00    1600         EncryptedArrayBase::sizeOfDimension(long) const [448]
                0.00    0.00     800/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     800/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
-----------------------------------------------
                0.00    0.00     100/1600        FHESecKey::genRecryptData() [52]
                0.00    0.00    1500/1600        FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
[449]    0.0    0.00    0.00    1600         PAlgebraModDerived<PA_zz_p>::getPPowR() const [449]
-----------------------------------------------
                                 800             std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*) [450]
                0.00    0.00     800/1600        AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [275]
                0.00    0.00     800/1600        addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
[450]    0.0    0.00    0.00    1600+800     std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*) [450]
                                 800             std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*) [450]
-----------------------------------------------
                0.00    0.00       1/1501        DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00     300/1501        NTL::ZZ_p::DoInstall() [2441]
                0.00    0.00    1200/1501        NTL::zz_pInfoT::zz_pInfoT(long, long) [3208]
[451]    0.0    0.00    0.00    1501         NTL::Vec<double>::AllocateTo(long) [451]
-----------------------------------------------
                0.00    0.00     400/1400        PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
                0.00    0.00    1000/1400        EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
[452]    0.0    0.00    0.00    1400         NTL::Vec<NTL::GF2E>::~Vec() [452]
-----------------------------------------------
                0.00    0.00     400/1400        PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
                0.00    0.00    1000/1400        EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
[453]    0.0    0.00    0.00    1400         NTL::Vec<NTL::zz_pE>::~Vec() [453]
-----------------------------------------------
                0.00    0.00    1400/1400        ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
[454]    0.0    0.00    0.00    1400         long NTL::operator==<NTL::zz_pE>(NTL::Vec<NTL::zz_pE> const&, NTL::Vec<NTL::zz_pE> const&) [454]
                0.00    0.00   14800/18600       long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&) [371]
-----------------------------------------------
                0.00    0.00     100/1300        EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [268]
                0.00    0.00    1200/1300        EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [195]
[455]    0.0    0.00    0.00    1300         void convert<NTL::zz_pX, NTL::ZZX>(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [455]
                0.00    0.00    1300/6100        std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long) [391]
-----------------------------------------------
                0.00    0.00    1300/1300        FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
[456]    0.0    0.00    0.00    1300         DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZX const&, DoubleCRT::MulFun) [456]
-----------------------------------------------
                0.00    0.00     100/1200        MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     100/1200        BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     100/1200        MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     100/1200        BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
                0.00    0.00     200/1200        MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     200/1200        MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     200/1200        BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     200/1200        BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[457]    0.0    0.00    0.00    1200         dimSz(EncryptedArrayBase const&, long) [457]
                0.00    0.00     600/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     600/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
-----------------------------------------------
                0.00    0.00     100/1200        PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [603]
                0.00    0.00     100/1200        PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
                0.00    0.00     400/1200        PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
                0.00    0.00     600/1200        PAlgebraModDerived<PA_GF2>::mapToFt(NTL::GF2X&, NTL::GF2X const&, unsigned long, NTL::GF2X const*) const [466]
[458]    0.0    0.00    0.00    1200         NTL::GF2XModulus::~GF2XModulus() [458]
-----------------------------------------------
                0.00    0.00    1200/1200        NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&) [609]
[459]    0.0    0.00    0.00    1200         NTL::Vec<NTL::GF2E>::Init(long, NTL::GF2E const*) [459]
-----------------------------------------------
                0.00    0.00    1100/1100        add1Dmats4dim(FHESecKey&, long, long) [17]
[460]    0.0    0.00    0.00    1100         PAlgebra::frobenuisPow(long) const [460]
                0.00    0.00    1100/2700        mcMod(long, long) [419]
-----------------------------------------------
                0.00    0.00     400/900         NTL::SetCoeff(NTL::GF2EX&, long) [3029]
                0.00    0.00     500/900         NTL::mul_aux(NTL::Vec<NTL::GF2E>&, NTL::Vec<NTL::GF2E> const&, NTL::Mat<NTL::GF2E> const&) [3368]
[461]    0.0    0.00    0.00     900         NTL::Vec<NTL::GF2E>::DoSetLength(long) [461]
                0.00    0.00     900/5400        NTL::Vec<NTL::GF2E>::AllocateTo(long) [393]
-----------------------------------------------
                0.00    0.00     100/900         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     100/900         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     100/900         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     200/900         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
                0.00    0.00     400/900         MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
[462]    0.0    0.00    0.00     900         EncryptedArrayDerived<PA_GF2>::getDegree() const [462]
-----------------------------------------------
                0.00    0.00     900/900         std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [328]
[463]    0.0    0.00    0.00     900         void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2} const&) [463]
-----------------------------------------------
                0.00    0.00     100/900         PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const [627]
                0.00    0.00     800/900         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[464]    0.0    0.00    0.00     900         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::operator=(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [464]
                0.00    0.00     900/13200       std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&) [375]
-----------------------------------------------
                0.00    0.00     100/800         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_default_append(unsigned long) [638]
                0.00    0.00     100/800         std::vector<NTL::GF2EX, std::allocator<NTL::GF2EX> >::_M_default_append(unsigned long) [637]
                0.00    0.00     100/800         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     500/800         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
[465]    0.0    0.00    0.00     800         compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [465]
-----------------------------------------------
                0.00    0.00     800/800         PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
[466]    0.0    0.00    0.00     800         PAlgebraModDerived<PA_GF2>::mapToFt(NTL::GF2X&, NTL::GF2X const&, unsigned long, NTL::GF2X const*) const [466]
                0.00    0.00     600/1200        NTL::GF2XModulus::~GF2XModulus() [458]
-----------------------------------------------
                0.00    0.00     800/800         AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [203]
[467]    0.0    0.00    0.00     800         PtrVector<Ctxt>::isSet(long) const [467]
-----------------------------------------------
                0.00    0.00     400/800         AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
                0.00    0.00     400/800         addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
[468]    0.0    0.00    0.00     800         std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::find(std::pair<long, long> const&) const [468]
-----------------------------------------------
                0.00    0.00     400/800         MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
                0.00    0.00     400/800         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[469]    0.0    0.00    0.00     800         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::vector(unsigned long, std::allocator<NTL::GF2X> const&) [469]
-----------------------------------------------
                0.00    0.00     400/800         MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
                0.00    0.00     400/800         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[470]    0.0    0.00    0.00     800         std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::vector(unsigned long, std::allocator<NTL::zz_pX> const&) [470]
-----------------------------------------------
                0.00    0.00     400/800         MatMul1DExec::~MatMul1DExec() [541]
                0.00    0.00     400/800         BlockMatMul1DExec::~BlockMatMul1DExec() [542]
[471]    0.0    0.00    0.00     800         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector() [471]
                0.00    0.00    5200/5200        ConstMultiplier_DoubleCRT::~ConstMultiplier_DoubleCRT() [398]
                0.00    0.00    5200/5200        std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [406]
                0.00    0.00    5200/5200        std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [405]
-----------------------------------------------
                0.00    0.00     800/800         AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [275]
[472]    0.0    0.00    0.00     800         std::pair<std::_Rb_tree_iterator<std::pair<std::pair<long, long> const, DAGnode> >, bool> std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_emplace_unique<std::pair<long, long>&, DAGnode>(std::pair<long, long>&, DAGnode&&) [472]
-----------------------------------------------
                0.00    0.00     700/700         PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const [629]
[473]    0.0    0.00    0.00     700         std::shared_ptr<TNode<NTL::GF2X> > buildTNode<NTL::GF2X>(std::shared_ptr<TNode<NTL::GF2X> >, std::shared_ptr<TNode<NTL::GF2X> >, NTL::GF2X const&) [473]
                0.00    0.00     600/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
-----------------------------------------------
                0.00    0.00     100/700         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
                0.00    0.00     200/700         PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
                0.00    0.00     400/700         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[474]    0.0    0.00    0.00     700         computeProd(NTL::Vec<long> const&) [474]
-----------------------------------------------
                0.00    0.00     100/700         PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [603]
                0.00    0.00     600/700         std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [476]
[475]    0.0    0.00    0.00     700         std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [475]
-----------------------------------------------
                                 600             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00     100/67800       PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [603]
[476]    0.0    0.00    0.00     700         std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [476]
                0.00    0.00     600/700         std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [475]
                                 600             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
-----------------------------------------------
                0.00    0.00     100/700         PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
                0.00    0.00     600/700         std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
[477]    0.0    0.00    0.00     700         std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [477]
-----------------------------------------------
                                 600             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00     100/67800       PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
[478]    0.0    0.00    0.00     700         std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
                0.00    0.00     700/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     600/700         std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [477]
                                 600             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
-----------------------------------------------
                0.00    0.00     700/700         FHEPubKey::setKeySwitchMap(long) [564]
[479]    0.0    0.00    0.00     700         void std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::_M_emplace_back_aux<std::pair<long, long> >(std::pair<long, long>&&) [479]
-----------------------------------------------
                0.00    0.00     200/600         PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
                0.00    0.00     400/600         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[480]    0.0    0.00    0.00     600         phi_N(long) [480]
                0.00    0.00     600/13800       NTL::Vec<char>::~Vec() [374]
-----------------------------------------------
                0.00    0.00     600/600         ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
[481]    0.0    0.00    0.00     600         convert(NTL::Mat<NTL::zz_pE>&, std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > > const&) [481]
                0.00    0.00    4200/4200        convert(NTL::Vec<NTL::zz_pE>&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [410]
                0.00    0.00     600/3500        NTL::Mat<NTL::zz_pE>::SetDims(long, long) [416]
-----------------------------------------------
                0.00    0.00     600/600         ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
[482]    0.0    0.00    0.00     600         convert(std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >&, NTL::Mat<NTL::zz_pE> const&) [482]
                0.00    0.00    4200/4200        convert(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, NTL::Vec<NTL::zz_pE> const&) [411]
                0.00    0.00     200/200         std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >::_M_default_append(unsigned long) [585]
-----------------------------------------------
                0.00    0.00     200/600         EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived() [544]
                0.00    0.00     200/600         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     200/600         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[483]    0.0    0.00    0.00     600         NTL::Vec<NTL::Vec<NTL::GF2> >::~Vec() [483]
-----------------------------------------------
                0.00    0.00     600/600         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
[484]    0.0    0.00    0.00     600         void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<long> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<long> > const&) [484]
-----------------------------------------------
                0.00    0.00     600/600         NTL::Vec<std::shared_ptr<CubeSignature> >::~Vec() [559]
[485]    0.0    0.00    0.00     600         std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [485]
-----------------------------------------------
                0.00    0.00     600/600         NTL::Vec<std::shared_ptr<CubeSignature> >::~Vec() [559]
[486]    0.0    0.00    0.00     600         std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [486]
-----------------------------------------------
                0.00    0.00     600/600         Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
[487]    0.0    0.00    0.00     600         void std::vector<CtxtPart, std::allocator<CtxtPart> >::emplace_back<CtxtPart>(CtxtPart&&) [487]
-----------------------------------------------
                0.00    0.00       1/501         DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00     500/501         void NTL::Vec<NTL::Vec<long> >::DoSetLengthAndApply<NTL::Mat<long>::Fixer>(long, NTL::Mat<long>::Fixer&) [273]
[488]    0.0    0.00    0.00     501         NTL::Vec<NTL::Vec<long> >::AllocateTo(long) [488]
-----------------------------------------------
                0.00    0.00     500/500         FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
[489]    0.0    0.00    0.00     500         sampleSmall(NTL::ZZX&, long) [489]
                0.00    0.00     500/5200        NTL::Vec<NTL::ZZ>::SetMaxLength(long) [400]
-----------------------------------------------
                0.00    0.00     500/500         EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [39]
[490]    0.0    0.00    0.00     500         void convert<NTL::GF2X, NTL::ZZX>(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [490]
                0.00    0.00     500/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
-----------------------------------------------
                0.00    0.00     100/500         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
                0.00    0.00     400/500         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[491]    0.0    0.00    0.00     500         multOrd(long, long) [491]
-----------------------------------------------
                0.00    0.00     100/500         NTL::basic_inv(NTL::zz_p&, NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, bool) [290]
                0.00    0.00     200/500         ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [229]
                0.00    0.00     200/500         NTL::basic_tri(NTL::zz_p&, NTL::Mat<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const*, NTL::Vec<NTL::zz_p>*, bool, bool) [285]
[492]    0.0    0.00    0.00     500         NTL::Vec<NTL::Vec<long> >::~Vec() [492]
-----------------------------------------------
                0.00    0.00     100/500         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     100/500         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/500         Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
                0.00    0.00     100/500         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     100/500         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
[493]    0.0    0.00    0.00     500         PAlgebraModDerived<PA_GF2>::restoreContext() const [493]
-----------------------------------------------
                0.00    0.00     100/500         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     400/500         EvalMap::upgrade() [14]
[494]    0.0    0.00    0.00     500         EncryptedArrayDerived<PA_GF2>::getContext() const [494]
-----------------------------------------------
                0.00    0.00     100/500         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00     100/500         _ZNK14EncryptedArray8dispatchI22MatMul1DExec_constructIRK8MatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [569]
                0.00    0.00     100/500         _ZNK14EncryptedArray8dispatchI27BlockMatMul1DExec_constructIRK13BlockMatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [570]
                0.00    0.00     200/500         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[495]    0.0    0.00    0.00     500         EncryptedArrayDerived<PA_GF2>::getTag() const [495]
-----------------------------------------------
                0.00    0.00     100/500         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     400/500         EvalMap::upgrade() [14]
[496]    0.0    0.00    0.00     500         EncryptedArrayDerived<PA_zz_p>::getContext() const [496]
-----------------------------------------------
                0.00    0.00     100/400         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     100/400         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
[497]    0.0    0.00    0.00     400         dimNative(EncryptedArrayBase const&, long) [497]
                0.00    0.00     400/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     400/6100        EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const [389]
-----------------------------------------------
                0.00    0.00     100/400         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     300/400         PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const [338]
[498]    0.0    0.00    0.00     400         NTL::zz_pXModulus::~zz_pXModulus() [498]
-----------------------------------------------
                0.00    0.00     400/400         Step1Matrix<PA_GF2>::get(NTL::Mat<NTL::GF2>&, long, long, long) const [508]
[499]    0.0    0.00    0.00     400         NTL::Mat<NTL::GF2>::operator=(NTL::Mat<NTL::GF2> const&) [499]
                0.00    0.00     400/400         NTL::Vec<NTL::Vec<NTL::GF2> >::operator=(NTL::Vec<NTL::Vec<NTL::GF2> > const&) [501]
-----------------------------------------------
                0.00    0.00     400/400         NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
[500]    0.0    0.00    0.00     400         NTL::Vec<NTL::Vec<NTL::ZZ> >::swap(NTL::Vec<NTL::Vec<NTL::ZZ> >&) [500]
-----------------------------------------------
                0.00    0.00     400/400         NTL::Mat<NTL::GF2>::operator=(NTL::Mat<NTL::GF2> const&) [499]
[501]    0.0    0.00    0.00     400         NTL::Vec<NTL::Vec<NTL::GF2> >::operator=(NTL::Vec<NTL::Vec<NTL::GF2> > const&) [501]
                0.00    0.00     400/2300        NTL::Vec<NTL::Vec<NTL::GF2> >::AllocateTo(long) [430]
-----------------------------------------------
                0.00    0.00     200/400         void NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pX>::Fixer>(long, NTL::Mat<NTL::zz_pX>::Fixer&) [553]
                0.00    0.00     200/400         NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLength(long) [1989]
[502]    0.0    0.00    0.00     400         NTL::Vec<NTL::Vec<NTL::zz_pX> >::AllocateTo(long) [502]
-----------------------------------------------
                0.00    0.00     100/400         PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [140]
                0.00    0.00     300/400         NTL::Vec<NTL::ZZX>::DoSetLength(long) [2050]
[503]    0.0    0.00    0.00     400         NTL::Vec<NTL::ZZX>::AllocateTo(long) [503]
-----------------------------------------------
                0.00    0.00     400/400         PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
[504]    0.0    0.00    0.00     400         NTL::Vec<NTL::GF2E>::operator=(NTL::Vec<NTL::GF2E> const&) [504]
                0.00    0.00     400/5400        NTL::Vec<NTL::GF2E>::AllocateTo(long) [393]
-----------------------------------------------
                0.00    0.00     400/400         AddDAG::allocateCtxtLike(Ctxt const&) [507]
[505]    0.0    0.00    0.00     400         Ctxt::Ctxt(ZeroCtxtLike_type, Ctxt const&) [505]
-----------------------------------------------
                0.00    0.00     400/400         AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [179]
[506]    0.0    0.00    0.00     400         AddDAG::markAsAvailable(DAGnode*) [506]
-----------------------------------------------
                0.00    0.00     400/400         AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [203]
[507]    0.0    0.00    0.00     400         AddDAG::allocateCtxtLike(Ctxt const&) [507]
                0.00    0.00     400/400         Ctxt::Ctxt(ZeroCtxtLike_type, Ctxt const&) [505]
                0.00    0.00     400/400         void std::vector<ScratchCell, std::allocator<ScratchCell> >::_M_emplace_back_aux<ScratchCell>(ScratchCell&&) [519]
-----------------------------------------------
                0.00    0.00     400/400         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[508]    0.0    0.00    0.00     400         Step1Matrix<PA_GF2>::get(NTL::Mat<NTL::GF2>&, long, long, long) const [508]
                0.00    0.00     400/400         NTL::Mat<NTL::GF2>::operator=(NTL::Mat<NTL::GF2> const&) [499]
-----------------------------------------------
                0.00    0.00     100/400         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     200/400         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[509]    0.0    0.00    0.00     400         Step1Matrix<PA_GF2>::getDim() const [509]
-----------------------------------------------
                0.00    0.00     100/400         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
                0.00    0.00     200/400         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[510]    0.0    0.00    0.00     400         Step1Matrix<PA_zz_p>::getDim() const [510]
-----------------------------------------------
                0.00    0.00     400/400         MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
[511]    0.0    0.00    0.00     400         Step2Matrix<PA_GF2>::get(NTL::GF2X&, long, long, long) const [511]
-----------------------------------------------
                0.00    0.00     100/400         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     100/400         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     200/400         MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [251]
[512]    0.0    0.00    0.00     400         Step2Matrix<PA_GF2>::getDim() const [512]
-----------------------------------------------
                0.00    0.00     100/400         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00     100/400         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     200/400         MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [240]
[513]    0.0    0.00    0.00     400         Step2Matrix<PA_zz_p>::getDim() const [513]
-----------------------------------------------
                0.00    0.00     100/400         buildModChain(FHEcontext&, long, long, long) [78]
                0.00    0.00     100/400         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
                0.00    0.00     100/400         FHESecKey::genRecryptData() [52]
                0.00    0.00     100/400         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[514]    0.0    0.00    0.00     400         PAlgebraModDerived<PA_GF2>::getPPowR() const [514]
-----------------------------------------------
                0.00    0.00     100/400         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
                0.00    0.00     100/400         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
                0.00    0.00     100/400         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/400         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
[515]    0.0    0.00    0.00     400         PAlgebraModDerived<PA_zz_p>::restoreContext() const [515]
-----------------------------------------------
                0.00    0.00     100/400         _ZNK14EncryptedArray8dispatchI22MatMul1DExec_constructIRK8MatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [569]
                0.00    0.00     100/400         _ZNK14EncryptedArray8dispatchI27BlockMatMul1DExec_constructIRK13BlockMatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [570]
                0.00    0.00     200/400         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[516]    0.0    0.00    0.00     400         EncryptedArrayDerived<PA_zz_p>::getTag() const [516]
-----------------------------------------------
                0.00    0.00     400/400         FHEPubKey::setKeySwitchMap(long) [564]
[517]    0.0    0.00    0.00     400         std::_Deque_base<long, std::allocator<long> >::_M_initialize_map(unsigned long) [517]
-----------------------------------------------
                0.00    0.00     400/400         FHEPubKey::setKeySwitchMap(long) [564]
[518]    0.0    0.00    0.00     400         std::_Deque_base<long, std::allocator<long> >::~_Deque_base() [518]
-----------------------------------------------
                0.00    0.00     400/400         AddDAG::allocateCtxtLike(Ctxt const&) [507]
[519]    0.0    0.00    0.00     400         void std::vector<ScratchCell, std::allocator<ScratchCell> >::_M_emplace_back_aux<ScratchCell>(ScratchCell&&) [519]
-----------------------------------------------
                0.00    0.00     400/400         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[520]    0.0    0.00    0.00     400         std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::vector(unsigned long, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > const&) [520]
-----------------------------------------------
                0.00    0.00     400/400         BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [134]
[521]    0.0    0.00    0.00     400         std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::~vector() [521]
-----------------------------------------------
                0.00    0.00     400/400         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[522]    0.0    0.00    0.00     400         std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::vector(unsigned long, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > const&) [522]
-----------------------------------------------
                0.00    0.00     400/400         BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [170]
[523]    0.0    0.00    0.00     400         std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::~vector() [523]
-----------------------------------------------
                0.00    0.00     100/400         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     100/400         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
[524]    0.0    0.00    0.00     400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long) [524]
-----------------------------------------------
                0.00    0.00     100/400         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
                0.00    0.00     100/400         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
                0.00    0.00     100/400         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
[525]    0.0    0.00    0.00     400         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long) [525]
-----------------------------------------------
                0.00    0.00     200/400         FHEPubKey::setKeySwitchMap(long) [564]
                0.00    0.00     200/400         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
[526]    0.0    0.00    0.00     400         std::vector<long, std::allocator<long> >::_M_fill_assign(unsigned long, long const&) [526]
-----------------------------------------------
                0.00    0.00     300/300         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
[527]    0.0    0.00    0.00     300         bool poly_comp<NTL::GF2X>(NTL::GF2X const&, NTL::GF2X const&) [527]
-----------------------------------------------
                0.00    0.00     300/300         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
[528]    0.0    0.00    0.00     300         bool poly_comp<NTL::zz_pX>(NTL::zz_pX const&, NTL::zz_pX const&) [528]
-----------------------------------------------
                0.00    0.00     100/300         EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
                0.00    0.00     200/300         NTL::zz_pEContext::restore() const [115]
[529]    0.0    0.00    0.00     300         NTL::MakeSmartAux<NTL::zz_pEInfoT>::~MakeSmartAux() [529]
                0.00    0.00     300/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     100/300         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
                0.00    0.00     200/300         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[530]    0.0    0.00    0.00     300         NTL::Mat<NTL::zz_pX>::SetDims(long, long) [530]
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pX>::Fixer>(long, NTL::Mat<NTL::zz_pX>::Fixer&) [553]
-----------------------------------------------
                0.00    0.00     100/300         NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&) [609]
                0.00    0.00     200/300         void NTL::Vec<NTL::Vec<NTL::GF2E> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2E>::Fixer>(long, NTL::Mat<NTL::GF2E>::Fixer&) [152]
[531]    0.0    0.00    0.00     300         NTL::Vec<NTL::Vec<NTL::GF2E> >::AllocateTo(long) [531]
-----------------------------------------------
                0.00    0.00     100/300         EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived() [544]
                0.00    0.00     200/300         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
[532]    0.0    0.00    0.00     300         NTL::Vec<NTL::Vec<NTL::GF2E> >::~Vec() [532]
-----------------------------------------------
                0.00    0.00     100/300         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
                0.00    0.00     200/300         PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [603]
[533]    0.0    0.00    0.00     300         NTL::Vec<NTL::GF2X>::~Vec() [533]
-----------------------------------------------
                0.00    0.00     100/300         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
                0.00    0.00     200/300         PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
[534]    0.0    0.00    0.00     300         NTL::Vec<NTL::zz_pX>::~Vec() [534]
-----------------------------------------------
                0.00    0.00     100/300         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
                0.00    0.00     200/300         FHEcontext::operator==(FHEcontext const&) const [620]
[535]    0.0    0.00    0.00     300         PAlgebraModDerived<PA_GF2>::getR() const [535]
-----------------------------------------------
                0.00    0.00     300/300         PtrVector<Ctxt>::ptr2nonNull() const [4234]
[536]    0.0    0.00    0.00     300         PtrVector_Singleton<Ctxt>::size() const [536]
-----------------------------------------------
                0.00    0.00     300/300         PtrVector<Ctxt>::ptr2nonNull() const [4234]
[537]    0.0    0.00    0.00     300         PtrVector_Singleton<Ctxt>::operator[](long) const [537]
-----------------------------------------------
                0.00    0.00     100/300         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     100/300         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     100/300         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
[538]    0.0    0.00    0.00     300         std::unique_lock<std::mutex>::lock() [538]
-----------------------------------------------
                0.00    0.00     100/200         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00     100/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[539]    0.0    0.00    0.00     200         ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [539]
                0.00    0.00    1600/1900        NTL::Vec<NTL::Vec<NTL::zz_pE> >::~Vec() [439]
                0.00    0.00    1400/1400        long NTL::operator==<NTL::zz_pE>(NTL::Vec<NTL::zz_pE> const&, NTL::Vec<NTL::zz_pE> const&) [454]
                0.00    0.00     600/600         convert(std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >&, NTL::Mat<NTL::zz_pE> const&) [482]
                0.00    0.00     600/600         convert(NTL::Mat<NTL::zz_pE>&, std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > > const&) [481]
                0.00    0.00     200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     100/200         DoubleCRT::sampleHWt(long) [191]
                0.00    0.00     100/200         FHESecKey::genRecryptData() [52]
[540]    0.0    0.00    0.00     200         sampleHWt(NTL::ZZX&, long, long) [540]
                0.00    0.00     200/107600      NTL::Vec<NTL::ZZ>::DoSetLength(long) [359]
                0.00    0.00     200/5200        NTL::Vec<NTL::ZZ>::SetMaxLength(long) [400]
-----------------------------------------------
                0.00    0.00     200/200         RecryptData::~RecryptData() [594]
[541]    0.0    0.00    0.00     200         MatMul1DExec::~MatMul1DExec() [541]
                0.00    0.00     400/800         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector() [471]
-----------------------------------------------
                0.00    0.00     200/200         RecryptData::~RecryptData() [594]
[542]    0.0    0.00    0.00     200         BlockMatMul1DExec::~BlockMatMul1DExec() [542]
                0.00    0.00     400/800         std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector() [471]
-----------------------------------------------
                0.00    0.00     200/200         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
[543]    0.0    0.00    0.00     200         EncryptedArrayDerived<PA_GF2>::EncryptedArrayDerived(FHEcontext const&, NTL::GF2X const&, PAlgebraMod const&) [543]
                0.00    0.00     200/200         PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
-----------------------------------------------
                0.00    0.00     100/200         cloned_ptr<EncryptedArrayBase, deep_clone<EncryptedArrayBase> >::~cloned_ptr() [984]
                0.00    0.00     100/200         FHEcontext::~FHEcontext() [593]
[544]    0.0    0.00    0.00     200         EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived() [544]
                0.00    0.00     200/600         NTL::Vec<NTL::Vec<NTL::GF2> >::~Vec() [483]
                0.00    0.00     200/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00     100/300         NTL::Vec<NTL::Vec<NTL::GF2E> >::~Vec() [532]
-----------------------------------------------
                0.00    0.00     100/200         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     100/200         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
[545]    0.0    0.00    0.00     200         NTL::Mat<NTL::ZZ>::SetDims(long, long) [545]
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::ZZ> >::DoSetLengthAndApply<NTL::Mat<NTL::ZZ>::Fixer>(long, NTL::Mat<NTL::ZZ>::Fixer&) [549]
-----------------------------------------------
                0.00    0.00     200/200         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
[546]    0.0    0.00    0.00     200         NTL::Mat<NTL::GF2>::Mat(NTL::Mat<NTL::GF2> const&) [546]
                0.00    0.00     200/2300        NTL::Vec<NTL::Vec<NTL::GF2> >::AllocateTo(long) [430]
                0.00    0.00     200/200         NTL::Vec<NTL::Vec<NTL::GF2> >::Init(long, NTL::Vec<NTL::GF2> const*) [550]
-----------------------------------------------
                0.00    0.00     100/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/200         Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
[547]    0.0    0.00    0.00     200         NTL::Mat<NTL::GF2X>::SetDims(long, long) [547]
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::GF2X> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2X>::Fixer>(long, NTL::Mat<NTL::GF2X>::Fixer&) [552]
-----------------------------------------------
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::ZZ> >::DoSetLengthAndApply<NTL::Mat<NTL::ZZ>::Fixer>(long, NTL::Mat<NTL::ZZ>::Fixer&) [549]
[548]    0.0    0.00    0.00     200         NTL::Vec<NTL::Vec<NTL::ZZ> >::AllocateTo(long) [548]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Mat<NTL::ZZ>::SetDims(long, long) [545]
[549]    0.0    0.00    0.00     200         void NTL::Vec<NTL::Vec<NTL::ZZ> >::DoSetLengthAndApply<NTL::Mat<NTL::ZZ>::Fixer>(long, NTL::Mat<NTL::ZZ>::Fixer&) [549]
                0.00    0.00    2400/2400        NTL::Vec<NTL::ZZ>::FixLength(long) [428]
                0.00    0.00     200/200         NTL::Vec<NTL::Vec<NTL::ZZ> >::AllocateTo(long) [548]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Mat<NTL::GF2>::Mat(NTL::Mat<NTL::GF2> const&) [546]
[550]    0.0    0.00    0.00     200         NTL::Vec<NTL::Vec<NTL::GF2> >::Init(long, NTL::Vec<NTL::GF2> const*) [550]
-----------------------------------------------
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::GF2X> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2X>::Fixer>(long, NTL::Mat<NTL::GF2X>::Fixer&) [552]
[551]    0.0    0.00    0.00     200         NTL::Vec<NTL::Vec<NTL::GF2X> >::AllocateTo(long) [551]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Mat<NTL::GF2X>::SetDims(long, long) [547]
[552]    0.0    0.00    0.00     200         void NTL::Vec<NTL::Vec<NTL::GF2X> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2X>::Fixer>(long, NTL::Mat<NTL::GF2X>::Fixer&) [552]
                0.00    0.00    2600/2600        NTL::Vec<NTL::GF2X>::FixLength(long) [423]
                0.00    0.00     200/200         NTL::Vec<NTL::Vec<NTL::GF2X> >::AllocateTo(long) [551]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Mat<NTL::zz_pX>::SetDims(long, long) [530]
[553]    0.0    0.00    0.00     200         void NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pX>::Fixer>(long, NTL::Mat<NTL::zz_pX>::Fixer&) [553]
                0.00    0.00    2600/2600        NTL::Vec<NTL::zz_pX>::FixLength(long) [424]
                0.00    0.00     200/400         NTL::Vec<NTL::Vec<NTL::zz_pX> >::AllocateTo(long) [502]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Vec<NTL::Mat<NTL::GF2> >::FixLength(long) [555]
[554]    0.0    0.00    0.00     200         NTL::Vec<NTL::Mat<NTL::GF2> >::AllocateTo(long) [554]
-----------------------------------------------
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer&) [612]
[555]    0.0    0.00    0.00     200         NTL::Vec<NTL::Mat<NTL::GF2> >::FixLength(long) [555]
                0.00    0.00     200/200         NTL::Vec<NTL::Mat<NTL::GF2> >::AllocateTo(long) [554]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Vec<NTL::Mat<NTL::zz_p> >::FixLength(long) [557]
[556]    0.0    0.00    0.00     200         NTL::Vec<NTL::Mat<NTL::zz_p> >::AllocateTo(long) [556]
-----------------------------------------------
                0.00    0.00     200/200         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer&) [614]
[557]    0.0    0.00    0.00     200         NTL::Vec<NTL::Mat<NTL::zz_p> >::FixLength(long) [557]
                0.00    0.00     200/200         NTL::Vec<NTL::Mat<NTL::zz_p> >::AllocateTo(long) [556]
-----------------------------------------------
                0.00    0.00     200/200         NTL::MultiLift(NTL::Vec<NTL::ZZX>&, NTL::Vec<NTL::zz_pX> const&, NTL::ZZX const&, long, long) [332]
[558]    0.0    0.00    0.00     200         NTL::Vec<NTL::ZZX>::~Vec() [558]
-----------------------------------------------
                0.00    0.00     200/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[559]    0.0    0.00    0.00     200         NTL::Vec<std::shared_ptr<CubeSignature> >::~Vec() [559]
                0.00    0.00     600/600         std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [486]
                0.00    0.00     600/600         std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [485]
-----------------------------------------------
                0.00    0.00     200/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[560]    0.0    0.00    0.00     200         NTL::Vec<std::unique_ptr<MatMul1DExec, std::default_delete<MatMul1DExec> > >::AllocateTo(long) [560]
-----------------------------------------------
                0.00    0.00     200/200         NTL::Vec<int>::DoSetLength(long, int const&) [562]
[561]    0.0    0.00    0.00     200         NTL::Vec<int>::AllocateTo(long) [561]
-----------------------------------------------
                0.00    0.00     200/200         add1Dmats4dim(FHESecKey&, long, long) [17]
[562]    0.0    0.00    0.00     200         NTL::Vec<int>::DoSetLength(long, int const&) [562]
                0.00    0.00     200/200         NTL::Vec<int>::AllocateTo(long) [561]
-----------------------------------------------
                0.00    0.00     100/200         EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const [315]
                0.00    0.00     100/200         EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const [242]
[563]    0.0    0.00    0.00     200         void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<NTL::ZZ> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<NTL::ZZ> > const&) [563]
-----------------------------------------------
                0.00    0.00     100/200         addFrbMatrices(FHESecKey&, long) [45]
                0.00    0.00     100/200         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::configure() [12]
[564]    0.0    0.00    0.00     200         FHEPubKey::setKeySwitchMap(long) [564]
                0.00    0.00     700/700         void std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::_M_emplace_back_aux<std::pair<long, long> >(std::pair<long, long>&&) [479]
                0.00    0.00     400/400         std::_Deque_base<long, std::allocator<long> >::_M_initialize_map(unsigned long) [517]
                0.00    0.00     400/400         std::_Deque_base<long, std::allocator<long> >::~_Deque_base() [518]
                0.00    0.00     200/400         std::vector<long, std::allocator<long> >::_M_fill_assign(unsigned long, long const&) [526]
                0.00    0.00     100/100         std::vector<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_M_default_append(unsigned long) [641]
-----------------------------------------------
                0.00    0.00     200/200         BlockMatMul1D_derived<PA_GF2>::processDiagonal(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&) const [578]
[565]    0.0    0.00    0.00     200         Step1Matrix<PA_GF2>::multipleTransforms() const [565]
-----------------------------------------------
                0.00    0.00     200/200         BlockMatMul1D_derived<PA_zz_p>::processDiagonal(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&) const [579]
[566]    0.0    0.00    0.00     200         Step1Matrix<PA_zz_p>::multipleTransforms() const [566]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1D_derived<PA_GF2>::processDiagonal(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&) const [571]
[567]    0.0    0.00    0.00     200         Step2Matrix<PA_GF2>::multipleTransforms() const [567]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1D_derived<PA_zz_p>::processDiagonal(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&) const [572]
[568]    0.0    0.00    0.00     200         Step2Matrix<PA_zz_p>::multipleTransforms() const [568]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
[569]    0.0    0.00    0.00     200         _ZNK14EncryptedArray8dispatchI22MatMul1DExec_constructIRK8MatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [569]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_GF2>::getTag() const [495]
                0.00    0.00     100/400         EncryptedArrayDerived<PA_zz_p>::getTag() const [516]
-----------------------------------------------
                0.00    0.00     200/200         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
[570]    0.0    0.00    0.00     200         _ZNK14EncryptedArray8dispatchI27BlockMatMul1DExec_constructIRK13BlockMatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_ [570]
                0.00    0.00     100/500         EncryptedArrayDerived<PA_GF2>::getTag() const [495]
                0.00    0.00     100/400         EncryptedArrayDerived<PA_zz_p>::getTag() const [516]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [250]
[571]    0.0    0.00    0.00     200         MatMul1D_derived<PA_GF2>::processDiagonal(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&) const [571]
                0.00    0.00     200/200         Step2Matrix<PA_GF2>::multipleTransforms() const [567]
-----------------------------------------------
                0.00    0.00     200/200         MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [238]
[572]    0.0    0.00    0.00     200         MatMul1D_derived<PA_zz_p>::processDiagonal(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&) const [572]
                0.00    0.00     200/200         Step2Matrix<PA_zz_p>::multipleTransforms() const [568]
-----------------------------------------------
                0.00    0.00     200/200         EncryptedArrayDerived<PA_GF2>::EncryptedArrayDerived(FHEcontext const&, NTL::GF2X const&, PAlgebraMod const&) [543]
[573]    0.0    0.00    0.00     200         PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
                0.00    0.00     800/800         PAlgebraModDerived<PA_GF2>::mapToFt(NTL::GF2X&, NTL::GF2X const&, unsigned long, NTL::GF2X const*) const [466]
                0.00    0.00     800/1700        NTL::Mat<NTL::GF2>::SetDims(long, long) [444]
                0.00    0.00     400/1200        NTL::GF2XModulus::~GF2XModulus() [458]
                0.00    0.00     400/400         NTL::Vec<NTL::GF2E>::operator=(NTL::Vec<NTL::GF2E> const&) [504]
                0.00    0.00     400/1400        NTL::Vec<NTL::GF2E>::~Vec() [452]
                0.00    0.00     200/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
                0.00    0.00     200/4300        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long) [409]
                0.00    0.00     200/200         std::vector<NTL::Mat<NTL::GF2>, std::allocator<NTL::Mat<NTL::GF2> > >::_M_default_append(unsigned long) [584]
                0.00    0.00     100/100         std::vector<NTL::GF2EX, std::allocator<NTL::GF2EX> >::_M_default_append(unsigned long) [637]
-----------------------------------------------
                0.00    0.00     200/200         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
[574]    0.0    0.00    0.00     200         PAlgebraModDerived<PA_GF2>::getTag() const [574]
-----------------------------------------------
                0.00    0.00     200/200         FHEcontext::operator==(FHEcontext const&) const [620]
[575]    0.0    0.00    0.00     200         PAlgebraModDerived<PA_GF2>::getZMStar() const [575]
-----------------------------------------------
                0.00    0.00     100/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/200         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
[576]    0.0    0.00    0.00     200         PAlgebraModDerived<PA_zz_p>::getR() const [576]
-----------------------------------------------
                0.00    0.00     100/200         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
                0.00    0.00     100/200         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
[577]    0.0    0.00    0.00     200         PAlgebraModDerived<PA_zz_p>::getZMStar() const [577]
-----------------------------------------------
                0.00    0.00     200/200         BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [133]
[578]    0.0    0.00    0.00     200         BlockMatMul1D_derived<PA_GF2>::processDiagonal(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&) const [578]
                0.00    0.00     200/200         Step1Matrix<PA_GF2>::multipleTransforms() const [565]
-----------------------------------------------
                0.00    0.00     200/200         BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [169]
[579]    0.0    0.00    0.00     200         BlockMatMul1D_derived<PA_zz_p>::processDiagonal(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&) const [579]
                0.00    0.00     200/200         Step1Matrix<PA_zz_p>::multipleTransforms() const [566]
-----------------------------------------------
                0.00    0.00     200/200         FHEcontext::operator==(FHEcontext const&) const [620]
[580]    0.0    0.00    0.00     200         PAlgebra::operator==(PAlgebra const&) const [580]
-----------------------------------------------
                0.00    0.00     100/200         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_default_append(unsigned long) [638]
                0.00    0.00     100/200         std::vector<NTL::GF2EX, std::allocator<NTL::GF2EX> >::_M_default_append(unsigned long) [637]
[581]    0.0    0.00    0.00     200         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_check_len(unsigned long, char const*) const [581]
-----------------------------------------------
                0.00    0.00     100/200         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00     100/200         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
[582]    0.0    0.00    0.00     200         std::unique_lock<std::mutex>::unlock() [582]
-----------------------------------------------
                0.00    0.00     100/200         FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00     100/200         FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [55]
[583]    0.0    0.00    0.00     200         std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_assign(unsigned long, CtxtPart const&) [583]
-----------------------------------------------
                0.00    0.00     200/200         PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
[584]    0.0    0.00    0.00     200         std::vector<NTL::Mat<NTL::GF2>, std::allocator<NTL::Mat<NTL::GF2> > >::_M_default_append(unsigned long) [584]
-----------------------------------------------
                0.00    0.00     200/200         convert(std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >&, NTL::Mat<NTL::zz_pE> const&) [482]
[585]    0.0    0.00    0.00     200         std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >::_M_default_append(unsigned long) [585]
-----------------------------------------------
                0.00    0.00     100/200         void convert<long, NTL::GF2X>(std::vector<long, std::allocator<long> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [591]
                0.00    0.00     100/200         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
[586]    0.0    0.00    0.00     200         std::vector<long, std::allocator<long> >::_M_default_append(unsigned long) [586]
-----------------------------------------------
                0.00    0.00     200/200         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
[587]    0.0    0.00    0.00     200         std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> > const&) [587]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [261]
[588]    0.0    0.00    0.00     100         EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, long) [588]
                0.00    0.00     200/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
[589]    0.0    0.00    0.00     100         PolyRed(NTL::ZZX&, NTL::ZZX const&, long, bool) [589]
                0.00    0.00     100/5200        NTL::Vec<NTL::ZZ>::SetMaxLength(long) [400]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const [268]
[590]    0.0    0.00    0.00     100         void convert<NTL::ZZX, NTL::zz_pX>(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [590]
                0.00    0.00     100/1900        std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long) [443]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const [186]
[591]    0.0    0.00    0.00     100         void convert<long, NTL::GF2X>(std::vector<long, std::allocator<long> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [591]
                0.00    0.00     100/200         std::vector<long, std::allocator<long> >::_M_default_append(unsigned long) [586]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[592]    0.0    0.00    0.00     100         setAlphaE(double&, long&, double, double, double, double, long, long) [592]
-----------------------------------------------
                0.00    0.00     100/100         SHEEP::ContextHElib<bool, NTL::Vec<Ctxt> >::~ContextHElib() [3567]
[593]    0.0    0.00    0.00     100         FHEcontext::~FHEcontext() [593]
                0.00    0.00     100/200         EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived() [544]
                0.00    0.00     100/100         RecryptData::~RecryptData() [594]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [603]
-----------------------------------------------
                0.00    0.00     100/100         FHEcontext::~FHEcontext() [593]
[594]    0.0    0.00    0.00     100         RecryptData::~RecryptData() [594]
                0.00    0.00     200/200         MatMul1DExec::~MatMul1DExec() [541]
                0.00    0.00     200/200         BlockMatMul1DExec::~BlockMatMul1DExec() [542]
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
                0.00    0.00     100/100         EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[595]    0.0    0.00    0.00     100         Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
                0.00    0.00     400/1700        NTL::Mat<NTL::GF2>::SetDims(long, long) [444]
                0.00    0.00     100/500         PAlgebraModDerived<PA_GF2>::restoreContext() const [493]
                0.00    0.00     100/6300        EncryptedArrayDerived<PA_GF2>::getPAlgebra() const [388]
                0.00    0.00     100/6053        NTL::Vec<NTL::GF2X>::DoSetLength(long) [392]
                0.00    0.00     100/200         NTL::Mat<NTL::GF2X>::SetDims(long, long) [547]
                0.00    0.00     100/100         NTL::Mat<NTL::Mat<NTL::GF2> >::SetDims(long, long) [607]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[596]    0.0    0.00    0.00     100         Step1Matrix<PA_GF2>::~Step1Matrix() [596]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[597]    0.0    0.00    0.00     100         Step1Matrix<PA_zz_p>::~Step1Matrix() [597]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[598]    0.0    0.00    0.00     100         Step2Matrix<PA_GF2>::~Step2Matrix() [598]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[599]    0.0    0.00    0.00     100         Step2Matrix<PA_zz_p>::~Step2Matrix() [599]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
[600]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::genCrtTable() [600]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const [629]
                0.00    0.00     100/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
[601]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::genMaskTable() [601]
                0.00    0.00     200/5400        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long) [394]
                0.00    0.00     100/100         std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::_M_default_append(unsigned long) [639]
-----------------------------------------------
                0.00    0.00     100/100         buildPAlgebraMod(PAlgebra const&, long) [260]
[602]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
                0.00    0.00     300/300         bool poly_comp<NTL::GF2X>(NTL::GF2X const&, NTL::GF2X const&) [527]
                0.00    0.00     100/100         NTL::Vec<NTL::GF2X>::operator=(NTL::Vec<NTL::GF2X> const&) [615]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::genCrtTable() [600]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::genMaskTable() [601]
                0.00    0.00     100/300         NTL::Vec<NTL::GF2X>::~Vec() [533]
                0.00    0.00     100/1200        NTL::GF2XModulus::~GF2XModulus() [458]
                0.00    0.00     100/6653        NTL::Vec<NTL::GF2X>::AllocateTo(long) [383]
                0.00    0.00     100/1900        std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long) [443]
-----------------------------------------------
                0.00    0.00     100/100         FHEcontext::~FHEcontext() [593]
[603]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [603]
                0.00    0.00     200/300         NTL::Vec<NTL::GF2X>::~Vec() [533]
                0.00    0.00     100/1200        NTL::GF2XModulus::~GF2XModulus() [458]
                0.00    0.00     100/67800       std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [476]
                0.00    0.00     100/700         std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [475]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::~RecryptData() [594]
[604]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [604]
                0.00    0.00     200/300         NTL::Vec<NTL::zz_pX>::~Vec() [534]
                0.00    0.00     100/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00     100/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     100/67800       std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [478]
                0.00    0.00     100/700         std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [477]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::~RecryptData() [594]
[605]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [605]
                0.00    0.00     200/3200        NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [417]
                0.00    0.00     100/1900        NTL::Vec<NTL::Vec<NTL::zz_pE> >::~Vec() [439]
                0.00    0.00     100/10100       std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector() [378]
                0.00    0.00     100/82500       NTL::Vec<NTL::zz_p>::~Vec() [360]
                0.00    0.00     100/300         NTL::MakeSmartAux<NTL::zz_pEInfoT>::~MakeSmartAux() [529]
-----------------------------------------------
                0.00    0.00     100/100         PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [138]
[606]    0.0    0.00    0.00     100         void NTL::default_BlockConstruct<PowerfulConversion>(PowerfulConversion*, long) [606]
-----------------------------------------------
                0.00    0.00     100/100         Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [595]
[607]    0.0    0.00    0.00     100         NTL::Mat<NTL::Mat<NTL::GF2> >::SetDims(long, long) [607]
                0.00    0.00     100/100         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer&) [612]
-----------------------------------------------
                0.00    0.00     100/100         Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [221]
[608]    0.0    0.00    0.00     100         NTL::Mat<NTL::Mat<NTL::zz_p> >::SetDims(long, long) [608]
                0.00    0.00     100/100         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer&) [614]
-----------------------------------------------
                0.00    0.00     100/100         NTL::Mat<NTL::GF2E>* NTL::MakeRaw<NTL::Mat<NTL::GF2E>, NTL::Mat<NTL::GF2E>&>(NTL::Mat<NTL::GF2E>&) [619]
[609]    0.0    0.00    0.00     100         NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&) [609]
                0.00    0.00    1200/5400        NTL::Vec<NTL::GF2E>::AllocateTo(long) [393]
                0.00    0.00    1200/1200        NTL::Vec<NTL::GF2E>::Init(long, NTL::GF2E const*) [459]
                0.00    0.00     100/300         NTL::Vec<NTL::Vec<NTL::GF2E> >::AllocateTo(long) [531]
-----------------------------------------------
                0.00    0.00     100/100         PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [138]
[610]    0.0    0.00    0.00     100         NTL::Vec<PowerfulConversion>::AllocateTo(long) [610]
-----------------------------------------------
                0.00    0.00     100/100         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer&) [612]
[611]    0.0    0.00    0.00     100         NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::AllocateTo(long) [611]
-----------------------------------------------
                0.00    0.00     100/100         NTL::Mat<NTL::Mat<NTL::GF2> >::SetDims(long, long) [607]
[612]    0.0    0.00    0.00     100         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer&) [612]
                0.00    0.00     200/200         NTL::Vec<NTL::Mat<NTL::GF2> >::FixLength(long) [555]
                0.00    0.00     100/100         NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::AllocateTo(long) [611]
-----------------------------------------------
                0.00    0.00     100/100         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer&) [614]
[613]    0.0    0.00    0.00     100         NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::AllocateTo(long) [613]
-----------------------------------------------
                0.00    0.00     100/100         NTL::Mat<NTL::Mat<NTL::zz_p> >::SetDims(long, long) [608]
[614]    0.0    0.00    0.00     100         void NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer&) [614]
                0.00    0.00     200/200         NTL::Vec<NTL::Mat<NTL::zz_p> >::FixLength(long) [557]
                0.00    0.00     100/100         NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::AllocateTo(long) [613]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [602]
[615]    0.0    0.00    0.00     100         NTL::Vec<NTL::GF2X>::operator=(NTL::Vec<NTL::GF2X> const&) [615]
                0.00    0.00     100/6653        NTL::Vec<NTL::GF2X>::AllocateTo(long) [383]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
[616]    0.0    0.00    0.00     100         NTL::Vec<bool>::AllocateTo(long) [616]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[617]    0.0    0.00    0.00     100         NTL::Vec<long>::operator=(NTL::Vec<long> const&) [617]
-----------------------------------------------
                0.00    0.00     100/100         EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [9]
[618]    0.0    0.00    0.00     100         void NTL::conv<NTL::Vec<NTL::zz_pE>, NTL::Vec<NTL::zz_pX> >(NTL::Vec<NTL::Vec<NTL::zz_pE> >&, NTL::Vec<NTL::Vec<NTL::zz_pX> > const&) [618]
                0.00    0.00     200/29100       NTL::Vec<NTL::zz_pE>::DoSetLength(long) [365]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
[619]    0.0    0.00    0.00     100         NTL::Mat<NTL::GF2E>* NTL::MakeRaw<NTL::Mat<NTL::GF2E>, NTL::Mat<NTL::GF2E>&>(NTL::Mat<NTL::GF2E>&) [619]
                0.00    0.00     100/100         NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&) [609]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
[620]    0.0    0.00    0.00     100         FHEcontext::operator==(FHEcontext const&) const [620]
                0.00    0.00     400/7800        IndexSet::operator==(IndexSet const&) const [381]
                0.00    0.00     200/200         PAlgebra::operator==(PAlgebra const&) const [580]
                0.00    0.00     200/200         PAlgebraModDerived<PA_GF2>::getZMStar() const [575]
                0.00    0.00     200/300         PAlgebraModDerived<PA_GF2>::getR() const [535]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
[621]    0.0    0.00    0.00     100         RecryptData::operator==(RecryptData const&) const [621]
-----------------------------------------------
                0.00    0.00     100/100         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
[622]    0.0    0.00    0.00     100         Step1Matrix<PA_GF2>::getEA() const [622]
-----------------------------------------------
                0.00    0.00     100/100         BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
[623]    0.0    0.00    0.00     100         Step1Matrix<PA_zz_p>::getEA() const [623]
-----------------------------------------------
                0.00    0.00     100/100         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
[624]    0.0    0.00    0.00     100         Step2Matrix<PA_GF2>::getEA() const [624]
-----------------------------------------------
                0.00    0.00     100/100         MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
[625]    0.0    0.00    0.00     100         Step2Matrix<PA_zz_p>::getEA() const [625]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const [627]
[626]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::CRT_decompose(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&) const [626]
                0.00    0.00     100/4300        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long) [409]
-----------------------------------------------
                0.00    0.00     100/100         EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const [306]
[627]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const [627]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::CRT_decompose(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&) const [626]
                0.00    0.00     100/9900        std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector() [379]
                0.00    0.00     100/900         std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::operator=(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [464]
-----------------------------------------------
                0.00    0.00     100/100         FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [173]
[628]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_GF2>::getFactorsOverZZ() const [628]
-----------------------------------------------
                                 600             PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const [629]
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::genCrtTable() [600]
[629]    0.0    0.00    0.00     100+600     PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const [629]
                0.00    0.00    1200/67800       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [361]
                0.00    0.00     700/700         std::shared_ptr<TNode<NTL::GF2X> > buildTNode<NTL::GF2X>(std::shared_ptr<TNode<NTL::GF2X> >, std::shared_ptr<TNode<NTL::GF2X> >, NTL::GF2X const&) [473]
                                 600             PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const [629]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[630]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_zz_p>::getFactorsOverZZ() const [630]
-----------------------------------------------
                0.00    0.00     100/100         buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [257]
[631]    0.0    0.00    0.00     100         PAlgebraModDerived<PA_zz_p>::getTag() const [631]
-----------------------------------------------
                0.00    0.00     100/100         RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [6]
[632]    0.0    0.00    0.00     100         EncryptedArrayDerived<PA_zz_p>::getDegree() const [632]
-----------------------------------------------
                0.00    0.00     100/100         FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
[633]    0.0    0.00    0.00     100         DoubleCRT::toPoly(NTL::ZZX&, bool) const [633]
-----------------------------------------------
                0.00    0.00     100/100         buildModChain(FHEcontext&, long, long, long) [78]
[634]    0.0    0.00    0.00     100         std::vector<IndexSet, std::allocator<IndexSet> >::_M_default_append(unsigned long) [634]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
[635]    0.0    0.00    0.00     100         std::vector<NTL::Mat<NTL::zz_p>, std::allocator<NTL::Mat<NTL::zz_p> > >::_M_default_append(unsigned long) [635]
-----------------------------------------------
                0.00    0.00     100/100         buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
[636]    0.0    0.00    0.00     100         std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >::_M_default_append(unsigned long) [636]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const [573]
[637]    0.0    0.00    0.00     100         std::vector<NTL::GF2EX, std::allocator<NTL::GF2EX> >::_M_default_append(unsigned long) [637]
                0.00    0.00     100/200         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_check_len(unsigned long, char const*) const [581]
                0.00    0.00     100/800         compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [465]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const [256]
[638]    0.0    0.00    0.00     100         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_default_append(unsigned long) [638]
                0.00    0.00     100/200         std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_check_len(unsigned long, char const*) const [581]
                0.00    0.00     100/800         compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [465]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_GF2>::genMaskTable() [601]
[639]    0.0    0.00    0.00     100         std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::_M_default_append(unsigned long) [639]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebraModDerived<PA_zz_p>::genMaskTable() [329]
[640]    0.0    0.00    0.00     100         std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::_M_default_append(unsigned long) [640]
-----------------------------------------------
                0.00    0.00     100/100         FHEPubKey::setKeySwitchMap(long) [564]
[641]    0.0    0.00    0.00     100         std::vector<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_M_default_append(unsigned long) [641]
-----------------------------------------------
                0.00    0.00     100/100         PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [176]
[642]    0.0    0.00    0.00     100         std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned long) [642]
-----------------------------------------------
                0.00    0.00       1/55          DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [18]
                0.00    0.00       1/55          DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [15]
                0.00    0.00       1/55          DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [11]
                0.00    0.00       1/55          DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [38]
                0.00    0.00       1/55          DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [184]
                0.00    0.00       1/55          DoubleCRT::addPrimes(IndexSet const&) [139]
                0.00    0.00       1/55          DoubleCRT::do_mul(DoubleCRT const&, bool) [65]
                0.00    0.00       1/55          FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const [42]
                0.00    0.00       1/55          FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const [163]
                0.00    0.00       1/55          FHESecKey::GenKeySWmatrix(long, long, long, long, long) [7]
                0.00    0.00       1/55          FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const [190]
                0.00    0.00       1/55          Ctxt::modDownToSet(IndexSet const&) [31]
                0.00    0.00       1/55          Ctxt::privateAssign(Ctxt const&) [213]
                0.00    0.00       1/55          Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [192]
                0.00    0.00       1/55          Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [71]
                0.00    0.00       1/55          Ctxt::reLinearize(long) [67]
                0.00    0.00       1/55          Ctxt::addCtxt(Ctxt const&, bool) [180]
                0.00    0.00       1/55          Ctxt::operator*=(Ctxt const&) [47]
                0.00    0.00       1/55          Ctxt::multiplyBy(Ctxt const&) [37]
                0.00    0.00       1/55          EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const [306]
                0.00    0.00       1/55          buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [172]
                0.00    0.00       1/55          addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [178]
                0.00    0.00       1/55          multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [36]
                0.00    0.00       1/55          PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const [193]
                0.00    0.00       1/55          PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const [181]
                0.00    0.00       1/55          ConstMultiplierCache::upgrade(FHEcontext const&) [13]
                0.00    0.00       1/55          MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [215]
                0.00    0.00       1/55          BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [72]
                0.00    0.00       1/55          BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [10]
                0.00    0.00       2/55          DoubleCRT::randomize(NTL::ZZ const*) [64]
                0.00    0.00       2/55          DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const [132]
                0.00    0.00       2/55          EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const [137]
                0.00    0.00       2/55          EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const [212]
                0.00    0.00       2/55          PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const [166]
                0.00    0.00       2/55          PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const [165]
                0.00    0.00       2/55          Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const [20]
                0.00    0.00       2/55          Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const [21]
                0.00    0.00       2/55          Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const [70]
                0.00    0.00       3/55          DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const [53]
                0.00    0.00       5/55          Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [164]
[643]    0.0    0.00    0.00      55         registerTimer(FHEtimer*) [643]
                0.00    0.00       7/7           void std::vector<FHEtimer*, std::allocator<FHEtimer*> >::_M_emplace_back_aux<FHEtimer* const&>(FHEtimer* const&) [644]
-----------------------------------------------
                0.00    0.00       7/7           registerTimer(FHEtimer*) [643]
[644]    0.0    0.00    0.00       7         void std::vector<FHEtimer*, std::allocator<FHEtimer*> >::_M_emplace_back_aux<FHEtimer* const&>(FHEtimer* const&) [644]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[645]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z11runningSumsR9PtrVectorI4CtxtE [645]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[646]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12BuildContextll [646]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[647]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13BluesteinInitlRKN3NTL4zz_pERNS_5zz_pXERNS_3VecImEERNS_6fftRepE [647]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[648]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13GetTimerClockv [648]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[649]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13extractDigitsRSt6vectorI4CtxtSaIS0_EERKS0_l [649]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[650]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z15KSGiantStepSizel [650]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[651]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z19buildEncryptedArrayRK10FHEcontextRKN3NTL3ZZXERK11PAlgebraMod [651]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[652]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z23buildUnpackSlotEncodingRSt6vectorIN3NTL3VecIlEESaIS2_EERK14EncryptedArray [652]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[653]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z4RLWER9DoubleCRTS0_RKS_lPN3NTL2ZZE [653]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[654]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z5FindMlllllllb [654]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[655]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10FHEglobals13automorphValsE [655]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[656]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10FHEglobals6dryRunE [656]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[657]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN11RecryptDataD2Ev [657]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[658]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN17DynamicCtxtPowers8getPowerEl [658]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[659]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN26PowerfulTranslationIndexesC2ERKN3NTL3VecIlEE [659]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[660]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3NTLltENS_3GF2ES0_ [660]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[661]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6AddDAG4initERK9PtrVectorI4CtxtES4_ [661]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[662]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7EvalMapC2ERK14EncryptedArraybRKN3NTL3VecIlEEbbb [662]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[663]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN8IndexSet8emptySetEv [663]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[664]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9DoubleCRT3FFTERKN3NTL3ZZXERK8IndexSet [664]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[665]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK13CubeSignature15breakIndexByDimEll [665]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [5897]
[666]    0.0    0.00    0.00       1         _GLOBAL__sub_I_fhe_test_force_bsgs [666]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [645] _GLOBAL__sub_I__Z11runningSumsR9PtrVectorI4CtxtE (binaryCompare.cpp) [612] void NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::GF2> >::Fixer&) [624] Step2Matrix<PA_GF2>::getEA() const
 [646] _GLOBAL__sub_I__Z12BuildContextll (CModulus.cpp) [613] NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::AllocateTo(long) [512] Step2Matrix<PA_GF2>::getDim() const
 [647] _GLOBAL__sub_I__Z13BluesteinInitlRKN3NTL4zz_pERNS_5zz_pXERNS_3VecImEERNS_6fftRepE (bluestein.cpp) [614] void NTL::Vec<NTL::Vec<NTL::Mat<NTL::zz_p> > >::DoSetLengthAndApply<NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer>(long, NTL::Mat<NTL::Mat<NTL::zz_p> >::Fixer&) [568] Step2Matrix<PA_zz_p>::multipleTransforms() const
 [648] _GLOBAL__sub_I__Z13GetTimerClockv (timing.cpp) [531] NTL::Vec<NTL::Vec<NTL::GF2E> >::AllocateTo(long) [334] Step2Matrix<PA_zz_p>::get(NTL::zz_pX&, long, long, long) const
 [649] _GLOBAL__sub_I__Z13extractDigitsRSt6vectorI4CtxtSaIS0_EERKS0_l (extractDigits.cpp) [152] void NTL::Vec<NTL::Vec<NTL::GF2E> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2E>::Fixer>(long, NTL::Mat<NTL::GF2E>::Fixer&) [625] Step2Matrix<PA_zz_p>::getEA() const
 [650] _GLOBAL__sub_I__Z15KSGiantStepSizel (KeySwitching.cpp) [532] NTL::Vec<NTL::Vec<NTL::GF2E> >::~Vec() [513] Step2Matrix<PA_zz_p>::getDim() const
 [651] _GLOBAL__sub_I__Z19buildEncryptedArrayRK10FHEcontextRKN3NTL3ZZXERK11PAlgebraMod (EncryptedArray.cpp) [551] NTL::Vec<NTL::Vec<NTL::GF2X> >::AllocateTo(long) [569] _ZNK14EncryptedArray8dispatchI22MatMul1DExec_constructIRK8MatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_
 [652] _GLOBAL__sub_I__Z23buildUnpackSlotEncodingRSt6vectorIN3NTL3VecIlEESaIS2_EERK14EncryptedArray (intraSlot.cpp) [552] void NTL::Vec<NTL::Vec<NTL::GF2X> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2X>::Fixer>(long, NTL::Mat<NTL::GF2X>::Fixer&) [570] _ZNK14EncryptedArray8dispatchI27BlockMatMul1DExec_constructIRK13BlockMatMul1DRSt6vectorISt10shared_ptrI15ConstMultiplierESaIS8_EESB_RlEEEvDpOT0_
 [653] _GLOBAL__sub_I__Z4RLWER9DoubleCRTS0_RKS_lPN3NTL2ZZE (FHE.cpp) [366] NTL::Vec<NTL::Vec<NTL::zz_p> >::AllocateTo(long) [149] DoubleCRTHelper::clone() const
 [654] _GLOBAL__sub_I__Z5FindMlllllllb (FHEContext.cpp) [146] void NTL::Vec<NTL::Vec<NTL::zz_p> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_p>::Fixer>(long, NTL::Mat<NTL::zz_p>::Fixer&) [571] MatMul1D_derived<PA_GF2>::processDiagonal(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&) const
 [655] _GLOBAL__sub_I__ZN10FHEglobals13automorphValsE (Ctxt.cpp) [364] NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long) [572] MatMul1D_derived<PA_zz_p>::processDiagonal(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&) const
 [656] _GLOBAL__sub_I__ZN10FHEglobals6dryRunE (NumbTh.cpp) [323] NTL::Vec<NTL::Vec<NTL::zz_p> >::Init(long, NTL::Vec<NTL::zz_p> const*) [448] EncryptedArrayBase::sizeOfDimension(long) const
 [657] _GLOBAL__sub_I__ZN11RecryptDataD2Ev (recryption.cpp) [367] NTL::Vec<NTL::Vec<NTL::zz_p> >::swap(NTL::Vec<NTL::Vec<NTL::zz_p> >&) [573] PAlgebraModDerived<PA_GF2>::mapToSlots(MappingData<PA_GF2>&, NTL::GF2X const&) const
 [658] _GLOBAL__sub_I__ZN17DynamicCtxtPowers8getPowerEl (polyEval.cpp) [417] NTL::Vec<NTL::Vec<NTL::zz_p> >::~Vec() [166] PAlgebraModDerived<PA_GF2>::embedInSlots(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, MappingData<PA_GF2> const&) const
 [659] _GLOBAL__sub_I__ZN26PowerfulTranslationIndexesC2ERKN3NTL3VecIlEE (powerful.cpp) [226] NTL::Vec<NTL::Vec<NTL::zz_p> >::operator=(NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [626] PAlgebraModDerived<PA_GF2>::CRT_decompose(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&) const
 [660] _GLOBAL__sub_I__ZN3NTLltENS_3GF2ES0_ (PAlgebra.cpp) [412] NTL::Vec<NTL::Vec<NTL::zz_pE> >::AllocateTo(long) [493] PAlgebraModDerived<PA_GF2>::restoreContext() const
 [661] _GLOBAL__sub_I__ZN6AddDAG4initERK9PtrVectorI4CtxtES4_ (binaryArith.cpp) [418] void NTL::Vec<NTL::Vec<NTL::zz_pE> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pE>::Fixer>(long, NTL::Mat<NTL::zz_pE>::Fixer&) [193] PAlgebraModDerived<PA_GF2>::CRT_reconstruct(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&) const
 [662] _GLOBAL__sub_I__ZN7EvalMapC2ERK14EncryptedArraybRKN3NTL3VecIlEEbbb (EvalMap.cpp) [439] NTL::Vec<NTL::Vec<NTL::zz_pE> >::~Vec() [627] PAlgebraModDerived<PA_GF2>::decodePlaintext(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::GF2X const&, MappingData<PA_GF2> const&) const
 [663] _GLOBAL__sub_I__ZN8IndexSet8emptySetEv (IndexSet.cpp) [502] NTL::Vec<NTL::Vec<NTL::zz_pX> >::AllocateTo(long) [628] PAlgebraModDerived<PA_GF2>::getFactorsOverZZ() const
 [664] _GLOBAL__sub_I__ZN9DoubleCRT3FFTERKN3NTL3ZZXERK8IndexSet (DoubleCRT.cpp) [553] void NTL::Vec<NTL::Vec<NTL::zz_pX> >::DoSetLengthAndApply<NTL::Mat<NTL::zz_pX>::Fixer>(long, NTL::Mat<NTL::zz_pX>::Fixer&) [535] PAlgebraModDerived<PA_GF2>::getR() const
 [665] _GLOBAL__sub_I__ZNK13CubeSignature15breakIndexByDimEll (hypercube.cpp) [488] NTL::Vec<NTL::Vec<long> >::AllocateTo(long) [574] PAlgebraModDerived<PA_GF2>::getTag() const
 [666] _GLOBAL__sub_I_fhe_test_force_bsgs (matmul.cpp) [273] void NTL::Vec<NTL::Vec<long> >::DoSetLengthAndApply<NTL::Mat<long>::Fixer>(long, NTL::Mat<long>::Fixer&) [466] PAlgebraModDerived<PA_GF2>::mapToFt(NTL::GF2X&, NTL::GF2X const&, unsigned long, NTL::GF2X const*) const
  [91] Cyclotomic(long)      [492] NTL::Vec<NTL::Vec<long> >::~Vec() [414] PAlgebraModDerived<PA_GF2>::evalTree(NTL::GF2X&, std::shared_ptr<TNode<NTL::GF2X> >, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&, long, long) const
  [57] _ntl_gcopy(_ntl_gbigint_body*, _ntl_gbigint_body**) [437] NTL::Vec<NTL::zz_pXModulus>::AllocateTo(long) [514] PAlgebraModDerived<PA_GF2>::getPPowR() const
 [473] std::shared_ptr<TNode<NTL::GF2X> > buildTNode<NTL::GF2X>(std::shared_ptr<TNode<NTL::GF2X> >, std::shared_ptr<TNode<NTL::GF2X> >, NTL::GF2X const&) [359] NTL::Vec<NTL::ZZ>::DoSetLength(long) [629] PAlgebraModDerived<PA_GF2>::buildTree(std::shared_ptr<TNode<NTL::GF2X> >&, long, long) const
 [340] std::shared_ptr<TNode<NTL::zz_pX> > buildTNode<NTL::zz_pX>(std::shared_ptr<TNode<NTL::zz_pX> >, std::shared_ptr<TNode<NTL::zz_pX> >, NTL::zz_pX const&) [400] NTL::Vec<NTL::ZZ>::SetMaxLength(long) [575] PAlgebraModDerived<PA_GF2>::getZMStar() const
 [474] computeProd(NTL::Vec<long> const&) [428] NTL::Vec<NTL::ZZ>::FixLength(long) [256] PAlgebraModDerived<PA_zz_p>::mapToSlots(MappingData<PA_zz_p>&, NTL::zz_pX const&) const
 [489] sampleSmall(NTL::ZZX&, long) [380] NTL::Vec<NTL::ZZ>::SetLength(long) [165] PAlgebraModDerived<PA_zz_p>::embedInSlots(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, MappingData<PA_zz_p> const&) const
  [10] BluesteinFFT(NTL::zz_pX&, long, NTL::zz_p const&, NTL::zz_pX const&, NTL::Vec<unsigned long> const&, NTL::fftRep const&) [554] NTL::Vec<NTL::Mat<NTL::GF2> >::AllocateTo(long) [515] PAlgebraModDerived<PA_zz_p>::restoreContext() const
 [431] BuildContext(long, long) [555] NTL::Vec<NTL::Mat<NTL::GF2> >::FixLength(long) [181] PAlgebraModDerived<PA_zz_p>::CRT_reconstruct(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&) const
 [266] void PAlgebraLift<NTL::Vec<NTL::zz_pX> >(NTL::ZZX const&, NTL::Vec<NTL::zz_pX> const&, NTL::Vec<NTL::zz_pX>&, NTL::Vec<NTL::zz_pX>&, long) [556] NTL::Vec<NTL::Mat<NTL::zz_p> >::AllocateTo(long) [630] PAlgebraModDerived<PA_zz_p>::getFactorsOverZZ() const
  [92] _ntl_GetTime()        [557] NTL::Vec<NTL::Mat<NTL::zz_p> >::FixLength(long) [576] PAlgebraModDerived<PA_zz_p>::getR() const
 [153] _ntl_ginvmod(_ntl_gbigint_body*, _ntl_gbigint_body*, _ntl_gbigint_body**) [503] NTL::Vec<NTL::ZZX>::AllocateTo(long) [631] PAlgebraModDerived<PA_zz_p>::getTag() const
 [154] pp_factorize(std::vector<long, std::allocator<long> >&, long) [558] NTL::Vec<NTL::ZZX>::~Vec() [338] PAlgebraModDerived<PA_zz_p>::mapToFt(NTL::zz_pX&, NTL::zz_pX const&, unsigned long, NTL::zz_pX const*) const
 [130] AddManyPrimes(FHEcontext&, double, bool, bool) [393] NTL::Vec<NTL::GF2E>::AllocateTo(long) [222] PAlgebraModDerived<PA_zz_p>::evalTree(NTL::zz_pX&, std::shared_ptr<TNode<NTL::zz_pX> >, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&, long, long) const
  [82] BluesteinInit(long, NTL::zz_p const&, NTL::zz_pX&, NTL::Vec<unsigned long>&, NTL::fftRep&) [461] NTL::Vec<NTL::GF2E>::DoSetLength(long) [449] PAlgebraModDerived<PA_zz_p>::getPPowR() const
 [432] void FindPrimRootT<NTL::zz_p, long>(NTL::zz_p&, unsigned long) [459] NTL::Vec<NTL::GF2E>::Init(long, NTL::GF2E const*) [342] PAlgebraModDerived<PA_zz_p>::buildTree(std::shared_ptr<TNode<NTL::zz_pX> >&, long, long) const
  [35] GetTimerClock()       [150] NTL::Vec<NTL::GF2E>::FixLength(long) [577] PAlgebraModDerived<PA_zz_p>::getZMStar() const
 [178] addTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [452] NTL::Vec<NTL::GF2E>::~Vec() [16] ConstMultiplier_zzX::upgrade(FHEcontext const&) const
  [78] buildModChain(FHEcontext&, long, long, long) [504] NTL::Vec<NTL::GF2E>::operator=(NTL::Vec<NTL::GF2E> const&) [536] PtrVector_Singleton<Ctxt>::size() const
 [643] registerTimer(FHEtimer*) [383] NTL::Vec<NTL::GF2X>::AllocateTo(long) [537] PtrVector_Singleton<Ctxt>::operator[](long) const
  [36] multTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, bool, long, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [392] NTL::Vec<NTL::GF2X>::DoSetLength(long) [578] BlockMatMul1D_derived<PA_GF2>::processDiagonal(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&) const
  [89] sampleGaussian(NTL::ZZX&, long, double) [423] NTL::Vec<NTL::GF2X>::FixLength(long) [579] BlockMatMul1D_derived<PA_zz_p>::processDiagonal(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&) const
  [93] _ntl_gsetlength(_ntl_gbigint_body**, long) [533] NTL::Vec<NTL::GF2X>::~Vec() [494] EncryptedArrayDerived<PA_GF2>::getContext() const
 [260] buildPAlgebraMod(PAlgebra const&, long) [615] NTL::Vec<NTL::GF2X>::operator=(NTL::Vec<NTL::GF2X> const&) [388] EncryptedArrayDerived<PA_GF2>::getPAlgebra() const
 [433] FindPrimitiveRoot(NTL::zz_p&, unsigned long) [87] NTL::Vec<NTL::zz_p>::AllocateTo(long) [137] EncryptedArrayDerived<PA_GF2>::buildLinPolyCoeffs(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
  [27] addSome1DMatrices(FHESecKey&, long, long) [54] NTL::Vec<NTL::zz_p>::DoSetLength(long) [315] EncryptedArrayDerived<PA_GF2>::initNormalBasisMatrix() const
 [465] compareTwoNumbers(PtrVector<Ctxt>&, PtrVector<Ctxt>&, Ctxt&, Ctxt&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >*) [429] NTL::Vec<NTL::zz_p>::FixAtCurrentLength() [306] EncryptedArrayDerived<PA_GF2>::decode(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, NTL::ZZX const&) const
 [185] decryptBinaryNums(std::vector<long, std::allocator<long> >&, PtrVector<Ctxt> const&, FHESecKey const&, EncryptedArray const&, bool, bool) [357] NTL::Vec<NTL::zz_p>::Init(long, NTL::zz_p const*) [199] EncryptedArrayDerived<PA_GF2>::encode(NTL::Vec<long>&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
  [44] addSomeFrbMatrices(FHESecKey&, long, long) [144] NTL::Vec<NTL::zz_p>::FixLength(long) [219] EncryptedArrayDerived<PA_GF2>::encode(NTL::ZZX&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
 [141] buildLinPolyMatrix(NTL::Mat<NTL::GF2E>&, long) [372] NTL::Vec<NTL::zz_p>::SetLength(long) [425] EncryptedArrayDerived<PA_GF2>::encode(NTL::GF2X&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) const
 [247] buildLinPolyMatrix(NTL::Mat<NTL::zz_pE>&, long) [341] NTL::Vec<NTL::zz_p>::Vec(NTL::Vec<NTL::zz_p> const&) [495] EncryptedArrayDerived<PA_GF2>::getTag() const
 [420] void plaintextAutomorph<NTL::GF2X, PA_GF2>(NTL::GF2X&, NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [360] NTL::Vec<NTL::zz_p>::~Vec() [186] EncryptedArrayDerived<PA_GF2>::decrypt(Ctxt const&, FHESecKey const&, std::vector<long, std::allocator<long> >&) const
 [421] void plaintextAutomorph<NTL::GF2X, NTL::GF2XModulus>(NTL::GF2X&, NTL::GF2X const&, long, long, NTL::GF2XModulus const&) [68] NTL::Vec<NTL::zz_p>::operator=(NTL::Vec<NTL::zz_p> const&) [39] EncryptedArrayDerived<PA_GF2>::encrypt(Ctxt&, FHEPubKey const&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const
 [422] void plaintextAutomorph<NTL::zz_pX, PA_zz_p>(NTL::zz_pX&, NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [363] NTL::Vec<NTL::zz_pE>::AllocateTo(long) [462] EncryptedArrayDerived<PA_GF2>::getDegree() const
 [289] void plaintextAutomorph<NTL::zz_pX, NTL::zz_pXModulus>(NTL::zz_pX&, NTL::zz_pX const&, long, long, NTL::zz_pXModulus const&) [365] NTL::Vec<NTL::zz_pE>::DoSetLength(long) [496] EncryptedArrayDerived<PA_zz_p>::getContext() const
  [94] _ntl_gblock_destroy(_ntl_gbigint_body*) [281] NTL::Vec<NTL::zz_pE>::Init(long, NTL::zz_pE const*) [389] EncryptedArrayDerived<PA_zz_p>::getPAlgebra() const
 [257] buildEncryptedArray(FHEcontext const&, NTL::ZZX const&, PAlgebraMod const&) [368] NTL::Vec<NTL::zz_pE>::FixLength(long) [268] EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const
 [296] std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::GF2X, PA_GF2>(NTL::GF2X const&, long, long, EncryptedArrayDerived<PA_GF2> const&) [453] NTL::Vec<NTL::zz_pE>::~Vec() [212] EncryptedArrayDerived<PA_zz_p>::buildLinPolyCoeffs(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const
 [277] std::shared_ptr<ConstMultiplier> build_ConstMultiplier<NTL::zz_pX, PA_zz_p>(NTL::zz_pX const&, long, long, EncryptedArrayDerived<PA_zz_p> const&) [206] NTL::Vec<NTL::zz_pE>::operator=(NTL::Vec<NTL::zz_pE> const&) [242] EncryptedArrayDerived<PA_zz_p>::initNormalBasisMatrix() const
 [172] buildUnpackSlotEncoding(std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >&, EncryptedArray const&) [385] NTL::Vec<NTL::zz_pX>::AllocateTo(long) [194] EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const
  [58] _ntl_general_rem_one_struct_apply(_ntl_gbigint_body*, long, _ntl_general_rem_one_struct*) [408] NTL::Vec<NTL::zz_pX>::DoSetLength(long) [195] EncryptedArrayDerived<PA_zz_p>::encode(NTL::ZZX&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) const
 [588] EDF(NTL::Vec<NTL::zz_pX>&, NTL::zz_pX const&, long) [395] NTL::Vec<NTL::zz_pX>::Init(long) [426] EncryptedArrayDerived<PA_zz_p>::encode(NTL::zz_pX&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) const
 [369] rem(NTL::zz_pX&, NTL::zz_pX const&, zz_pXModulus1 const&) [424] NTL::Vec<NTL::zz_pX>::FixLength(long) [516] EncryptedArrayDerived<PA_zz_p>::getTag() const
 [143] RLWE(DoubleCRT&, DoubleCRT&, DoubleCRT const&, long, NTL::ZZ*) [534] NTL::Vec<NTL::zz_pX>::~Vec() [632] EncryptedArrayDerived<PA_zz_p>::getDegree() const
 [387] card(IndexSet const&) [559] NTL::Vec<std::shared_ptr<CubeSignature> >::~Vec() [114] NTL::zz_pContext::restore() const
  [25] RLWE1(DoubleCRT&, DoubleCRT const&, DoubleCRT const&, long) [560] NTL::Vec<std::unique_ptr<MatMul1DExec, std::default_delete<MatMul1DExec> > >::AllocateTo(long) [115] NTL::zz_pEContext::restore() const
 [419] mcMod(long, long)     [616] NTL::Vec<bool>::AllocateTo(long) [116] NTL::Vec<long>::MaxLength() const
 [480] phi_N(long)           [374] NTL::Vec<char>::~Vec() [255] Ctxt::findBaseSet(IndexSet&) const
 [434] mobius(long)          [451] NTL::Vec<double>::AllocateTo(long) [252] Ctxt::findBaseLevel() const
 [589] PolyRed(NTL::ZZX&, NTL::ZZX const&, long, bool) [415] NTL::Vec<unsigned char>::~Vec() [237] Ctxt::verifyPrimeSet() const
 [297] NTL::Vec<long> convert<NTL::Vec<long>, NTL::GF2X>(NTL::GF2X const&) [561] NTL::Vec<int>::AllocateTo(long) [427] Ctxt::modSwitchAddedNoiseVar() const
 [298] NTL::Vec<long> convert<NTL::Vec<long>, NTL::zz_pX>(NTL::zz_pX const&) [562] NTL::Vec<int>::DoSetLength(long, int const&) [20] Cmodulus::FFT(NTL::Vec<long>&, NTL::ZZX const&) const
 [590] void convert<NTL::ZZX, NTL::zz_pX>(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&) [105] NTL::Vec<long>::AllocateTo(long) [21] Cmodulus::FFT(NTL::Vec<long>&, NTL::Vec<long> const&) const
 [490] void convert<NTL::GF2X, NTL::ZZX>(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [147] NTL::Vec<long>::DoSetLength(long) [70] Cmodulus::iFFT(NTL::zz_pX&, NTL::Vec<long> const&) const
 [455] void convert<NTL::zz_pX, NTL::ZZX>(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [168] NTL::Vec<long>::FixLength(long) [3] Cmodulus::FFT_aux(NTL::Vec<long>&, NTL::zz_pX&) const
 [591] void convert<long, NTL::GF2X>(std::vector<long, std::allocator<long> >&, std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&) [617] NTL::Vec<long>::operator=(NTL::Vec<long> const&) [348] IndexSet::disjointFrom(IndexSet const&) const
 [481] convert(NTL::Mat<NTL::zz_pE>&, std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > > const&) [362] NTL::Vec<unsigned long>::AllocateTo(long) [85] IndexSet::next(long) const
 [410] convert(NTL::Vec<NTL::zz_pE>&, std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > const&) [377] NTL::Vec<unsigned long>::operator=(NTL::Vec<unsigned long> const&) [376] IndexSet::prev(long) const
 [288] convert(NTL::Vec<long>&, NTL::GF2X const&) [106] NTL::add(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [177] IndexSet::contains(IndexSet const&) const
 [299] convert(NTL::Vec<long>&, NTL::zz_pX const&) [74] NTL::add(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [88] IndexSet::contains(long) const
 [411] convert(std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >&, NTL::Vec<NTL::zz_pE> const&) [84] NTL::mul(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::zz_p> const&, NTL::Mat<NTL::zz_p> const&) [381] IndexSet::operator==(IndexSet const&) const
 [482] convert(std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >&, NTL::Mat<NTL::zz_pE> const&) [22] NTL::mul(NTL::fftRep&, NTL::fftRep const&, NTL::fftRep const&) [460] PAlgebra::frobenuisPow(long) const
 [435] void factorT<long>(std::vector<long, std::allocator<long> >&, long const&) (NumbTh.cpp) [76] NTL::conv(NTL::Vec<NTL::zz_p>&, NTL::Vec<NTL::ZZ> const&) [386] PAlgebra::genToPow(long, long) const
 [491] multOrd(long, long)   [107] NTL::conv(NTL::zz_pX&, long) [580] PAlgebra::operator==(PAlgebra const&) const
 [287] void vecCopy<Ctxt>(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, long) [563] void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<NTL::ZZ> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<NTL::ZZ> > const&) [132] DoubleCRT::breakIntoDigits(std::vector<DoubleCRT, std::allocator<DoubleCRT> >&, long) const
 [265] InvModpr(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&, long, long) [484] void NTL::conv<NTL::Vec<NTL::zz_p>, NTL::Vec<long> >(NTL::Vec<NTL::Vec<NTL::zz_p> >&, NTL::Vec<NTL::Vec<long> > const&) [53] DoubleCRT::toPoly(NTL::ZZX&, IndexSet const&, bool) const
 [229] ppInvert(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::zz_p> const&, long, long) [618] void NTL::conv<NTL::Vec<NTL::zz_pE>, NTL::Vec<NTL::zz_pX> >(NTL::Vec<NTL::Vec<NTL::zz_pE> >&, NTL::Vec<NTL::Vec<NTL::zz_pX> > const&) [633] DoubleCRT::toPoly(NTL::ZZX&, bool) const
 [539] ppInvert(NTL::Mat<NTL::zz_pE>&, NTL::Mat<NTL::zz_pE> const&, long, long) [335] void NTL::conv<NTL::Vec<NTL::zz_pX>, NTL::Vec<NTL::zz_pE> >(NTL::Vec<NTL::Vec<NTL::zz_pX> >&, NTL::Vec<NTL::Vec<NTL::zz_pE> > const&) [441] FHEPubKey::getKeySWmatrix(SKHandle const&, long) const
  [46] _ntl_gmul(_ntl_gbigint_body*, _ntl_gbigint_body*, _ntl_gbigint_body**) [245] void NTL::conv<NTL::Vec<long>, NTL::Vec<NTL::zz_p> >(NTL::Vec<NTL::Vec<long> >&, NTL::Vec<NTL::Vec<NTL::zz_p> > const&) [42] FHEPubKey::Encrypt(Ctxt&, NTL::ZZX const&, long, bool) const
 [527] bool poly_comp<NTL::GF2X>(NTL::GF2X const&, NTL::GF2X const&) [300] void NTL::conv<NTL::zz_p, NTL::ZZ>(NTL::Mat<NTL::zz_p>&, NTL::Mat<NTL::ZZ> const&) [189] FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&) const
 [528] bool poly_comp<NTL::zz_pX>(NTL::zz_pX const&, NTL::zz_pX const&) [269] void NTL::conv<NTL::zz_p, long>(NTL::Mat<NTL::zz_p>&, NTL::Mat<long> const&) [190] FHESecKey::Decrypt(NTL::ZZX&, Ctxt const&, NTL::ZZX&) const
 [540] sampleHWt(NTL::ZZX&, long, long) [384] NTL::zz_pX NTL::conv<NTL::zz_pX, NTL::ZZX>(NTL::ZZX const&) [163] FHESecKey::Encrypt(Ctxt&, NTL::ZZX const&, long, long) const
  [17] add1Dmats4dim(FHESecKey&, long, long) (KeySwitching.cpp) [272] void NTL::conv<long, NTL::zz_p>(NTL::Mat<long>&, NTL::Mat<NTL::zz_p> const&) [467] PtrVector<Ctxt>::isSet(long) const
 [310] keySwitchNoise(CtxtPart const&, FHEPubKey const&, long) (Ctxt.cpp) [108] NTL::zz_p::FFTInit(long) [117] __gnu_cxx::__aligned_buffer<std::pair<long const, NTL::Vec<long> > >::_M_ptr() const
 [197] MakeIndexVector(IndexSet const&, NTL::Vec<long>&) (DoubleCRT.cpp) [73] NTL::rem21(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pXModulus const&) [581] std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_check_len(unsigned long, char const*) const
 [457] dimSz(EncryptedArrayBase const&, long) (matmul.cpp) [60] NTL::zz_pX::normalize() [468] std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::find(std::pair<long, long> const&) const
 [497] dimNative(EncryptedArrayBase const&, long) (matmul.cpp) [109] NTL::fftRep::operator=(NTL::fftRep const&) [118] std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>::_M_next() const
 [592] setAlphaE(double&, long&, double, double, double, double, long, long) (recryption.cpp) [110] NTL::random(NTL::Vec<NTL::zz_p>&, long) [119] std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
   [5] FHEcontext::makeBootstrappable(NTL::Vec<long> const&, long, bool, bool) [619] NTL::Mat<NTL::GF2E>* NTL::MakeRaw<NTL::Mat<NTL::GF2E>, NTL::Mat<NTL::GF2E>&>(NTL::Mat<NTL::GF2E>&) [120] std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  [79] FHEcontext::AddPrime(long, long, bool) [283] NTL::Mat<NTL::zz_pE>* NTL::MakeRaw<NTL::Mat<NTL::zz_pE>, NTL::Mat<NTL::zz_pE>&>(NTL::Mat<NTL::zz_pE>&) [243] std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*)
 [173] FHEcontext::FHEcontext(unsigned long, unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [396] NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>* NTL::MakeRaw<NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>, NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&>(NTL::Lazy<NTL::Vec<NTL::zz_p>, NTL::DefaultDeleterPolicy>&) [121] void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#1}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#1} const&)
 [593] FHEcontext::~FHEcontext() [23] NTL::new_fft(long*, long const*, long, NTL::FFTPrimeInfo const&, long, long) [463] void std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2}>(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> const*)#2} const&)
  [75] auto_timer::stop()    [438] NTL::to_zz_p(long)    [244] std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
   [6] RecryptData::init(FHEcontext const&, NTL::Vec<long> const&, long, bool, bool, bool) [111] NTL::PlainMul(NTL::ZZX&, NTL::ZZX const&, NTL::ZZX const&) [328] std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)
 [594] RecryptData::~RecryptData() [69] NTL::PlainMul(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [122] long const& std::__pair_get<0ul>::__const_get<long const, NTL::Vec<long> >(std::pair<long const, NTL::Vec<long> > const&)
 [595] Step1Matrix<PA_GF2>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [49] NTL::PlainRem(NTL::zz_pX&, NTL::zz_pX const&, NTL::zz_pX const&) [517] std::_Deque_base<long, std::allocator<long> >::_M_initialize_map(unsigned long)
 [596] Step1Matrix<PA_GF2>::~Step1Matrix() [34] NTL::PowerMod(long, long, long) [518] std::_Deque_base<long, std::allocator<long> >::~_Deque_base()
 [221] Step1Matrix<PA_zz_p>::Step1Matrix(EncryptedArray const&, std::shared_ptr<CubeSignature>, NTL::Vec<long> const&, long, long, bool, bool) [112] NTL::SetCoeff(NTL::zz_pX&, long, NTL::zz_p) [123] std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::_Bit_const_iterator, std::_Bit_iterator>(std::_Bit_const_iterator, std::_Bit_const_iterator, std::_Bit_iterator)
 [597] Step1Matrix<PA_zz_p>::~Step1Matrix() [26] NTL::new_ifft(long*, long const*, long, NTL::FFTPrimeInfo const&, long) [538] std::unique_lock<std::mutex>::lock()
 [598] Step2Matrix<PA_GF2>::~Step2Matrix() [113] NTL::ProbPrime(long, long) [582] std::unique_lock<std::mutex>::unlock()
 [599] Step2Matrix<PA_zz_p>::~Step2Matrix() [24] NTL::new_fft_short(unsigned long*, long, long, long, NTL::new_mod_t const&) (FFT.cpp) [401] std::__shared_ptr<ConstMultiplier_zzX, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<ConstMultiplier_zzX>, NTL::Vec<long> >(std::_Sp_make_shared_tag, std::allocator<ConstMultiplier_zzX> const&, NTL::Vec<long>&&)
 [215] MatMul1DExec::MatMul1DExec(MatMul1D const&, bool) [4] NTL::FromModularRep(NTL::zz_p*, NTL::fftRep const&, long, long, NTL::zz_pInfoT*) (lzz_pX.cpp) [485] std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 [541] MatMul1DExec::~MatMul1DExec() [61] NTL::sha256_transform(NTL::SHA256_CTX&, unsigned char*) (ZZ.cpp) [486] std::_Sp_counted_ptr<CubeSignature*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 [138] PowerfulDCRT::PowerfulDCRT(FHEcontext const&, NTL::Vec<long> const&) [2] NTL::new_ifft_short1_notab(unsigned long*, long, long, NTL::new_mod_t const&, long, unsigned long, long, unsigned long) (FFT.cpp) [475] std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 [324] zz_pXModulus1::zz_pXModulus1(long, NTL::zz_pX const&) [1] NTL::new_ifft_short1_flipped(unsigned long*, long, NTL::new_mod_t const&) (FFT.cpp) [476] std::_Sp_counted_ptr<TNode<NTL::GF2X>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 [148] DoubleCRTHelper::~DoubleCRTHelper() [371] long NTL::operator==<NTL::zz_p>(NTL::Vec<NTL::zz_p> const&, NTL::Vec<NTL::zz_p> const&) [477] std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  [72] BlockMatMul1DExec::BlockMatMul1DExec(BlockMatMul1D const&, bool) [454] long NTL::operator==<NTL::zz_pE>(NTL::Vec<NTL::zz_pE> const&, NTL::Vec<NTL::zz_pE> const&) [478] std::_Sp_counted_ptr<TNode<NTL::zz_pX>*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 [542] BlockMatMul1DExec::~BlockMatMul1DExec() [209] Ctxt::modUpToSet(IndexSet const&) [361] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
 [600] PAlgebraModDerived<PA_GF2>::genCrtTable() [37] Ctxt::multiplyBy(Ctxt const&) [124] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >&, std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*, unsigned long)
 [601] PAlgebraModDerived<PA_GF2>::genMaskTable() [241] Ctxt::addConstant(DoubleCRT const&, double) [125] std::_Bit_const_iterator::_Bit_const_iterator(std::_Bit_iterator const&)
 [602] PAlgebraModDerived<PA_GF2>::PAlgebraModDerived(PAlgebra const&, long) [67] Ctxt::reLinearize(long) [442] CtxtPart* std::__uninitialized_copy<false>::__uninit_copy<CtxtPart*, CtxtPart*>(CtxtPart*, CtxtPart*, CtxtPart*)
 [603] PAlgebraModDerived<PA_GF2>::~PAlgebraModDerived() [31] Ctxt::modDownToSet(IndexSet const&) [390] NTL::zz_pX* std::__uninitialized_copy<false>::__uninit_copy<NTL::zz_pX*, NTL::zz_pX*>(NTL::zz_pX*, NTL::zz_pX*, NTL::zz_pX*)
 [326] PAlgebraModDerived<PA_zz_p>::genCrtTable() [71] Ctxt::keySwitchPart(CtxtPart const&, KeySwitch const&) [402] std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 [329] PAlgebraModDerived<PA_zz_p>::genMaskTable() [213] Ctxt::privateAssign(Ctxt const&) [403] std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 [261] PAlgebraModDerived<PA_zz_p>::PAlgebraModDerived(PAlgebra const&, long) [167] Ctxt::tensorProduct(Ctxt const&, Ctxt const&) [404] std::_Sp_counted_ptr_inplace<ConstMultiplier_zzX, std::allocator<ConstMultiplier_zzX>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 [604] PAlgebraModDerived<PA_zz_p>::~PAlgebraModDerived() [30] Ctxt::modDownToLevel(long) [405] std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 [274] PowerfulConversion::initPConv(PowerfulTranslationIndexes const&) [164] Ctxt::keySwitchDigits(KeySwitch const&, std::vector<DoubleCRT, std::allocator<DoubleCRT> >&) [406] std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 [397] ConstMultiplier_zzX::~ConstMultiplier_zzX() [180] Ctxt::addCtxt(Ctxt const&, bool) [407] std::_Sp_counted_ptr_inplace<ConstMultiplier_DoubleCRT, std::allocator<ConstMultiplier_DoubleCRT>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
  [13] ConstMultiplierCache::upgrade(FHEcontext const&) [192] Ctxt::addPart(DoubleCRT const&, SKHandle const&, bool, bool) [126] std::pair<long const, NTL::Vec<long> >::pair(std::pair<long const, NTL::Vec<long> > const&)
  [95] _ntl_rem_struct_fast::fetch() [505] Ctxt::Ctxt(ZeroCtxtLike_type, Ctxt const&) [519] void std::vector<ScratchCell, std::allocator<ScratchCell> >::_M_emplace_back_aux<ScratchCell>(ScratchCell&&)
 [543] EncryptedArrayDerived<PA_GF2>::EncryptedArrayDerived(FHEcontext const&, NTL::GF2X const&, PAlgebraMod const&) [446] Ctxt::Ctxt(FHEPubKey const&, long) [305] void std::vector<Cmodulus, std::allocator<Cmodulus> >::emplace_back<Cmodulus>(Cmodulus&&)
 [544] EncryptedArrayDerived<PA_GF2>::~EncryptedArrayDerived() [47] Ctxt::operator*=(Ctxt const&) [280] void std::vector<Cmodulus, std::allocator<Cmodulus> >::_M_emplace_back_aux<Cmodulus>(Cmodulus&&)
 [258] EncryptedArrayDerived<PA_zz_p>::EncryptedArrayDerived(FHEcontext const&, NTL::zz_pX const&, PAlgebraMod const&) [506] AddDAG::markAsAvailable(DAGnode*) [487] void std::vector<CtxtPart, std::allocator<CtxtPart> >::emplace_back<CtxtPart>(CtxtPart&&)
 [605] EncryptedArrayDerived<PA_zz_p>::~EncryptedArrayDerived() [507] AddDAG::allocateCtxtLike(Ctxt const&) [583] std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_assign(unsigned long, CtxtPart const&)
 [251] MatMul1D_derived_impl<PA_GF2>::processDiagonal1(NTL::GF2X&, long, EncryptedArrayDerived<PA_GF2> const&, MatMul1D_derived<PA_GF2> const&) [275] AddDAG::init(PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [375] std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_fill_insert(__gnu_cxx::__normal_iterator<CtxtPart*, std::vector<CtxtPart, std::allocator<CtxtPart> > >, unsigned long, CtxtPart const&)
 [240] MatMul1D_derived_impl<PA_zz_p>::processDiagonal1(NTL::zz_pX&, long, EncryptedArrayDerived<PA_zz_p> const&, MatMul1D_derived<PA_zz_p> const&) [179] AddDAG::apply(PtrVector<Ctxt>&, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&, long) [286] void std::vector<CtxtPart, std::allocator<CtxtPart> >::_M_emplace_back_aux<CtxtPart>(CtxtPart&&)
 [250] MatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [203] AddDAG::getCtxt(DAGnode*, PtrVector<Ctxt> const&, PtrVector<Ctxt> const&) [224] std::vector<CtxtPart, std::allocator<CtxtPart> >::operator=(std::vector<CtxtPart, std::allocator<CtxtPart> > const&)
 [238] MatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, MatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [14] EvalMap::upgrade() [634] std::vector<IndexSet, std::allocator<IndexSet> >::_M_default_append(unsigned long)
 [398] ConstMultiplier_DoubleCRT::~ConstMultiplier_DoubleCRT() [9] EvalMap::EvalMap(EncryptedArray const&, bool, NTL::Vec<long> const&, bool, bool, bool) [90] std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_fill_insert(__gnu_cxx::__normal_iterator<DoubleCRT*, std::vector<DoubleCRT, std::allocator<DoubleCRT> > >, unsigned long, DoubleCRT const&)
 [134] BlockMatMul1D_derived_impl<PA_GF2>::processDiagonal1(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >&, long, EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D_derived<PA_GF2> const&) [358] Cmodulus::getScratch_fftRep(long) [337] void std::vector<DoubleCRT, std::allocator<DoubleCRT> >::_M_emplace_back_aux<DoubleCRT const&>(DoubleCRT const&)
 [170] BlockMatMul1D_derived_impl<PA_zz_p>::processDiagonal1(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >&, long, EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D_derived<PA_zz_p> const&) [80] Cmodulus::Cmodulus(PAlgebra const&, long, long) [131] std::vector<DoubleCRT, std::allocator<DoubleCRT> >::resize(unsigned long, DoubleCRT const&)
 [140] PowerfulTranslationIndexes::PowerfulTranslationIndexes(NTL::Vec<long> const&) [267] Cmodulus::operator=(Cmodulus const&) [254] void std::vector<KeySwitch, std::allocator<KeySwitch> >::_M_emplace_back_aux<KeySwitch const&>(KeySwitch const&)
 [133] BlockMatMul1DExec_construct<PA_GF2>::apply(EncryptedArrayDerived<PA_GF2> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [293] IndexSet::intervalConstructor(long, long) [584] std::vector<NTL::Mat<NTL::GF2>, std::allocator<NTL::Mat<NTL::GF2> > >::_M_default_append(unsigned long)
 [169] BlockMatMul1DExec_construct<PA_zz_p>::apply(EncryptedArrayDerived<PA_zz_p> const&, BlockMatMul1D const&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >&, long) [309] IndexSet::insert(IndexSet const&) [635] std::vector<NTL::Mat<NTL::zz_p>, std::allocator<NTL::Mat<NTL::zz_p> > >::_M_default_append(unsigned long)
  [56] NTL::FromfftRep(NTL::zz_pX&, NTL::fftRep&, long, long) [196] IndexSet::insert(long) [636] std::vector<NTL::Vec<long>, std::allocator<NTL::Vec<long> > >::_M_default_append(unsigned long)
 [458] NTL::GF2XModulus::~GF2XModulus() [218] IndexSet::remove(IndexSet const&) [443] std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >::_M_default_append(unsigned long)
  [96] NTL::KarSqr_long(NTL::zz_p*, NTL::zz_p const*, long, NTL::zz_p*) [239] IndexSet::remove(long) [394] std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::_M_default_append(unsigned long)
 [156] NTL::scope_guard<void NTL::default_BlockConstructFromObj<Ctxt>(Ctxt*, long, Ctxt const&)::{lambda()#1}>::relax() [216] IndexSet::retain(IndexSet const&) [409] std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::resize(unsigned long)
 [157] NTL::scope_guard<void NTL::default_BlockConstructFromObj<Ctxt>(Ctxt*, long, Ctxt const&)::{lambda()#1}>::~scope_guard() [440] IndexSet::emptySet() [469] std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::vector(unsigned long, std::allocator<NTL::GF2X> const&)
  [97] NTL::scope_guard<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>::scope_guard({lambda()#1}&&, char const*) [158] IndexSet::~IndexSet() [379] std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::~vector()
 [529] NTL::MakeSmartAux<NTL::zz_pEInfoT>::~MakeSmartAux() [176] PAlgebra::PAlgebra(unsigned long, unsigned long, std::vector<long, std::allocator<long> > const&, std::vector<long, std::allocator<long> > const&) [464] std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >::operator=(std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > const&)
  [83] NTL::mul_strassen(NTL::mat_window_zz_p const&, NTL::const_mat_window_zz_p const&, NTL::const_mat_window_zz_p const&) [32] DoubleCRT::scaleDownToSet(IndexSet const&, long) [637] std::vector<NTL::GF2EX, std::allocator<NTL::GF2EX> >::_M_default_append(unsigned long)
 [498] NTL::zz_pXModulus::~zz_pXModulus() [198] DoubleCRT::addPrimesAndScale(IndexSet const&) [391] std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::_M_default_append(unsigned long)
 [399] NTL::PartitionInfo::PartitionInfo(long, long) [135] DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(NTL::ZZX const&, DoubleCRT::AddFun) [413] std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::resize(unsigned long)
  [43] NTL::PlainInvTrunc(NTL::zz_pX&, NTL::zz_pX const&, long) [136] DoubleCRT& DoubleCRT::Op<DoubleCRT::AddFun>(DoubleCRT const&, DoubleCRT::AddFun, bool) [470] std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::vector(unsigned long, std::allocator<NTL::zz_pX> const&)
  [98] NTL::FromModularRep(NTL::ZZ_p&, NTL::Vec<long>&, NTL::ZZ_pFFTInfoT const*, NTL::ZZ_pTmpSpaceT*) [51] DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZ const&, DoubleCRT::MulFun) [378] std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::~vector()
  [99] NTL::NextPowerOfTwo(long) [456] DoubleCRT& DoubleCRT::Op<DoubleCRT::MulFun>(NTL::ZZX const&, DoubleCRT::MulFun) [292] std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >::operator=(std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > const&)
 [100] NTL::RandomLen_long(long) [41] DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(NTL::ZZX const&, DoubleCRT::SubFun) [638] std::vector<NTL::zz_pEX, std::allocator<NTL::zz_pEX> >::_M_default_append(unsigned long)
  [59] NTL::TofftRep_trunc(NTL::fftRep&, NTL::zz_pX const&, long, long, long, long) [66] DoubleCRT& DoubleCRT::Op<DoubleCRT::SubFun>(DoubleCRT const&, DoubleCRT::SubFun, bool) [644] void std::vector<FHEtimer*, std::allocator<FHEtimer*> >::_M_emplace_back_aux<FHEtimer* const&>(FHEtimer* const&)
  [19] NTL::RandomStream_impl::get_bytes(unsigned char*, long, long) [263] DoubleCRT::Exp(long) [585] std::vector<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> >, std::allocator<std::vector<NTL::ZZX, std::allocator<NTL::ZZX> > > >::_M_default_append(unsigned long)
 [101] void NTL::default_BlockDestroy<NTL::ZZ>(NTL::ZZ*, long) [18] DoubleCRT::FFT(NTL::Vec<long> const&, IndexSet const&) [639] std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::_M_default_append(unsigned long)
   [8] void NTL::default_BlockDestroy<long>(long*, long) [11] DoubleCRT::FFT(NTL::ZZX const&, IndexSet const&) [520] std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::vector(unsigned long, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > const&)
 [102] void NTL::BlockConstructFromVec<long>(long*, long, long const*) [65] DoubleCRT::do_mul(DoubleCRT const&, bool) [521] std::vector<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> >, std::allocator<std::vector<NTL::GF2X, std::allocator<NTL::GF2X> > > >::~vector()
 [606] void NTL::default_BlockConstruct<PowerfulConversion>(PowerfulConversion*, long) [139] DoubleCRT::addPrimes(IndexSet const&) [640] std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::_M_default_append(unsigned long)
 [436] void NTL::default_BlockConstruct<NTL::zz_pXModulus>(NTL::zz_pXModulus*, long) [204] DoubleCRT::automorph(long) [522] std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::vector(unsigned long, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > const&)
 [103] NTL::FFTMulTabsDeleterPolicy::deleter(NTL::FFTMulTabs*) [64] DoubleCRT::randomize(NTL::ZZ const*) [523] std::vector<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> >, std::allocator<std::vector<NTL::zz_pX, std::allocator<NTL::zz_pX> > > >::~vector()
  [29] void NTL::default_BlockConstructFromVec<long>(long*, long, long const*) [142] DoubleCRT::DoubleCRT(FHEcontext const&) [641] std::vector<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_M_default_append(unsigned long)
 [104] NTL::ZZ::~ZZ()        [188] DoubleCRT::DoubleCRT(FHEcontext const&, IndexSet const&) [524] std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::_M_default_append(unsigned long)
 [607] NTL::Mat<NTL::Mat<NTL::GF2> >::SetDims(long, long) [15] DoubleCRT::DoubleCRT(NTL::Vec<long> const&, FHEcontext const&) [525] std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::resize(unsigned long)
 [608] NTL::Mat<NTL::Mat<NTL::zz_p> >::SetDims(long, long) [38] DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&, IndexSet const&) [471] std::vector<std::shared_ptr<ConstMultiplier>, std::allocator<std::shared_ptr<ConstMultiplier> > >::~vector()
 [545] NTL::Mat<NTL::ZZ>::SetDims(long, long) [184] DoubleCRT::DoubleCRT(NTL::ZZX const&, FHEcontext const&) [479] void std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::_M_emplace_back_aux<std::pair<long, long> >(std::pair<long, long>&&)
 [444] NTL::Mat<NTL::GF2>::SetDims(long, long) [28] DoubleCRT::operator=(NTL::ZZX const&) [86] std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
 [546] NTL::Mat<NTL::GF2>::Mat(NTL::Mat<NTL::GF2> const&) [207] DoubleCRT::operator=(DoubleCRT const&) [526] std::vector<long, std::allocator<long> >::_M_fill_assign(unsigned long, long const&)
 [499] NTL::Mat<NTL::GF2>::operator=(NTL::Mat<NTL::GF2> const&) [564] FHEPubKey::setKeySwitchMap(long) [586] std::vector<long, std::allocator<long> >::_M_default_append(unsigned long)
 [151] NTL::Mat<NTL::GF2E>::SetDims(long, long) [55] FHESecKey::ImportSecKey(DoubleCRT const&, long, long, long) [382] void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long const&>(long const&)
 [609] NTL::Mat<NTL::GF2E>::Mat(NTL::Mat<NTL::GF2E> const&) [7] FHESecKey::GenKeySWmatrix(long, long, long, long, long) [587] std::vector<long, std::allocator<long> >::operator=(std::vector<long, std::allocator<long> > const&)
 [547] NTL::Mat<NTL::GF2X>::SetDims(long, long) [52] FHESecKey::genRecryptData() [642] std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned long)
 [145] NTL::Mat<NTL::zz_p>::SetDims(long, long) [447] KeySwitch::dummy() [472] std::pair<std::_Rb_tree_iterator<std::pair<std::pair<long, long> const, DAGnode> >, bool> std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_emplace_unique<std::pair<long, long>&, DAGnode>(std::pair<long, long>&, DAGnode&&)
 [322] NTL::Mat<NTL::zz_p>::Mat(NTL::Mat<NTL::zz_p> const&) [159] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >::allocate(unsigned long, void const*) [450] std::_Rb_tree<std::pair<long, long>, std::pair<std::pair<long, long> const, DAGnode>, std::_Select1st<std::pair<std::pair<long, long> const, DAGnode> >, std::less<std::pair<long, long> >, std::allocator<std::pair<std::pair<long, long> const, DAGnode> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<long, long> const, DAGnode> >*)
 [225] NTL::Mat<NTL::zz_p>::operator=(NTL::Mat<NTL::zz_p> const&) [160] __gnu_cxx::new_allocator<std::pair<long const, NTL::Vec<long> > >::new_allocator() [127] std::__detail::_Equal_helper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, NTL::Vec<Ctxt> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, unsigned long, true>::_S_equals(std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, NTL::Vec<Ctxt> >, true>*)
 [416] NTL::Mat<NTL::zz_pE>::SetDims(long, long) [327] FHEcontext::logOfProduct(IndexSet const&) const [62] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>*)
 [282] NTL::Mat<NTL::zz_pE>::Mat(NTL::Mat<NTL::zz_pE> const&) [81] FHEcontext::productOfPrimes(NTL::ZZ&, IndexSet const&) const [63] std::__detail::_Hash_node_value_base<std::pair<long const, NTL::Vec<long> > >::_M_valptr()
 [530] NTL::Mat<NTL::zz_pX>::SetDims(long, long) [620] FHEcontext::operator==(FHEcontext const&) const [48] std::__detail::_Map_base<long, std::pair<long const, NTL::Vec<long> >, std::allocator<std::pair<long const, NTL::Vec<long> > >, std::__detail::_Select1st, std::equal_to<long>, std::hash<long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](long const&)
 [271] NTL::Mat<long>::SetDims(long, long) [621] RecryptData::operator==(RecryptData const&) const [161] std::bad_alloc::bad_alloc()
 [610] NTL::Vec<PowerfulConversion>::AllocateTo(long) [565] Step1Matrix<PA_GF2>::multipleTransforms() const [128] void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}&& std::forward<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>(std::remove_reference<void NTL::default_BlockConstructFromVec<long>(long*, long, long const*)::{lambda()#1}>::type&)
 [548] NTL::Vec<NTL::Vec<NTL::ZZ> >::AllocateTo(long) [508] Step1Matrix<PA_GF2>::get(NTL::Mat<NTL::GF2>&, long, long, long) const [129] std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>* std::addressof<std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false> >(std::__detail::_Hash_node<std::pair<long const, NTL::Vec<long> >, false>&)
 [549] void NTL::Vec<NTL::Vec<NTL::ZZ> >::DoSetLengthAndApply<NTL::Mat<NTL::ZZ>::Fixer>(long, NTL::Mat<NTL::ZZ>::Fixer&) [622] Step1Matrix<PA_GF2>::getEA() const [217] operator&(IndexSet const&, IndexSet const&)
 [500] NTL::Vec<NTL::Vec<NTL::ZZ> >::swap(NTL::Vec<NTL::Vec<NTL::ZZ> >&) [509] Step1Matrix<PA_GF2>::getDim() const [230] operator/(IndexSet const&, IndexSet const&)
 [430] NTL::Vec<NTL::Vec<NTL::GF2> >::AllocateTo(long) [566] Step1Matrix<PA_zz_p>::multipleTransforms() const [373] operator>=(IndexSet const&, IndexSet const&)
 [445] void NTL::Vec<NTL::Vec<NTL::GF2> >::DoSetLengthAndApply<NTL::Mat<NTL::GF2>::Fixer>(long, NTL::Mat<NTL::GF2>::Fixer&) [278] Step1Matrix<PA_zz_p>::get(NTL::Mat<NTL::zz_p>&, long, long, long) const [370] operator<=(IndexSet const&, IndexSet const&)
 [550] NTL::Vec<NTL::Vec<NTL::GF2> >::Init(long, NTL::Vec<NTL::GF2> const*) [623] Step1Matrix<PA_zz_p>::getEA() const [162] operator new(unsigned long, void*)
 [483] NTL::Vec<NTL::Vec<NTL::GF2> >::~Vec() [510] Step1Matrix<PA_zz_p>::getDim() const [325] operator|(IndexSet const&, IndexSet const&)
 [501] NTL::Vec<NTL::Vec<NTL::GF2> >::operator=(NTL::Vec<NTL::Vec<NTL::GF2> > const&) [567] Step2Matrix<PA_GF2>::multipleTransforms() const [349] <cycle 1>
 [611] NTL::Vec<NTL::Vec<NTL::Mat<NTL::GF2> > >::AllocateTo(long) [511] Step2Matrix<PA_GF2>::get(NTL::GF2X&, long, long, long) const
